[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Theory of Electromagnetic Methods",
    "section": "",
    "text": "Prerequisites\nHere are the lecture notes for the 2024 module covering the Theory of Electromagnetic Methods. These notes are tailored for Master’s students of Geophysics and Geoinformatics at the Institute of Geophysics and Geoinformatics, TU Bergakademie Freiberg.\nYou can access all the materials on the GitHub repository https://github.com/ruboerner/ThEM.\nEnjoy studying!",
    "crumbs": [
      "Prerequisites"
    ]
  },
  {
    "objectID": "index.html#background",
    "href": "index.html#background",
    "title": "Theory of Electromagnetic Methods",
    "section": "Background",
    "text": "Background\nThis course targets Master’s students in their second semester, with a recommended understanding of fundamental geoelectromagnetic applications. Additionally, prior completion of the Theoretical Physics - Electrodynamics course is strongly advised as a prerequisite for this lecture.",
    "crumbs": [
      "Prerequisites"
    ]
  },
  {
    "objectID": "index.html#code",
    "href": "index.html#code",
    "title": "Theory of Electromagnetic Methods",
    "section": "Code",
    "text": "Code\nThe website’s course material includes sections with embedded Python code.\nYou can easily copy the code and execute it in a compatible Python runtime environment.\nFor an optimal experience, we recommend installing Python via miniconda.\nMoreover, you have the freedom to explore your own concepts and delve deeper into the course content by creating your personalized Jupyter notebooks. You can utilize any of the following platforms:\n\nVisual Studio Code\nJupyterlab\nQuarto\nmystMD.\n\nWorking with Jupyter Notebooks in Visual Studio Code is exceptionally straightforward.",
    "crumbs": [
      "Prerequisites"
    ]
  },
  {
    "objectID": "index.html#self-study",
    "href": "index.html#self-study",
    "title": "Theory of Electromagnetic Methods",
    "section": "Self study",
    "text": "Self study\nThere are individual small tasks for self-study that are scattered throughout the lecture.\n\n\n\n\n\n\nSelf study\n\n\n\nYou can easily identify these callouts.",
    "crumbs": [
      "Prerequisites"
    ]
  },
  {
    "objectID": "index.html#recommended-reading",
    "href": "index.html#recommended-reading",
    "title": "Theory of Electromagnetic Methods",
    "section": "Recommended Reading",
    "text": "Recommended Reading\nThe most important source of supplementary information is the book by Ward & Hohmann (1988).",
    "crumbs": [
      "Prerequisites"
    ]
  },
  {
    "objectID": "index.html#license",
    "href": "index.html#license",
    "title": "Theory of Electromagnetic Methods",
    "section": "License",
    "text": "License\nThis material is licensed under a Creative Commons License.\n\n\n\n\nWard, S.H. & Hohmann, G.W., 1988. Electromagnetic theory for geophysical applications. Electromagnetic methods in applied geophysics, Vol. 1, pp. 131–311.",
    "crumbs": [
      "Prerequisites"
    ]
  },
  {
    "objectID": "preface.html",
    "href": "preface.html",
    "title": "1  Preface",
    "section": "",
    "text": "These lecture notes serve as a supplement to the course.\nWe deal with the following problems:\n\nElectromagnetic fields and their mathematical description using Maxwell’s equations\nPartial differential equations and their solutions\nFields of dipole sources in a uniform fullspace\nDipole induction over a stratified halfspace\nTime-domain EM\nNumerical evaluation of Hankel integrals\nOutlook on numerical methods in 2D and 2D\n\nThe course deals in particular with all the details that serve to solve the problem of calculating airborne EM fields.",
    "crumbs": [
      "Introduction",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Preface</span>"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "2  Electromagnetic fields",
    "section": "",
    "text": "2.1 Material properties\nIn electromagnetics we have the following material properties:\nIn the context of geo-electromagnetics, these parameters are associated with particular rock properties which are studied in petrophysics.",
    "crumbs": [
      "Introduction",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Electromagnetic fields</span>"
    ]
  },
  {
    "objectID": "intro.html#material-properties",
    "href": "intro.html#material-properties",
    "title": "2  Electromagnetic fields",
    "section": "",
    "text": "electrical conductivity \\(\\sigma\\)\ndielectrical permittivity \\(\\varepsilon\\)\nmagnetic permeability \\(\\mu\\).",
    "crumbs": [
      "Introduction",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Electromagnetic fields</span>"
    ]
  },
  {
    "objectID": "intro.html#simplifications",
    "href": "intro.html#simplifications",
    "title": "2  Electromagnetic fields",
    "section": "2.2 Simplifications",
    "text": "2.2 Simplifications\nAs we know from theroretical physics, the relations between the fields and the associated parameters are very general and allow, e.g., strong frequency-dependency or non-linearities.\nIn geo-electromagnetics, however, we can allow for a few simplifications.\nAll rock parameters are supposed to be\n\nlinear with respect to the fields\nstationary, and\nisotropic.\n\nWe will see later that anisotropy is a quite general rock property which needs to be considered in the interpretation of geo-electromagnetic field data.\nMoreover, we will first study the general properties of the EM induction in a uniform full-space by neglecting any spatial inhomogeneities of the parameters.",
    "crumbs": [
      "Introduction",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Electromagnetic fields</span>"
    ]
  },
  {
    "objectID": "fourier.html",
    "href": "fourier.html",
    "title": "3  Fourier transform",
    "section": "",
    "text": "3.1 Example\nIn this example we use a Fourier series expansion to approximate the periodic square function \\(u(x)\\) of length \\(2L\\).\nAn analytic formula for a square wave with unit amplitude and period \\(2L\\) is given by \\(u(x) = \\mathrm{sign}(\\sin(\\frac{\\pi x}{L})\\).\nShow the code\nx = np.arange(0, 4, 0.001)\nu = [np.sign(np.sin(np.pi * v / 2)) for v in x]\nfig, ax = plt.subplots(figsize=(4, 3))\nax.plot(x, u)\nax.fill_between(x, u, np.zeros_like(u), alpha=0.3)\nax.set_xlabel('x')\nax.set_ylabel('u(x)')\nax.set_title('Square wave')\nax.set_aspect('equal')\nax.grid(True)\nThe Fourier series expansion for a periodic square wave \\(u(x)\\) is\n\\[\nu(x) = \\lim_{N \\to \\infty} \\frac{4}{\\pi} \\sum_{n=1,3,5, \\ldots}^{N} \\frac{1}{n} \\sin \\left(\\frac{n \\pi x}{L}\\right).\n\\]\nA change of the running index \\(n\\) yields a representation which is better suited for numerical implementation:\n\\[\nu(x) = \\lim_{N \\to \\infty} \\frac{4}{\\pi} \\sum_{k=1}^{N} \\frac{1}{2k-1} \\sin \\left(\\frac{(2k-1) \\pi x}{L}\\right).\n\\]\nIn theory, the sequence of summations is infinite, whereas in general we deal with a truncated series, i.e., \\(N \\ll \\infty\\).",
    "crumbs": [
      "Introduction",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Fourier transform</span>"
    ]
  },
  {
    "objectID": "fourier.html#example",
    "href": "fourier.html#example",
    "title": "3  Fourier transform",
    "section": "",
    "text": "3.1.1 Implementation\nFirst we write a Python function which calculates the individual sine terms\n\\[\nu_k(x) =  \\frac{1}{2k-1} \\sin \\left(\\frac{(2k-1) \\pi x}{L}\\right)\n\\]\nThis function is called uk and takes the arguments x and the index k. The window length L takes the default setting of 0.5.\n\n\nShow the code\ndef uk(x, k, L=0.5):\n    return np.sin(np.pi * (2 * k - 1) * x / L) / (2 * k - 1)\n\n\nNext, we implement the summation over all \\(k\\) sine terms, i.e., \\[\nu(x) \\approx \\frac{4}{\\pi} \\sum_{k=1}^N u_k(x)\n\\]\n\n\nShow the code\ndef u(x, k, L):\n    value = 4 / np.pi * \\\n        sum(uk(x, i, L) for i in range(1, k+1)) if k &gt; 0 else np.zeros_like(x)\n    return value\n\n\n\n\nShow the code\nL = 2\norder = 4\nx = np.arange(0, 2*L, 0.001)\nu_n = [np.sign(np.sin(np.pi * v / L)) for v in x]\nfig, ax = plt.subplots(nrows=2, ncols=1, sharex=True, layout='constrained')\nax[0].plot(x, u(x, order, L))\nax[0].fill_between(x, u_n, np.zeros_like(u_n), alpha=0.3)\n#ax[0].set_xlabel('x')\nax[0].set_ylabel('u(x)')\nax[0].set_title(f'Fourier series expansion for order={order}')\nax[0].set_aspect('equal')\nax[0].grid(True)\n\norder = 42\nax[1].plot(x, u(x, order, L))\nax[1].fill_between(x, u_n, np.zeros_like(u_n), alpha=0.3)\nax[1].set_xlabel('x')\nax[1].set_ylabel('u(x)')\nax[1].set_title(f'Fourier series expansion for order={order}')\nax[1].set_aspect('equal')\nax[1].grid(True);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNote the Gibbs phenomenon at the jumps of the square wave. This is a typical behaviour of a piecewise differentiable continuous periodic function. As the expansion order gets large, the overshoot does not die out, but approaches a finite limit.\nIt can be shown that, for sufficiently large \\(N\\), the full overshooting is around 17.9 % larger than the jump in the original function.",
    "crumbs": [
      "Introduction",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Fourier transform</span>"
    ]
  },
  {
    "objectID": "maxwell.html",
    "href": "maxwell.html",
    "title": "4  Maxwell’s Equations",
    "section": "",
    "text": "4.1 Constitutive equations\nThe goal is to couple these equations. This can be achieved with the use of the constitutive equations, which are\n\\[\n\\begin{align}\n\\mathbf d & = \\varepsilon \\mathbf e \\\\\n\\mathbf b & = \\mu \\mathbf h\n\\end{align}\n\\tag{4.5}\\]\nGenerally, the linear parameters \\(\\varepsilon, \\mu\\) are rank-2 tensors represented as 3-by-3 matrices.",
    "crumbs": [
      "Maxwell's equations",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Maxwell's Equations</span>"
    ]
  },
  {
    "objectID": "maxwell.html#ohms-law",
    "href": "maxwell.html#ohms-law",
    "title": "4  Maxwell’s Equations",
    "section": "4.2 Ohm’s law",
    "text": "4.2 Ohm’s law\nIn an electrically conductive medium, any electric field gives rise to an electric current. This current is expressed by its current density as\n\\[\n\\mathbf j = \\sigma \\mathbf e,\n\\tag{4.6}\\]\nwhere \\(\\sigma\\) is a rank-2 tensor.\nThis tensor can be represented in matrix form as\n\\[\n\\sigma =   \\begin{pmatrix}    \\sigma_{11} & \\sigma_{12} & \\sigma_{13} \\\\    \\sigma_{21} & \\sigma_{22} & \\sigma_{23} \\\\    \\sigma_{31} & \\sigma_{32} & \\sigma_{33}   \\end{pmatrix}.\n\\]\nTensors like introduced here cause anisotropy, i.e., the material properties have different values across different spatial directions.\nA typical observation would be the deviation of the induced current density from the direction of the driving electric field.\n\n4.2.1 Remarks about anisotropy\nThe rank-2 tensor of electrical conductivity \\(\\tilde\\sigma\\) may be represented in matrix form as\n\\[\n  \\hat\\sigma =\n  \\begin{pmatrix}\n    \\sigma_{11} & \\sigma_{12} & \\sigma_{13} \\\\\n    \\sigma_{21} & \\sigma_{22} & \\sigma_{23} \\\\\n    \\sigma_{31} & \\sigma_{32} & \\sigma_{33}\n  \\end{pmatrix}.\n\\]\nAny real symmetric (n-by-n) matrix \\(A\\) can be diagonalized (principal axis theorem), such that\n\\[\nD_A = S^\\top A S  \n\\]\nis a diagonal matrix, and \\(S\\) is an orthogonal matrix.\nInterpreting the matrix \\(A\\) as a linear map in \\(\\mathbb {R} ^3\\), then the matrix \\(S\\) can be thought of as a transformation to the new basis. Between the old and new coordinates there is the relation \\(\\mathbf {x}=S \\boldsymbol {\\xi }\\). The action of the matrix \\(A\\) in the new coordinate system is taken over by the diagonal matrix \\(D_{A}\\).\nAfter transformation of the tensor in diagonal form, we have \\[\n  \\tilde\\sigma =\n  \\begin{pmatrix}\n    \\sigma_{xx} & 0 & 0 \\\\\n    0 & \\sigma_{yy} & 0 \\\\\n    0 & 0 & \\sigma_{zz}\n  \\end{pmatrix}.\n\\]\nIf \\(\\sigma_{xx} = \\sigma_{yy} = \\sigma_{zz} = \\sigma\\), then \\[\n  \\tilde\\sigma = \\sigma\n  \\begin{pmatrix}\n    1 & 0 & 0 \\\\\n    0 & 1 & 0 \\\\\n    0 & 0 & 1\n  \\end{pmatrix} = \\sigma.\n\\] In this case, the conductivity does not depend on the spatial direction and hence is labelled isotropic.",
    "crumbs": [
      "Maxwell's equations",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Maxwell's Equations</span>"
    ]
  },
  {
    "objectID": "pde.html",
    "href": "pde.html",
    "title": "5  Partial Differential Equations",
    "section": "",
    "text": "5.1 The curl-curl equation\nWe first eliminate one field from the set of Maxwell’s equations by applying the curl operator (\\(\\curl\\)) to one of the equations, i.e., Faraday’s law 4.2.\nThis results in a second-order PDE because we differentiate twice with respect to spatial coordinates.\nFinally, we obtain the curl-curl equation for the electric field \\(\\mathbf e\\) as \\[\n\\curl \\curl \\mathbf e  +\\mu \\sigma \\partial_t \\mathbf e + \\mu \\varepsilon \\partial^2_{tt} \\mathbf e = \\mathbf 0.\n\\tag{5.1}\\]\nThis is a second-order PDE with first- and second-order time derivatives.\nNote that you obtain a similar PDE for the magnetic field \\(\\mathbf h\\) if you apply the steps outlined above to Ampere’s law.\nOften, a slightly different form of 5.1 is used.\nThe following identity is useful for any vector field \\(\\mathbf f\\): \\[\n\\curl \\curl \\mathbf f = \\grad \\divergence \\mathbf f - \\laplacian \\mathbf f\n\\tag{5.2}\\]\nThis equation is useful, e.g., when \\(\\divergence \\mathbf f = 0\\). In this case the curl-curl operator can be replaced by \\(-\\laplacian\\), the vector Laplace operator defined over a vector field.\nUnder which conditions can we switch from the curl-curl to the Laplace operator? Clearly, the term \\(\\grad \\divergence \\mathbf f\\) must vanish (or its contribution must be negligible).",
    "crumbs": [
      "Maxwell's equations",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Partial Differential Equations</span>"
    ]
  },
  {
    "objectID": "pde.html#the-curl-curl-equation",
    "href": "pde.html#the-curl-curl-equation",
    "title": "5  Partial Differential Equations",
    "section": "",
    "text": "Tip\n\n\n\n\n\n\\[\n\\begin{align}\n\\curl \\mathbf e  & = -\\partial_t \\mathbf b \\\\\n\\curl \\curl \\mathbf e & = \\curl (-\\partial_t \\mathbf b) \\\\\n  & = -\\curl (\\partial_t \\mathbf b) \\\\\n  & = -\\partial_t\\curl  \\mathbf b \\\\\n  & = -\\partial_t\\curl ( \\mu \\mathbf h) \\\\\n  & = -\\partial_t \\mu \\curl \\mathbf h \\\\\n  & = -\\mu \\partial_t \\curl \\mathbf h \\\\\n  & = -\\mu \\partial_t (\\mathbf j + \\partial_t \\mathbf d) \\\\\n  & = -\\mu \\partial_t (\\sigma \\mathbf e + \\partial_t \\mathbf d) \\\\\n  & = -\\mu \\partial_t (\\sigma \\mathbf e + \\partial_t \\varepsilon \\mathbf e) \\\\\n  & = -\\mu \\partial_t \\sigma \\mathbf e -\\mu \\partial^2_{tt} \\varepsilon \\mathbf e \\\\\n  & = -\\mu \\sigma \\partial_t \\mathbf e -\\mu \\varepsilon \\partial^2_{tt} \\mathbf e\n\\end{align}\n\\]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\nThe vector Laplacian is similar to the scalar Laplacian. The scalar Laplacian applies to a scalar field and returns a scalar quantity, whereas the vector Laplacian applies to a vector field and returns a vector quantity.\nIn Cartesian coordinates, the returned vector field is equal to the vector field of the scalar Laplacian applied to each vector component.\n\n\n\n\n5.1.1 Decay of free charges\nWhen the electric field \\(\\mathbf e\\) is considered, we are faced with the following problem: Under which conditions \\(\\divergence \\mathbf e\\) becomes negligible small?\nThe answer should be clear: When there are no free charges present in the considered domain, there is no associated electric field.\nRecall, that in a uniform dielectric medium there holds Gauß’ s law for electric charges\n\\[\n\\divergence \\mathbf e = \\frac{\\rho_E}{\\varepsilon},\n\\]\nwhere \\(\\rho_E\\) is the volume charge density and \\(\\varepsilon = \\varepsilon_r \\varepsilon_0\\) is the permittivity.\nLet’s find out how to solve the problem.\nWe want to show that \\(\\divergence \\mathbf e \\approx 0\\) for some time \\(t&gt;0\\). As long as \\(t \\le 0\\), there is a certain charge density \\(\\rho_E(t)\\) concentrated at, e.g., the origin of a uniform fullspace.\nWe apply the divergence operator to Ampere’s law:\n\\[\n\\begin{align}\n\\divergence \\curl \\mathbf h & = \\divergence \\mathbf j + \\partial_t \\divergence \\mathbf d \\\\\n& = 0\n\\end{align}\n\\]\nWith \\[\n\\begin{align}\n\\divergence \\mathbf d & = \\rho_E \\\\\n\\divergence \\mathbf j & = \\divergence (\\sigma \\mathbf e) = \\grad \\sigma \\cdot \\mathbf e + \\sigma \\divergence \\mathbf e \\\\\n\\sigma \\divergence \\mathbf e & = \\sigma \\frac{\\rho_E}{\\varepsilon}\n\\end{align}\n\\] we obtain an initial-value problem for the charge density\n\\[\n\\frac{\\sigma}{\\varepsilon} \\rho_E + \\dot{\\rho_E} = 0.\n\\]\nIts solution is\n\\[\n\\rho_E(t) = \\rho_E(0) \\exp\\left({-\\frac{\\sigma}{\\varepsilon}t}\\right).\n\\tag{5.3}\\]\n\n5.1.1.1 Numerical experiment\nTo study the decay of a free charge denoted by an electrical charge density, we define as initial condition for \\(t=0\\) that \\(\\rho_E(0) = 1~A\\cdot s\\cdot m^{-3}\\) .\nFurther, the conductivity of the uniform fullspace is 0.01 S/m.\nWe plot the function 5.3 for a very small time window:\n\n\nShow the code\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nsigma_n = 0.01\nepsilon_n = 8.854e-12\n\ndef rho(t):\n  return np.exp(-sigma_n/epsilon_n * t)\n\nt_n = np.logspace(-13, -7, num=71, endpoint=True)\n\nfig, ax = plt.subplots(1, 1, figsize=(6,4))\nax.semilogx(t_n, rho(t_n))\nax.set_xlabel('t in s')\nax.set_ylabel(r'$\\rho_E(t)/\\rho_E(0)$')\nax.axvspan(1e-8, t_n[-1], color='green', alpha=0.1, label=r'$\\rho_E(t)$ small')\nax.legend()\nax.grid(True)\n\n\n\n\n\n\n\n\n\nBy visual inspection, after approx. 10 ns the volume charge density has dropped to zero.\nLet’s be more precise:\nWe can calculate the time at which the charge density decays to a given fraction of its initial value, e.g., to 1 ppm.\n\n\nShow the code\nfrom sympy import *\n\nt, sigma, epsilon, rho0 = symbols('t sigma epsilon rho_0', real=True)\nrhoE = symbols('rho_E')\n\nexpr = rhoE - rho0 * exp(-sigma / epsilon * t)\n\ntt = solve(expr, t)\ntt[0]\n\n\n\\(\\displaystyle \\frac{\\epsilon \\log{\\left(\\frac{\\rho_{0}}{\\rho_{E}} \\right)}}{\\sigma}\\)\n\n\nWe find that the time \\(t\\) at which a certain fraction of the initial charge density is obtained, can be calculated using\n\\[\n\\hat{t} = \\frac{\\epsilon }{\\sigma}\\log{\\left(\\frac{\\rho_{0}}{\\rho_{E}} \\right)} = -\\frac{\\epsilon }{\\sigma}\\log{\\left(\\frac{\\rho_{E}}{\\rho_{0}} \\right)}\n\\]\n\n\nShow the code\ntstar = -epsilon_n / sigma_n * np.log(1e-6)\n\n\nWith the values given above, the charge density drops to 1 ppm of its initial value after 1.22e-08 seconds.",
    "crumbs": [
      "Maxwell's equations",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Partial Differential Equations</span>"
    ]
  },
  {
    "objectID": "pde.html#the-telegraph-equation",
    "href": "pde.html#the-telegraph-equation",
    "title": "5  Partial Differential Equations",
    "section": "5.2 The Telegraph equation",
    "text": "5.2 The Telegraph equation\nBy virtue of 5.2 we can cast the curl-curl equation 5.1 into the telegraph equation of induction, such that\n\\[\n-\\laplacian \\mathbf e + \\mu \\sigma \\partial_t \\mathbf e + \\mu \\varepsilon \\partial^2_{tt} \\mathbf e = \\mathbf 0.\n\\tag{5.4}\\]\n\n\n\n\n\n\nNote\n\n\n\nNote that the same PDE can be derived for the magnetic field!\n\n\nEq. 5.4 and 5.1 are second-order linear PDEs with at most second-order time derivatives. Hence, they describe wave phenomena.\n\n\n\n\n\n\nNote\n\n\n\nA second-order, linear, constant-coefficient PDE for \\(u\\) takes the general form\n\\[\nA u_{xx} + 2 B u_{xy} + C u_{yy} + D u_x + E u_y + F u + G = 0\n\\]\nThis PDE is classified as being\n\nparabolic, when \\(B^2 - AC = 0\\)\nhyperbolic, when \\(B^2 - AC &gt; 0\\)\nelliptic, when \\(B^2 - AC &lt; 0\\).\n\nIn our case, \\(x\\) plays the role of any spatial variable, and \\(t\\) plays the role of \\(y\\).\nHence, for 5.4, \\(A=-1\\), \\(E=\\mu\\sigma\\), \\(C=\\mu\\varepsilon\\), and the remaining coefficients are zero.\nChecks:\n\\(B^2 - AC = 0 - (-1 \\cdot \\mu\\varepsilon) &gt; 0\\) \\(\\to\\) PDE is hyperbolic.\n\\(B^2 - AC = 0 - (-1 \\cdot 0) = 0\\) \\(\\to\\) PDE is parabolic\nFor the elliptic PDE there are no time derivatives, we can therefore let \\(x\\) and \\(y\\) take their roles as Cartesian coordinates.\nSo, with \\(A = C = -1\\),\n\\(B^2 - AC = 0 - (-1 \\cdot -1) &lt; 0\\) \\(\\to\\) PDE is elliptic.",
    "crumbs": [
      "Maxwell's equations",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Partial Differential Equations</span>"
    ]
  },
  {
    "objectID": "pde.html#quasi-static-approximation",
    "href": "pde.html#quasi-static-approximation",
    "title": "5  Partial Differential Equations",
    "section": "5.3 Quasi-static approximation",
    "text": "5.3 Quasi-static approximation\nIn geo-electromagnetic applications, the fields vary slowly with frequencies much less than 1 MHz. For Magnetotellurics, e.g., we use frequencies well below 100 Hz. In CSEM applications, frequencies rarely exceed 100 kHz.\nThe low frequency content of the electromagnetic field variations give reason to assume that the term associated with the second-order time derivative might be dropped.\nWe now want to provide a justification.\nThe terms in 5.1 have very different magnitudes depending on the scale of observation. To quantify the relative importance of the terms to each other, we cast the PDE into a dimensionless form.\nThis can be achieved by introducing scale lengths in space and time.\nWe introduce a typical scale length \\(L\\) and a typical period \\(T\\) and scale all spatial variables \\(\\ell\\) as well as the time \\(t\\).\nThe dimensionless variables are \\[\n\\ell' = \\ell / L \\qquad t' = t / T\n\\]\nWith the chain rule we obtain the dimensionless derivatives of a field component \\(f\\) \\[\n\\frac{\\partial f}{\\partial \\ell} = \\frac{\\partial f}{\\partial \\ell'} \\frac{\\partial \\ell'}{\\partial \\ell} = \\frac{1}{L} \\frac{\\partial f}{\\partial \\ell'}\n\\]\n\\[\n\\frac{\\partial f}{\\partial t} = \\frac{\\partial f}{\\partial t'} \\frac{\\partial t'}{\\partial t} = \\frac{1}{T} \\frac{\\partial f}{\\partial t'}\n\\]\nThis carries over to the differential operators, i.e., \\[\n\\curl \\curl \\mathbf f = \\frac{1}{L^2} \\nabla' \\times \\nabla' \\times \\mathbf f.\n\\]\nWe obtain a PDE with scaled coefficients, i.e., \\[\n\\nabla' \\times \\nabla' \\times \\mathbf e + \\eta_1 \\partial_{t'} \\mathbf e + \\eta_2 \\partial^{2}_{t't'} \\mathbf e = \\mathbf 0\n\\]\nThe coefficients are \\[\n\\begin{align}\n\\eta_1 &= \\frac{L^2}{T} \\mu \\sigma \\\\\n\\eta_2 &= \\frac{L^2}{T^2} \\mu\\varepsilon\n\\end{align}\n\\]\nWe assume that \\(\\mu=\\mu_0\\) and \\(\\varepsilon = \\varepsilon_0\\).\nThe exercise is now to show under which conditions there holds that \\(\\eta_1 \\gg \\eta_2\\).\nWhat is the physical interpretation of \\(\\eta_2\\)?\nWe see that \\[\n\\eta_2 = \\frac{L^2}{T^2} \\mu\\varepsilon = \\left( \\frac{L}{T c_0} \\right)^2.\n\\]\n\\(L/c_0\\) is the time an electromagnetic wave needs in free space to travel over the distance \\(L\\). If \\(\\eta_2\\) is small, this time is much less than a typical time \\(T\\) during which significant changes in the field occur. Such changes can be regarded as happening instantaneously over the region spanned by \\(L\\).\nUntil now, we have not considered the conductivities in that region. This can be studied with the ratio of both coefficients. We want to show that \\[\n\\frac{\\eta_1}{\\eta_2} = \\frac{\\mu\\sigma}{\\mu\\varepsilon} T = c_0^2 \\mu\\sigma T \\gg 1.\n\\]\nWe illustrate our findings and calculate meaningful values for the coefficients.\n\n\nShow the code\ndef eta1(T, L, sigma):\n  mu0 = np.pi * 4e-7\n  return L**2 / T * mu0 * sigma\n\ndef eta2(T, L):\n  mu0 = np.pi * 4e-7\n  epsilon0 = 8.854e-12\n  return L**2 / T**2 * mu0 * epsilon0\n\nT = np.logspace(-6, 3, num=91)\nL = 1e7\nfig, ax = plt.subplots(1, 1, figsize=(6,4))\nax.loglog(T, [eta2(t, L) for t in T])\nax.set_xlabel('T in s')\nax.set_ylabel(r'$\\eta_2$')\nax.axvspan(0.1, T[-1], color='green', alpha=0.1, label=r'$\\eta_2$ small')\nax.legend()\nax.grid(True)\n\n\n\n\n\n\n\n\n\nIn global investigations for which \\(L \\approx 10^4\\) km, we observe that \\(\\eta_2\\) is “small” (less than, e.g., 0.1) for \\(T &gt; 0.1\\) seconds.\n\n\nShow the code\nfig, ax = plt.subplots(1, 1, figsize=(6,4))\nax.loglog(1 / T, [eta1(t, L, 1e-5) / eta2(t, L) for t in T])\nax.set_xlabel('frequency in Hz')\nax.set_ylabel(r'$\\eta_1 / \\eta_2$')\nax.axvspan(T[0], 1e5, color='green', alpha=0.1, label=r'$\\eta_1/\\eta_2$ large')\nax.legend()\nax.grid(True)\n\n\n\n\n\n\n\n\n\nIn the last example we have used a conductivity of \\(10^{-5}\\) S/m as a reasonable low value for minerals. We recognize that the ratio is large for frequencies less than \\(10^5\\) Hz.\nTo conclude, we can safely assume that the second term, \\(\\eta_2\\), and correspondingly the term \\(\\mu\\varepsilon\\), can be neglected for frequencies less than \\(10^5\\) Hz for the lowest reasonable value of the conductivity in the Earth. For higher conductivities, the result becomes even more pronounced.\nAs a consequence, the displacement current density in Ampere’s law can be neglected as well, such that \\[\n\\curl \\mathbf{h} = \\mathbf j\n\\]\nWe call this the quasi-static approximation of Maxwell’s equations.\nNote that this corresponds to the classical formulation of Maxwell’s equations, which have later been extended to account for displacement currents.\nThe quasi-static approximation however comes at a price: The coefficient of the second-order time derivative term of 5.1 has the physical dimension of the inverse square of the wave velocity, i.e., \\[\n\\mu\\varepsilon = \\frac{1}{c_0^2}.\n\\]\nWhen we neglect this term, we implicitly assume that \\[\n\\frac{1}{c_0^2} \\to 0,\n\\] which violates the generally recognized fact that the speed of light is finite. On the other hand, this makes it clear that changes in the fields happen everywhere at the same time.\nThe curl-curl equation for the electric field under quasi-static approximation reads \\[\n\\curl \\curl \\mathbf e + \\mu\\sigma \\partial_t \\mathbf e = \\mathbf 0\n\\tag{5.5}\\]\nWith the identity introduced earlier, we write\n\\[\n-\\laplacian \\mathbf e + \\mu\\sigma \\partial_t \\mathbf e = \\mathbf 0\n\\tag{5.6}\\]\nWith our definition of the Fourier transform given by 3.2 we transform the time-domain expressions into the frequency domain.\nBy doing so, we decouple the time-dependency from the PDE. For most CSEM applications, this is common practice.\nFor time-harmonic fields with an angular frequency of \\(\\omega = 2 \\pi f\\), we write \\[\n\\mathbf E(\\omega) = \\mathbf E_0 \\exp(i \\omega t)\n\\] and use the properties of the Fourier transform to equivalently formulate time derivatives. It holds that \\[\n\\partial_t \\mathbf E_0 \\exp(i \\omega t) = i \\omega \\mathbf E_0 \\exp(i \\omega t) = i \\omega \\mathbf E(\\omega).\n\\] In other words, we simply replace all first-order time-derivatives with \\(i\\omega\\), and all second-order time derivatives by \\(-\\omega^2\\).\n\n\n\n\n\n\nTime derivatives in the frequency domain\n\n\n\n\\[\n\\partial_t \\to i\\omega \\qquad \\partial^2_{tt} \\to -\\omega^2\n\\]",
    "crumbs": [
      "Maxwell's equations",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Partial Differential Equations</span>"
    ]
  },
  {
    "objectID": "pde.html#the-vector-helmholtz-equation",
    "href": "pde.html#the-vector-helmholtz-equation",
    "title": "5  Partial Differential Equations",
    "section": "5.4 The Vector Helmholtz equation",
    "text": "5.4 The Vector Helmholtz equation\nWe use the identity 5.2 and obtain \\[\n-\\laplacian \\mathbf E + i \\omega \\mu \\sigma \\mathbf E = \\mathbf 0\n\\]\n\n\n\n\n\n\nNotation\n\n\n\nIn what follows, we use capital letters for fields in the frequency domain, e.g., \\(\\mathbf E\\).\nIn the time domain, the fields are typeset in small letters, e.g., \\(\\mathbf e\\).\n\n\nMany textbooks use the notation \\[\n\\laplacian \\mathbf e - i \\omega \\mu \\sigma \\mathbf e = \\mathbf 0\n\\] with the abbreviation \\[\n\\laplacian \\mathbf e + k^2 \\mathbf e = \\mathbf 0,\n\\tag{5.7}\\] where \\[\nk^2 = - i \\omega \\mu \\sigma.\n\\]\nEquation 5.7 is referred to as the homogeneous Helmholtz equation.\nThe coefficient \\(k\\) is often called the wave number or wave propagation constant.\n\n\n\n\n\n\nWarning\n\n\n\nNote that \\(k^2\\) is a complex-valued quantity. The roots of \\(k^2\\) must be chosen carefully.\n\n\n\n5.4.1 The roots of \\(k^2\\)\nWe consider a Helmholtz equation for a plane wave \\[\n\\mathbf H = [1, 0, 0]^\\top \\text{ in } z &lt; 0\n\\] with a time dependency of \\(\\exp(i \\omega t)\\). \\(\\mathbf H\\) is a magnetic field, which is uniform in any horizontal plane, and exhibits only a horizontal component.\nInside the conducting Earth, the magnetic field will be attenuated due to energy dissipation. This can be modelled using the Helmholtz equation.\nThe magnetic field in \\(z \\ge 0\\) is a solution of the scalar Helmholtz equation \\[\n\\partial^2_{zz} H_x + k^2 H_x = 0\n\\tag{5.8}\\] where \\[\nH_x(z) = H_x(0) e^{-i k z}.\n\\tag{5.9}\\] The propagation inside the Earth depends on \\(k^2\\). However, in 5.9 we need the root of \\(k^2\\).\nPhysical reasoning gives a hint on which of both signs of \\(\\pm k\\) has to be used.\nIn the following we choose the proper sign by numerical evidence.\nWe use sympy to exlore the problem:\n\n5.4.1.1 Symbolic representation of \\(k^2\\)\n\n\nShow the code\nimport sympy\nfrom IPython.display import display, Math \ninit_printing(use_latex='mathjax', latex_mode='equation')\n\nalpha, beta, z = symbols(r'\\alpha \\beta z', real=True)\nomega, sigma, mu = symbols(r'\\omega \\sigma \\mu', real=True, positive=True)\n\n\nWe make the ansatz \\[\nk^2 = (\\alpha - i \\beta)^2\n\\] Expansion and separation of real and imaginary parts yiels the two equations \\[\n\\alpha^2 - \\beta^2 = 0\n\\] and \\[\n-2 \\alpha \\beta = - \\omega \\mu \\sigma.\n\\]\n\n\nShow the code\nexpr = expand((alpha - I * beta)**2)\nre(expr)\n\n\n\\[\\begin{equation}\\alpha^{2} - \\beta^{2}\\end{equation}\\]\n\n\n\n\nShow the code\nk2 = -I * omega * mu * sigma\n\nex = re(expr).subs(beta, solve([im(expr) - im(k2)], beta)[beta])\n# solve([im(expr) - im(k2)], beta)[beta]\n\nsol = solve(ex, alpha)\nsol\n\n\n\\[\\begin{equation}\\left[ - \\frac{\\sqrt{2} \\sqrt{\\mu} \\sqrt{\\omega} \\sqrt{\\sigma}}{2}, \\  \\frac{\\sqrt{2} \\sqrt{\\mu} \\sqrt{\\omega} \\sqrt{\\sigma}}{2}\\right]\\end{equation}\\]\n\n\nWe see, that \\[\n\\alpha = \\pm \\sqrt{\\frac{\\omega \\mu \\sigma}{2}} = \\beta\n\\] It remains to decide on the correct sign of \\(\\alpha\\) and \\(\\beta\\).\nWe model the field component \\(H_x(z)\\) as a function of \\(\\alpha\\) and \\(\\beta\\). With \\(k = \\pm (\\alpha - i\\beta)\\) we get \\[\nH_x(z) = e^{-i k z} e^{+i \\omega t} = e^{-i \\alpha z} e^{-\\beta z} e^{+i \\omega t}.\n\\]\nOnly for \\(\\beta &gt; 0\\) we observe an exponential decay with depth to assure that \\(H_x(z) \\to 0\\) for \\(z \\to \\infty\\).\nWhen \\(\\beta = 0\\) (no damping), we observe a pure wave propagation.\nIn this case, \\[\nH_x(z) = e^{-i \\alpha z} e^{+i \\omega t} = e^{-i (\\alpha z - \\omega t)} = e^{-i \\varphi}\n\\]\nwith \\(\\varphi = \\alpha z - \\omega t\\) the phase of the wave.\nTo obtain the direction of wave propagation, we form the time dericative of the plane of constant phase, i.e., \\[\nz = \\frac{1}{\\alpha} (\\varphi + \\omega t)\n\\] and \\[\nc = \\dot{z} = \\frac{\\omega}{\\alpha}\n\\] The wave propagates in positive \\(z\\)-direction (with a positive wave velocity \\(c\\)) only when \\(\\alpha &gt; 0\\).\n\n\n\n\n\n\nNote\n\n\n\nSummary:\n\\[\n\\alpha = \\beta = \\sqrt{\\frac{\\omega \\mu \\sigma}{2}}\n\\]\n\n\n\n\n5.4.1.2 Skin depth\nIn the previous section we have seen that the electrical conductivity of the halfspace gives rise to an exponential decay of the wave amplitude.\nWe are now able to define a typical scale length which helps to understand the physical phenomena in different depths.\nRecall that \\(\\exp(-\\beta z) \\to 0\\) for \\(z \\to +\\infty\\) for \\(\\beta &gt; 0\\).\nThen there exists a depth \\(z = \\frac{1}{\\beta}\\) where the amplitude of the wave drops to \\(\\exp(-1)\\) of its surface amplitude.\nThis depth is called the electromagnetic skin depth \\(\\tau\\).\nAt this depth, the wave has lost 63 % of its surface amplitude.\n\\[\n\\tau = \\frac{1}{\\beta} = \\sqrt{\\frac{2}{\\omega \\mu \\sigma}} \\approx 503 \\sqrt{\\rho / f}\n\\]\nThe last part of the equation approximates the skin depth. With \\(\\rho\\) given in \\(\\Omega \\cdot m\\) and \\(f\\) given in Hz, this equation returns the skin depth \\(\\tau\\) in meters.\nThe following animation shows the real and imaginary part of the magnetic field for a frequency of 1 Hz in a uniform halfspace with a resistivity of 100 \\(\\Omega \\cdot m\\). The red and green horizontal lines indicate the skin depth and the wave length, resp.\nCheck: For \\(\\rho = 100~\\Omega \\cdot m\\) and \\(f = 1\\) Hz, the skin depth is approximately \\[\n\\tau = 503 \\sqrt{\\rho / f} \\approx 5.03 \\text{ km.}\n\\]\n\\[\n\\lambda = 2 \\pi \\tau \\approx 31.6 \\text{ km.}\n\\]\n\n\n\n\n\n\nPython code\n\n\n\n\n\nThis is the Python code that you can use to create the following animation:\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom matplotlib.animation import FuncAnimation\n\ndef h(z, a, b, w, t):\n    return np.exp(-1j * a * z) * np.exp(-b * z) * np.exp(1j * w * t)\n\nT = 1.0\nw = 2 * np.pi / T \nsigma = 1e-2\nmu = np.pi * 4e-7\n\nkk = np.sqrt(w * mu * sigma / 2)\na = kk\nb = kk\nzair = np.arange(start=-10000, stop=0, step=100)\nzz = np.arange(start=0, stop=6e4, step=600)\ntau = 1.0 / kk\n\nfig, ax = plt.subplots(figsize=(4, 6), layout='constrained')\n\ndef update(frame):\n    ax.clear()\n    t = frame * T / 100.0\n    ax.plot([np.real(np.exp(1j * w * t)) for _ in zair], zair, color='blue', label='', zorder=1)\n    ax.plot([np.real(h(z, a, b, w, t)) for z in zz], zz, color='blue', label='Re', zorder=2)\n    ax.plot([np.imag(h(z, a, b, w, t)) for z in zz], zz, label='Im', zorder=3)\n    ax.fill_betweenx(zz, -np.exp(-b * zz), np.exp(-b * zz), color='grey', alpha=0.5, label='')\n    zp = w * t / a if a &gt; 0.0 else np.max(zz) + w * t / a\n    ax.scatter(np.real(h(zp, a, b, w, t)), zp, marker='*', color='black', label='phase')\n    ax.axhline(y=tau, color='red', label='τ')\n    ax.axhline(y=2 * np.pi * tau, color='green', label='λ')\n    ax.set_ylabel('Depth in km')\n    ax.set_xlabel('Normalized amplitude')\n    ax.set_xlim(-1.0, 1.0)\n    ax.set_ylim(min(zair), max(zz))\n    ax.invert_yaxis()\n    ax.legend(loc='lower left')\n\nani = FuncAnimation(fig, update, frames=100, interval=50)\n\nani.save('animation.gif')",
    "crumbs": [
      "Maxwell's equations",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Partial Differential Equations</span>"
    ]
  },
  {
    "objectID": "mtfields.html",
    "href": "mtfields.html",
    "title": "6  Plane waves above and inside a homogeneous Earth",
    "section": "",
    "text": "6.1 Visualization\nWe illustrate our results with a simple example of a uniform halfspace with a conductivity of 0.01 S/m and a frequency of 10 Hz.\nShown are real (Re) and imaginary (Im) part of the fields along with their magnitude (Abs) as a function of depth.\nClearly visible is the exponential decay with depth.\nShow the code\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nf = 10\nomega = 2 * np.pi * f\nsigma = 0.01\n\nz = np.arange(-1000, 10001, 100)\n\ndef h(omega, sigma, z):\n    k = np.sqrt(-1j * omega * np.pi * 4e-7 * sigma)\n    if z &lt; 0:\n        H = 1 + 1j * 0\n    if z &gt;= 0:\n        H = np.exp(-1j * k * z)\n    return H\n\ndef e(omega, sigma, z):\n    k = np.sqrt(-1j * omega * np.pi * 4e-7 * sigma)\n    if z &lt; 0:\n        E = -1j * k / sigma * (1 - 1j * k * z)\n    if z &gt;= 0:\n        E = -1j * k / sigma * np.exp(-1j * k * z)\n    return E\n\nH = [h(omega, sigma, zz) for zz in z]\nE = [e(omega, sigma, zz) for zz in z]\nH0 = h(omega, sigma, 0.0)\nE0 = e(omega, sigma, 0.0)\nIn our example, the skin depth is 1590.63 m.\nShow the code\nfig, ax = plt.subplots(figsize=(4, 4), layout='constrained')\n\nax.plot(np.real(E / E0), z, label='Re')\nax.plot(np.imag(E / E0), z, label='Im')\nax.plot(np.abs(E / E0), z, label='Abs')\nax.axhspan(z[0], 0.0, facecolor='lightblue', alpha=0.4)\nax.axhspan(0.0, z[-1], facecolor='lightgreen', alpha=0.4)\nax.invert_yaxis()\nax.set_ylim((z[-1], z[0]))\nax.set_xlim((-1.8, 1.8))\nax.set_ylabel('depth in m')\nax.set_xlabel(r'$E(z)/E(0)$')\nax.set_title('Normalized electric field')\nax.grid(True)\nax.legend(loc='lower right', fontsize='small', frameon=True)\nShow the code\nfig, ax = plt.subplots(figsize=(4, 4), layout='constrained')\nax.plot(np.real(H / H0), z, label='Re')\nax.plot(np.imag(H / H0), z, label='Im')\nax.plot(np.abs(H / H0), z, label='Abs')\nax.axhspan(z[0], 0.0, facecolor='lightblue', alpha=0.4)\nax.axhspan(0.0, z[-1], facecolor='lightgreen', alpha=0.4)\nax.invert_yaxis()\nax.set_ylim((z[-1], z[0]))\nax.set_xlim((-1.1, 1.1))\nax.set_ylabel('depth in m')\nax.set_xlabel(r'$H(z)/H(0)$')\nax.set_title('Normalized magnetic field')\nax.grid(True)\nax.legend(loc='lower right', fontsize='small', frameon=True)",
    "crumbs": [
      "Maxwell's equations",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Plane waves above and inside a homogeneous Earth</span>"
    ]
  },
  {
    "objectID": "mtfields.html#impedance-and-apparent-resistivity",
    "href": "mtfields.html#impedance-and-apparent-resistivity",
    "title": "6  Plane waves above and inside a homogeneous Earth",
    "section": "6.2 Impedance and apparent resistivity",
    "text": "6.2 Impedance and apparent resistivity\nWe define the magnetotelluric impedance as\n\\[\nZ(\\omega) = \\frac{ \\mathbf e_h \\cdot \\mathbf E }{(\\mathbf e_h \\times \\mathbf e_z) \\cdot \\mathbf H } = \\frac{ E_x }{ H_y} = -\\frac{ E_y }{H_x }\n\\] where \\(\\mathbf e_h\\) is an arbitrary horizontal Cartesian unit vector, and \\(\\mathbf e_z\\) is the vertical Cartesian unit vector.\nOn the surface of a halfspace, we can measure the surface impedance\n\\[\nZ_s = Z(\\omega),\n\\] which in case of a uniform halfspace is identical to the intrinsic impedance\n\\[\nZ_1 = \\frac{ \\omega \\mu_0 }{ k_1 } = Z_s.\n\\] Here, \\(k_1^2 = -i\\omega\\mu_0\\sigma_1\\) is the wave propagation constant of the first (however infinite in its vertical extent) layer.\nFrom \\(Z_s\\) we can infer the apparent resistivity\n\\[\n\\rho_a = \\frac{ 1 }{ \\omega \\mu_0} |Z_s|^2\n\\]\nand the phase\n\\[\n\\varphi = \\arctan \\frac{ \\mathrm{Im}(Z_s) }{\\mathrm{Re}(Z_s) }.\n\\]\n\n6.2.1 Example\n\nsigma = 0.01\nf = 100.0\nmu0 = np.pi * 4e-7\nomega = 2 * np.pi * f\nk = np.sqrt(-1j * omega * mu0 * sigma)\nHx = 1.0\nEy = -1j * k / sigma\nZs = Ey / Hx\n\nrhoa = lambda Z, f: np.abs(Z)**2 / ( 2 * np.pi * f * mu0)\nphi = lambda Z: np.arctan(np.imag(Z) / np.real(Z)) * 180 / np.pi\n\nFor our example, the apparent resistivity is 100.0 \\(\\Omega \\cdot m\\). The phase angle is 45.0 degrees.\n\n\n\n\n\n\nNote\n\n\n\nNote the sign of \\(Z_s\\), which depends on the choice of the horizontal field components.\nLet’s check the result of the cross product \\(\\mathbf e_h \\times \\mathbf e_z\\):\n\\[\n\\begin{bmatrix}\n1 \\\\ 0 \\\\ 0\n\\end{bmatrix} \\times\n\\begin{bmatrix}\n0 \\\\ 0 \\\\ 1\n\\end{bmatrix} =\n\\begin{bmatrix}\n0 \\\\ -1 \\\\ 0\n\\end{bmatrix} \\quad\\text{with } \\mathbf e_h = \\mathbf e_x\n\\]\n\\[\n\\begin{bmatrix}\n0 \\\\ 1 \\\\ 0\n\\end{bmatrix} \\times\n\\begin{bmatrix}\n0 \\\\ 0 \\\\ 1\n\\end{bmatrix} =\n\\begin{bmatrix}\n1 \\\\ 0 \\\\ 0\n\\end{bmatrix} \\quad\\text{with } \\mathbf e_h = \\mathbf e_y\n\\]\n\n\nIn the inhomogeneous case, i.e., when the conductivity of the halfspace is not uniform, the apparent resistivity and phase generally vary with frequency.\nThis can be visualized using sounding curves of \\(\\rho_a\\) vs. period \\(T = 1/f\\) or \\(\\varphi\\) vs. \\(T\\).",
    "crumbs": [
      "Maxwell's equations",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Plane waves above and inside a homogeneous Earth</span>"
    ]
  },
  {
    "objectID": "potentials.html",
    "href": "potentials.html",
    "title": "7  Sources in unbounded media",
    "section": "",
    "text": "7.1 Polarization vectors\nIn the absence of matter, we observe that\n\\[\n\\mathbf d - \\varepsilon_0 \\mathbf e = \\mathbf 0\n\\]\nand\n\\[\n\\mu_0^{-1} \\mathbf b - \\mathbf h = \\mathbf 0.\n\\]\nWhen the differences are non-zero, then we observe the response of matter. We define the electrical polarization \\(\\mathbf p\\) \\[\n\\mathbf p = \\mathbf d - \\varepsilon_0 \\mathbf e\n\\]\nand the magnetic polarization or magnetization \\(\\mathbf m\\)\n\\[\n\\mathbf m = \\mu_0^{-1} \\mathbf b - \\mathbf h\n\\]\nThe polarization vectors \\(\\mathbf p\\) and \\(\\mathbf m\\) are parallel and proportional to \\(\\mathbf e\\) and \\(\\mathbf h\\), resp.\nWe are able to quantify the polarization properties by the electrical susceptibility \\(\\chi_e\\) and magnetic susceptibility \\(\\chi_m\\). The latter is often referred to as the magnetic susceptibility \\(\\kappa\\).\nWe define\n\\[\n\\mathbf p := \\chi_e \\varepsilon_0 \\mathbf e = \\mathbf d - \\varepsilon_0 \\mathbf e\n\\]\nand likewise\n\\[\n\\mathbf m := \\chi_m \\mathbf h = \\mu_0^{-1} \\mathbf b - \\mathbf h.\n\\]\nIt follows for the relative dielectric permittivity\n\\[\n\\varepsilon_r = 1 + \\chi_e\n\\]\nand for the relative magnetic permeability\n\\[\n\\mu_r = 1 + \\chi_m = 1 + \\kappa.\n\\]\nTo implement technical sources, we separate the polarization into induced (superscript \\(i\\)) and external (superscript \\(s\\)) contributions to the observed fields:\n\\[\n\\mathbf p = \\mathbf p^i + \\mathbf p^s = \\mathbf d - \\varepsilon_0 \\mathbf e.\n\\]\nThen,\n\\[\n\\mathbf d = [\\underbrace{\\varepsilon_0 \\mathbf e}_\\text{free space} + \\underbrace{\\mathbf p^i}_\\text{matter}] + \\mathbf p^s\n\\]\nand\n\\[\n\\mathbf b = [\\underbrace{\\mu_0 \\mathbf h}_\\text{free space} + \\underbrace{\\mu_0 \\mathbf m^i}_\\text{matter}] + \\mu_0 \\mathbf m^s\n\\]\nWith the introduction of the polarization vectors, we are now able to augment Maxwell’s equations, such that\n\\[\n\\begin{align}\n\\curl \\mathbf h & = \\mathbf j + \\varepsilon \\partial_t \\mathbf e + \\partial_t \\mathbf p^s \\\\\n\\curl \\mathbf e & = \\phantom{\\mathbf j} -\\mu \\partial_t \\mathbf h - \\mu_0 \\partial_t \\mathbf m^s\n\\end{align}\n\\]\nWe define the source current densities in the magnetic and electric case as\n\\[\n\\mathbf j_m^s := \\mu_0 \\partial_t \\mathbf m^s\n\\]\nand\n\\[\n\\mathbf j_e^s := \\phantom{\\mu_0} \\partial_t \\mathbf p^s .\n\\]\nNow, we extend our definitions to the frequency domain:\n\\[\n\\mathbf J_m^s := i \\omega \\mu_0 \\mathbf M^s\n\\]\nand\n\\[\n\\mathbf J_e^s := i \\omega \\mathbf P^s .\n\\]",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Sources in unbounded media</span>"
    ]
  },
  {
    "objectID": "potentials.html#polarization-vectors",
    "href": "potentials.html#polarization-vectors",
    "title": "7  Sources in unbounded media",
    "section": "",
    "text": "Example\n\n\n\nWe consider a magnetic dipole at the point \\(\\mathbf r_0 = [0, 0, -h]^\\top, h &gt; 0\\).\nThe point of observation is at \\(\\mathbf r = [x, y, z]^\\top\\).\nThe location of the dipole can now be pinned to \\(\\mathbf r_0\\) using a Dirac delta function.\nWe obtain\n\\[\n\\mathbf M^s(\\mathbf r) = \\mathbf m \\, \\delta(\\mathbf r - \\mathbf r_0)\n\\]\nwith \\(\\mathbf m\\) the oriented magnetic dipole moment. The dipole moment has the physical dimension of \\([\\mathbf m] =\\) A\\(\\cdot m^2\\). It can be interpreted as a current \\(I\\) measured in A enclosing a surface measured in \\(m^2\\).\nAs a vector quantity, the dipole moment has a direction. Its direction is given by the unit vector normal to the surface of the enclosed area.\nA useful special case arises when the dipole is aligned with one of the Cartesian axes.\nThis way, we can define a vertical or horizontal dipole.",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Sources in unbounded media</span>"
    ]
  },
  {
    "objectID": "potentials.html#electromagnetic-potentials",
    "href": "potentials.html#electromagnetic-potentials",
    "title": "7  Sources in unbounded media",
    "section": "7.2 Electromagnetic potentials",
    "text": "7.2 Electromagnetic potentials\nLet’s assume that electric and magnetic fields originate from either a magnetic or an electric source, i.e.,\n\\[\n\\begin{align}\n\\mathbf E & = \\mathbf E_m + \\mathbf E_e \\\\\n\\mathbf H & = \\mathbf H_m + \\mathbf H_e\n\\end{align}\n\\]\nWhen \\(\\mathbf J_e \\equiv 0\\), then we only observe the set of fields \\([\\mathbf E_m, \\mathbf H_m]\\).\nWhen \\(\\mathbf J_m \\equiv 0\\), then we only observe the set of fields \\([\\mathbf E_e, \\mathbf H_e]\\).\nThe two sets are disjoint. We insert into Maxwell’s equations\n\\[\n\\begin{align}\n\\curl \\mathbf E_m & = -i \\omega \\mu \\mathbf H_m \\textcolor{red}{- \\mathbf J_m^s} \\\\\n\\curl \\mathbf H_m & = (\\sigma + i \\omega \\varepsilon) \\mathbf E_m\n\\end{align}\n\\]\n\\[\n\\begin{align}\n\\curl \\mathbf E_e & = -i \\omega \\mu \\mathbf H_e  \\\\\n\\curl \\mathbf H_e & = (\\sigma + i \\omega \\varepsilon) \\mathbf E_e \\textcolor{red}{+ \\mathbf J_e^s}\n\\end{align}\n\\]\nNow we apply the divergence to all of the above equations. Here we employ the identity\n\\[\n\\divergence (\\curl \\mathbf F) = 0,\n\\tag{7.1}\\]\nsuch that, e.g.,\n\\[\n\\underbrace{\\divergence (\\curl \\mathbf E_m)}_{=0}  = -i \\omega \\mu \\divergence \\mathbf H_m - \\divergence \\mathbf J_m^s.\n\\]\nWe obtain\n\\[\n\\begin{align}\n\\divergence \\mathbf H_m & = -\\frac{ \\divergence \\mathbf J_m^s }{i \\omega \\mu } \\\\\n\\divergence \\mathbf E_e & = -\\frac{ \\divergence \\mathbf J_e^s }{\\sigma + i \\omega \\varepsilon } \\\\\n\\divergence \\mathbf H_e & = 0 \\\\\n\\divergence \\mathbf E_m & = 0.\n\\end{align}\n\\]\nSince the divergence of \\(\\mathbf H_e\\) and \\(\\mathbf E_m\\) are zero, we can express both fields by the curl of an arbitrary vector field according to 7.1. However, this vector field must fulfill Maxwell’s equations. The following ansatz employing the vector potentials \\(\\mathbf F\\) and \\(\\mathbf A\\) meets this requirement:\n\\[\n\\begin{align}\n\\mathbf E_m & = -\\curl \\mathbf F \\\\\n\\mathbf H_e & = \\phantom{-} \\curl \\mathbf A.\n\\end{align}\n\\]\nIt follows\n\\[\n\\begin{align}\n\\curl \\mathbf H_m & = -(\\sigma + i \\omega \\varepsilon) \\curl \\mathbf F \\\\\n\\curl \\mathbf E_e & = -i \\omega \\mu \\curl \\mathbf A\n\\end{align}\n\\]\nfrom which we obtain\n\\[\n\\begin{align}\n\\mathbf H_m & = -(\\sigma + i \\omega \\varepsilon) \\mathbf F - \\grad V \\\\\n\\mathbf E_e & = -i \\omega \\mu \\mathbf A - \\grad U\n\\end{align}\n\\]\nbecause\n\\[\n\\curl \\nabla u = \\mathbf 0\n\\]\nfor any scalar function \\(u: \\mathbb R^3 \\mapsto \\mathbb R\\).\nThe scalar potentials \\(V\\) and \\(U\\) are referred to as magnetic and electrical scalar potential, resp.",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Sources in unbounded media</span>"
    ]
  },
  {
    "objectID": "potentials.html#the-curl-curl-equation-for-the-potentials",
    "href": "potentials.html#the-curl-curl-equation-for-the-potentials",
    "title": "7  Sources in unbounded media",
    "section": "7.3 The curl-curl equation for the potentials",
    "text": "7.3 The curl-curl equation for the potentials\nLet’s insert the potentials into Maxwell’s equations.\n\\[\n\\begin{align}\n\\mathbf E_m & = - \\curl \\mathbf F \\\\\n\\curl \\mathbf E_m & = - \\curl \\curl \\mathbf F && = -i \\omega \\mu \\textcolor{red}{\\mathbf H_m} - \\mathbf J^s_m \\\\\n&   && = i \\omega \\mu \\textcolor{red}{(\\sigma + i \\omega \\varepsilon) \\mathbf F} + i \\omega \\mu \\textcolor{red}{\\grad V} - \\mathbf J^s_m\n\\end{align}\n\\]\n\\[\n\\begin{align}\n\\mathbf H_e & = \\phantom{-} \\curl \\mathbf A \\\\\n\\curl \\mathbf H_e & = \\phantom{-} \\curl \\curl \\mathbf A && = (\\sigma + i \\omega \\varepsilon) \\textcolor{red}{\\mathbf E_e} + \\mathbf J^s_e \\\\\n&   && = \\textcolor{red}{-i \\omega \\mu} (\\sigma + i \\omega \\varepsilon) \\textcolor{red}{\\mathbf A} - i \\omega \\mu \\textcolor{red}{\\grad U} + \\mathbf J^s_e\n\\end{align}\n\\]\nWe use the vector identity 5.2 and obtain\n\\[\n\\begin{align}\n-\\laplacian \\mathbf F + \\nabla \\divergence \\mathbf F + i \\omega \\mu (\\sigma + i \\omega \\varepsilon) \\mathbf F + i \\omega \\mu \\grad V & = + \\mathbf J^s_m \\\\\n-\\laplacian \\mathbf A + \\nabla \\divergence \\mathbf A + i \\omega \\mu (\\sigma + i \\omega \\varepsilon) \\mathbf A + i \\omega \\mu \\grad U & = + \\mathbf J^s_e\n\\end{align}\n\\]",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Sources in unbounded media</span>"
    ]
  },
  {
    "objectID": "potentials.html#the-vector-helmholtz-equations-for-the-potentials",
    "href": "potentials.html#the-vector-helmholtz-equations-for-the-potentials",
    "title": "7  Sources in unbounded media",
    "section": "7.4 The vector Helmholtz equations for the potentials",
    "text": "7.4 The vector Helmholtz equations for the potentials\nQuestion: How to get rid of \\(V\\) and \\(U\\)?\nWe choose the arbitrary scalar potential \\(V, U\\) such that it cancels with the expression \\(\\divergence \\mathbf F\\) and \\(\\divergence \\mathbf A\\), resp.\n\\[\n\\begin{align}\n\\grad \\divergence \\mathbf F & = - i \\omega \\mu \\grad V \\\\\n\\divergence \\mathbf F & = - i \\omega \\mu V\n\\end{align}\n\\]\nand obtain\n\\[\n-\\laplacian \\mathbf F + i \\omega \\mu (\\sigma + i \\omega \\varepsilon) \\mathbf F = + \\mathbf J^s_m.\n\\] or short \\[\n\\laplacian \\mathbf F + k^2 \\mathbf F = -\\mathbf J^s_m, \\qquad k^2 = -i \\omega \\mu (\\sigma + i \\omega \\varepsilon).\n\\]\n\n\n\n\n\n\nSelf study\n\n\n\nRepeat the steps above for the case of \\(\\mathbf A\\).\n\n\n\n\n\n\n\n\nSummary\n\n\n\nWe have eliminated the scalar potentials \\(V\\) and \\(U\\) by use of the Lorenz gauge.\nThe vector potentials are solutions to\n\\[\n\\laplacian \\mathbf F + k^2 \\mathbf F  = -\\mathbf J^s_m\n\\tag{7.2}\\]\nand\n\\[\n\\laplacian \\mathbf A + k^2 \\mathbf A = -\\mathbf J^s_e.\n\\tag{7.3}\\]\nThese equations are called inhomogeneous Helmholtz equations.\nNote that the vector potentials are aligned with the direction of the source current densities!",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Sources in unbounded media</span>"
    ]
  },
  {
    "objectID": "potentials.html#solutions-of-the-inhomogeneous-helmholtz-equation",
    "href": "potentials.html#solutions-of-the-inhomogeneous-helmholtz-equation",
    "title": "7  Sources in unbounded media",
    "section": "7.5 Solutions of the inhomogeneous Helmholtz equation",
    "text": "7.5 Solutions of the inhomogeneous Helmholtz equation\nWe now want to find solutions to the inhomogeneous vector Helmholtz equations.\nLet’s consider the potential \\(\\mathbf A\\) as defined in 7.3.\nTo obtain a solution, we take the following steps:\n\ntransform the expressions into the Fourier wave number domain\nsolve the algebraic equation\ntransform back into space domain\n\nFirst, we need a useful definition of the Fourier transform. We follow a similar notation like that given in 3.2, but instead of time and angular frequency we choose as variables the Cartesian coordinates \\(x, y, z\\) and the corresponding wave numbers \\(k_x, k_y, k_z\\).\nWe define the 3-D Fourier transform pair\n\\[\n\\begin{align}\n\\tilde{\\mathbf A}(k_x, k_y, k_z)\n    & = \\iiint\\limits_{-\\infty}^\\infty \\mathbf A(x,y,z) e^{-i(k_x x + k_y y + k_z z)}\\, \\mathrm d x \\mathrm d y \\mathrm d z \\\\\n\\mathbf A(x,y,z)  & = \\frac{ 1 }{(2 \\pi)^3 } \\iiint\\limits_{-\\infty}^\\infty \\tilde{\\mathbf A}(k_x, k_y, k_z) e^{+i(k_x x + k_y y + k_z z)} \\, \\mathrm d k_x \\mathrm d k_y \\mathrm d k_z\n\\end{align}\n\\]\nAlso required are the differentiation, convolution, and linearity properties of the Fourier transform.\nWe recognize that in a Cartesian coordinate system\n\\[\n\\laplacian := \\partial^2_{xx} + \\partial^2_{yy} + \\partial^2_{zz}\n\\]\nand therefore\n\\[\n\\partial^2_{xx} e^{-i k_x x} = -k_x^2 e^{-i k_x x} \\text{ etc.}\n\\]\nAfter transformation of 7.2 into the wave number domain, we have\n\\[\n(-k_x^2 - k_y^2 - k_z^2 + k^2) \\tilde{\\mathbf A} = -\\tilde{\\mathbf J}^s_m.\n\\]\nRecall that \\(k^2 = -i \\omega \\mu (\\sigma + i \\omega \\varepsilon)\\).\nAfter rearranging we obtain\n\\[\n\\tilde{\\mathbf A} = \\tilde{\\tilde{G}} \\tilde{\\mathbf J}^s_m\n\\tag{7.4}\\]\nwith the scalar function\n\\[\n\\tilde{\\tilde{G}} = (k_x^2 + k_y^2 + k_z^2 - k^2)^{-1}.\n\\]\n\\(\\tilde{\\tilde{G}}\\) is the 3-D Fourier transform of what we will later refer to as Green’s function.\nWe can obtain \\(\\mathbf A\\) directly in the spatial domain by evaluating a 3-D convolution integral, since 7.4 is a multiplication in the wave number domain by exploiting the convolution property of the Fourier transform. Unfortunately, we still have not found an expression for \\(G\\).\nTo this end, let’s consider a PDE similar to 7.3. The differences are important: First, the solution to the PDE is a scalar function \\(G\\), second, the right-hand side of the equation is a Dirac impulse in space.\nWe depart from\n\\[\n\\laplacian G + k^2 G = -\\delta(x) \\delta(y) \\delta(z)\n\\tag{7.5}\\]\nWe take steps 1 and 2 as outlined above and obtain\n\\[\n\\tilde{\\tilde{G}} = (k_x^2 + k_y^2 + k_z^2 - k^2)^{-1}.\n\\]\nTo find \\(G\\), we first transform back into space domain w.r.t. \\(z\\) and obtain\n\\[\n\\tilde{G}(k_x, k_y, z) = \\frac{ 1 }{ 2 \\pi} \\int\\limits_{-\\infty}^{\\infty}\n\\tilde{\\tilde{G}} e^{i k_z z} \\, \\mathrm d k_z = \\frac{ e^{-u|z|} }{ 2 u}\n\\]\nwith \\(u = \\sqrt{k_x^2 + k_y^2 - k^2}\\).\nNext, we carry out a 2-D Fourier transform w.r.t. \\(x\\) and \\(y\\):\n\\[\nG(x,y,z) = \\frac{ 1 }{ 4 \\pi^2} \\iint\\limits_{-\\infty}^{\\infty} \\frac{ e^{-u|z|} }{ 2 u}\ne^{i (k_x x + k_y y)} \\, \\mathrm d k_x  \\mathrm d k_y\n\\]\nSince \\(u\\) is an axisymmetric function of \\(k_x\\) and \\(k_y\\), we use of the following Hankel transform:\n\\[\n\\frac{ 1 }{ 4 \\pi^2} \\iint\\limits_{-\\infty}^{\\infty} F(k_x^2 + k_y^2)\ne^{i (k_x x + k_y y)} \\, \\mathrm d k_x  \\mathrm d k_y\n=\n2 \\pi \\int\\limits_0^\\infty F(\\lambda) J_0(\\lambda R) \\lambda \\, \\mathrm d \\lambda,\n\\]\nwhere\n\\[\n\\lambda^2 = k_x^2 + k_y^2\n\\]\nthe horizontal wave number,\n\\[\nR^2 = x^2 + y^2\n\\]\nthe radial distance from the \\(z\\)-axis, and\n\\[\nF :=   \\frac{ e^{-u|z|} }{ 2 u}, \\quad u^2 = \\lambda^2 - k^2.\n\\]\nFinally, we obtain the integral\n\\[\nG(R, z) = \\frac{ 1 }{ 4 \\pi } \\int\\limits_0^\\infty \\frac{ \\lambda  }{ u} e^{-u|z|} J_0(\\lambda R) \\, \\mathrm d \\lambda\n\\]\nThis is the Sommerfeld integral, from which we get with \\(r^2 = R^2 + z^2\\) the function\n\\[\nG(r) = \\frac{ 1 }{ 4 \\pi r} e^{- i k r}.\n\\]\nThis is the Green’s function for the uniform conductive fullspace in the frequenccy domain.",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Sources in unbounded media</span>"
    ]
  },
  {
    "objectID": "potentials.html#the-greens-function",
    "href": "potentials.html#the-greens-function",
    "title": "7  Sources in unbounded media",
    "section": "7.6 The Green’s function",
    "text": "7.6 The Green’s function\nThe Green’s function or the impulse response of the conductive fullspace in the frequency domain is\n\\[\nG(r, \\omega) = \\frac{1}{4 \\pi r} e^{- i k r} = \\frac{1}{4 \\pi r} e^{- i r \\sqrt{\\omega^2 \\mu \\varepsilon - i \\omega \\mu \\sigma}}.\n\\]\nTo obtain the time-domain response \\(g(r,t)\\), we apply the inverse Fourier transform, i.e.,\n\\[\ng(r, t) = \\frac{1}{2 \\pi} \\frac{1}{4 \\pi r} \\int\\limits_{-\\infty}^\\infty\ne^{- i r \\sqrt{\\omega^2 \\mu \\varepsilon - i \\omega \\mu \\sigma}}\ne^{i \\omega t}\n\\mathrm{d}\\omega.\n\\]\n\n7.6.1 Free space\nFirst, let’s restrict to the free space case, where \\(\\sigma=0\\). We obtain\n\\[\ng(r,t) = \\frac{1}{8 \\pi^2 r} \\int \\limits_{-\\infty}^\\infty\ne^{i \\omega (t \\pm r \\sqrt{\\mu \\varepsilon}) } \\mathrm{d}\\omega.\n\\]\nTo obtain \\(g\\), we need the shifting property of the Fourier transform:\n\\[\n\\delta(t \\pm t') =  \\frac{1}{2 \\pi} \\int \\limits_{-\\infty}^\\infty\ne^{i \\omega (t \\pm t')}\n\\mathrm{d}\\omega\n\\]\nIt follows that\n\\[\ng(r, t) = \\frac{1 }{4 \\pi r}  \\delta(t - r / c)\n\\]\nThe sign is chosen such that causality is guaranteed, i.e.,\n\\[\ng(r, t) = 0 \\text{ for } t &lt; 0.\n\\]\nThe result obtained above is called the retarded potential.\n\n\n7.6.2 Quasi-static approximation\nFor moderate to high conductivities and/or low frequencies, we have introduced the quasi-static approximation, which justifies that displacement currents may safely be neglected in geo-electromagnetic applications.\nWe start from the Green’s function under quasi-static approximation:\n\\[\nG(r, \\omega) = \\frac{1}{4 \\pi r} e^{-i r \\sqrt{-i \\omega \\mu \\sigma}} =\n\\frac{1}{4 \\pi r} e^{-r \\sqrt{i \\omega \\mu \\sigma}}\n\\]\nTo obtain the time-domain Green’s function, we apply the Laplace transform, which is as an integral transform similar to the Fourier transform, except that the former is restricted to transformations of functions of \\(t\\) with \\(t \\ge 0\\). This is in accordance to the causality requirement stated above.\nWith the Laplace variable \\(s := i \\omega\\) we rewrite\n\\[\nG(r, s) = \\frac{1}{4 \\pi r} e^{-r \\sqrt{s \\mu \\sigma}}\n\\]\nFrom Abramowitz & Stegun (1972) we obtain\n\\[\ng(r, t) = \\frac{(\\mu \\sigma)^{1/2}}{(2 \\pi t)^{3/2}}\ne^{- \\frac{\\mu\\sigma r^2}{4 t}} \\, u(t)\n\\]\n\\(u(t)\\) is the Heaviside step function\n\\[\n    u(t) = \\begin{cases} 0 & t &lt; 0 \\\\ 1 & t &gt; 0. \\end{cases}\n\\]\n\n\n7.6.3 Numerical experiments with the time-domain Green’s function\nWe implement the Green’s function in Python and plot it as a function of time or source-receiver-offset, resp.\nAt first, let’s calculate the Green’s function at a fixed distance of \\(r=100\\) m for a time range of \\(t \\in [10^{-6}, 10^{-2}]\\) seconds.\nThe late time asymptotic \\(g(r,t) \\sim t^{-3/2}\\) as \\(t \\to \\infty\\) is indicated as a straight line in the log-log plot.\n\n\nShow the code\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndef green(sigma, r, t):\n    mu = np.pi * 4e-7\n    g = np.sqrt(mu * sigma) / (2 * np.pi * t)**1.5 * \\\n        np.exp(-0.25 * mu * sigma * r**2 / t)\n    return g\n\nsigma = 0.01\nr = np.logspace(start=0, stop=4, num=41, endpoint=True)\nt = np.logspace(start=-6, stop=-2, num=41, endpoint=True)\n\nrfix = 100\ntfix = 1e-6\ng_t = [green(sigma, rfix, tt) for tt in t]\ng_r = [green(sigma, rr, tfix) for rr in r]\n\nfig, ax = plt.subplots(1, 1, figsize=(4,4), layout='constrained')\nax.loglog(t, g_t, label=r'$g(r,t)$')\nax.loglog(t, 1e-6 * t**(-1.5), label=r'$t^{-3/2}$')\nax.set_ylim((1e-4, 1e2))\nax.set_xlabel('t in s')\nax.set_ylabel(r'$g(r,t)$')\nax.set_title(\"r = \" + str(rfix) + \" m\")\nax.grid(True)\nax.legend()\n\n\n\n\n\n\n\n\n\nThe following animation shows the interplay between the spatial decay of the Green’s function with time on the left, and the evolution of the Green’s function evaluated at a fixed point in space on the left.\nNote the red dots and the red horizontal lines which links both subfigures to each other.",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Sources in unbounded media</span>"
    ]
  },
  {
    "objectID": "potentials.html#the-fields-of-a-dipole-source-in-full-space",
    "href": "potentials.html#the-fields-of-a-dipole-source-in-full-space",
    "title": "7  Sources in unbounded media",
    "section": "7.7 The fields of a dipole source in full-space",
    "text": "7.7 The fields of a dipole source in full-space\nIf we compare 7.5 and 7.2, we recognize the similarity of both PDEs. More specifically, if we would be able to orientate \\(\\mathbf J\\) in such a way that it would be aligned to one of the Cartesian axis, then\n\\[\n\\mathbf J_m^s(\\mathbf r) = i \\omega \\mu \\mathbf m \\delta^3(\\mathbf r)\n\\]\nwould simplify for a vertically aligned dipole to\n\\[\n\\mathbf J_m^s(\\mathbf r) = i \\omega \\mu \\begin{bmatrix}\n0 \\\\ 0 \\\\ m\n\\end{bmatrix} \\delta^3(\\mathbf r) =\n\\begin{bmatrix}\n0 \\\\ 0 \\\\ J_m^s\n\\end{bmatrix}\n\\]\nThe vector-valued PDE 7.2 would turn into\n\\[\n\\laplacian \\mathbf F + k^2 \\mathbf F = -i \\omega \\mu m \\delta^3(\\mathbf r) \\mathbf e_z,\n\\]\nhence, the scalar potential for a magnetic dipole aligned with the \\(z\\)-axis is\n\\[\nF_z = \\mathbf F \\cdot \\mathbf e_z = \\frac{ i \\omega \\mu m }{ 4 \\pi r } e^{-i k r}.\n\\]\n\n\n\n\n\n\nTip\n\n\n\nThe potential of a dipole embedded in a uniform fullspace can be calculated with the help of the Green’s function.\nDipole induction problems become particularly easy to solve when the dipole axis is aligned with a Cartesian axis.\n\n\nWith the ansatz defined above\n\\[\n\\mathbf E_m = - \\curl \\mathbf F\n\\]\nand\n\\[\n\\mathbf H_m = \\frac{ 1 }{ i \\omega \\mu } (\\grad \\divergence \\mathbf F + k^2 \\mathbf F)\n\\]\nwe can calculate the components of the electric and magnetic fields in a straightforward manner.\nNote that there are just spatial derivatives involved.\nHowever, the symmetry of the problem suggests using cylindrical coordinates.\n\\[\n\\begin{align}\n    \\curl \\mathbf F = & \\left(\n        \\frac{1}{r}\n    \\frac{\\partial F_z}{\\partial \\varphi}-\n    \\frac{\\partial F_\\varphi}{\\partial z}\n    \\right){\\mathbf e_r} + \\\\\n    & \\left(\\frac{\\partial F_r}{\\partial z}-\n    \\frac{\\partial F_z}{\\partial r}\n    \\right) {\\mathbf e_\\varphi} + \\\\\n    & \\frac{1}{r} \\left(\n        \\frac{\\partial \\left(r F_\\varphi\\right)}{\\partial r}-\n    \\frac{\\partial F_r}{\\partial \\varphi}\n    \\right){\\mathbf e_z}.\n\\end{align}\n\\tag{7.6}\\]\nIn the case of a dipole oriented in \\(z\\)-direction, the curl simplifies to\n\\[\n\\curl \\mathbf F = - \\frac{\\partial F_z}{\\partial r} \\mathbf e_\\varphi,\n\\tag{7.7}\\]\nwhere \\(\\mathbf e_\\varphi\\) is the unit coordinate vector in \\(\\varphi\\)-direction.\n\n\n\n\n\n\nNote\n\n\n\nSince the dipole axis is aligned with the \\(z\\)-axis, we expect axisymmetric field components.\nThe magnetic field forms closed field lines which are uniform in the azimuthal \\(\\varphi\\)-direction.\nFor a magnetic dipole aligned with the \\(z\\)-direction we observe the field components\n\\[\nE_\\varphi,\\quad H_r,\\quad H_z.\n\\]\nThe components are mutual orthogonal!\n\n\n\n7.7.1 Electric field\nWith the definition\n\\[\n\\mathbf E = -\\curl \\mathbf F\n\\]\nwe find using 7.7 that\n\\[\nE_\\varphi = \\frac{\\partial F_z}{\\partial r}.\n\\]\nHence,\n\\[\nE_\\varphi = \\partial_r F_z = -\\frac{i \\omega \\mu m }{4 \\pi r^2} (1 + i k r) \\exp(-i k r).\n\\]\n\n\n\n\n\n\nSelf study\n\n\n\nCarry out the derivation by yourself.\n\n\nThe change of the basis from cylindrical to Cartesian coordinates requires for the horizontal components\n\\[\n\\mathbf E = E_\\varphi \\mathbf e_\\varphi = E_\\varphi\n\\begin{pmatrix}\n-\\sin\\varphi \\\\\n\\cos\\varphi\n\\end{pmatrix},\n\\]\nsince\n\\[\n\\begin{bmatrix}\n\\mathbf e_r \\\\ \\mathbf e_\\varphi \\\\ \\mathbf e_z\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n\\cos\\varphi & \\sin\\varphi & 0 \\\\\n-\\sin\\varphi & \\cos\\varphi & 0 \\\\\n0 & 0 & 1\n\\end{bmatrix}\n\\begin{bmatrix}\n\\mathbf e_x \\\\ \\mathbf e_y \\\\ \\mathbf e_z\n\\end{bmatrix}.\n\\]\nWith the angle \\(\\varphi\\) counting positive from the \\(x\\)-axis in the direction of \\(y\\), we can use the relations\n\\[\n\\cos\\varphi = \\frac{x}{r}, \\quad \\sin\\varphi = \\frac{y}{r}.\n\\]\nHence,\n\\[\n\\begin{align}\nE_x & = +i \\omega \\mu m \\frac{\\sin\\varphi}{4 \\pi r^2}(1 + i k r) \\exp(-i k r) \\\\\nE_y & = -i \\omega \\mu m \\frac{\\cos\\varphi}{4 \\pi r^2}(1 + i k r) \\exp(-i k r)\n\\end{align}\n\\]\nA useful expression for an arbitrary orientation of the dipole is given by\n\\[\n\\mathbf E(\\mathbf r) = -\\frac{i \\omega \\mu}{4 \\pi r^3} (1 + i k r) \\exp(-i k r) \\mathbf m \\times \\mathbf r,\n\\]\nwhere the components of \\(\\mathbf E\\) depend on both the direction of the dipole moment and the direction to the source.\nCheck:\nWith\n\\[\n\\mathbf m =\n\\begin{bmatrix}\n0 \\\\ 0 \\\\ m\n\\end{bmatrix}\n\\]\nand\n\\[\n\\mathbf r =\n\\begin{bmatrix}\nx \\\\ y \\\\ z\n\\end{bmatrix}\n\\] we obtain \\[\n- \\mathbf m \\times \\mathbf r =\n\\begin{bmatrix}\nmy \\\\ -mx \\\\ 0\n\\end{bmatrix} =\n\\begin{bmatrix}\nm r \\sin\\varphi \\\\ -m r \\cos\\varphi \\\\ 0\n\\end{bmatrix}\n.\n\\]\n\n\n\n\n\n\nNote\n\n\n\nLooking in the direction of the positive \\(z\\)-axis of a right-handed coordinate system, the induced electric field is oriented counter-clockwise, when \\(\\mathbf m\\) is oriented in positive \\(z\\)-direction.\n\n\n\n\n7.7.2 Magnetic field\nFor the magnetic field, we need\n\\[\n\\mathbf H = -\\sigma \\mathbf F + \\frac{1}{i\\omega\\mu} \\grad \\divergence \\mathbf F = \\frac{1}{i\\omega\\mu} \\left(\n    k^2 \\mathbf F + \\grad\\divergence \\mathbf F\n\\right).\n\\]\nThe \\(\\nabla\\cdot\\)-operator requires the calculation of \\(\\partial_z F_z\\), whereas the gradient requires to provide all partial derivatives of \\(\\partial_z F_z\\) with respect to \\(r\\) and \\(z\\).\nWe recall that\n\\[\nr = \\sqrt{x^2 + y^2 + z^2}\n\\]\nand use the chain rule to obtain\n\\[\n\\partial_z F_z = \\partial_r F_z \\cdot \\partial_z r,\n\\]\nwhere\n\\[\n\\partial_z r = \\frac{ z }{ r}.\n\\]\nFurther, the divergence and gradient operators generally read in cylindrical coordinates for a vector field \\(\\mathbf F\\) and a scalar field \\(f\\)\n\\[\n\\divergence \\mathbf F = \\frac{1}{r} \\partial_r(r F_r) +\n\\frac{1}{r} \\partial_\\varphi F_\\varphi +\n\\partial_z F_z\n\\]\nand\n\\[\n\\grad f = \\partial_r f \\mathbf e_r +\n\\frac{1}{r} \\partial_\\varphi f \\mathbf e_\\varphi +\n\\partial_z f \\mathbf e_z.\n\\]\nIn our case we need to calculate\n\\[\n\\divergence \\mathbf F = \\partial_z F_z.\n\\]\nTo compute the derivatives, we use sympy:\n\n\nShow the code\nfrom sympy import diff, symbols, sqrt, pi, exp, I, simplify, Derivative, Matrix\nx, y, z, r, omega, mu, sigma, m = symbols('x y z r omega mu_0 sigma m', real=True)\nk = symbols('k')\n\nFz = I * omega * mu * m / (4 * pi * r) * exp(-I * k * r)\nprint('Fz = ')\nFz\n\n\nFz = \n\n\n\\(\\displaystyle \\frac{i m \\mu_{0} \\omega e^{- i k r}}{4 \\pi r}\\)\n\n\nNext, we implement an expression for \\(\\divergence \\mathbf F\\):\n\n\nShow the code\ndivF = diff(Fz.subs(r, sqrt(x**2 + y**2 + z**2)), z).subs(sqrt(x**2 + y**2 + z**2), r).simplify()\nprint('divF = ')\ndivF\n\n\ndivF = \n\n\n\\(\\displaystyle \\frac{m \\mu_{0} \\omega z \\left(k r - i\\right) e^{- i k r}}{4 \\pi r^{3}}\\)\n\n\nThe chain rule can be implemented by a lambda function chain which first substitutes \\(r\\) by the square root, forms the derivative, and finally substitutes all square root expressions by \\(r\\) or powers thereof.\n\n\nShow the code\nchain = lambda F, v: diff(F.subs(r, sqrt(x**2 + y**2 + z**2)), v).subs(sqrt(x**2 + y**2 + z**2), r).simplify()\n\n\nA call to chain, i.e., the implementation of \\(\\partial_z \\partial_z F_z\\) would simply look as follows:\nchain(Fz, z)\nHowever, to get the magentic field components, we need to divide by the term \\(i \\omega \\mu_0\\).\n\n\nShow the code\nHx = chain(divF, x).factor() / (I * omega * mu)\nprint('Hx =')\nHx\n\n\nHx =\n\n\n\\(\\displaystyle - \\frac{m x z \\left(k^{2} r^{2} - 3 i k r - 3\\right) e^{- i k r}}{4 \\pi r^{5}}\\)\n\n\n\n\nShow the code\nHy = chain(divF, y).factor() / (I * omega * mu)\nprint('Hy =')\nHy\n\n\nHy =\n\n\n\\(\\displaystyle - \\frac{m y z \\left(k^{2} r^{2} - 3 i k r - 3\\right) e^{- i k r}}{4 \\pi r^{5}}\\)\n\n\nTo get \\(H_z\\) we have to add the term \\(k^2 F_z\\) as\n\n\nShow the code\nHz = (chain(divF, z) + k**2 * Fz) / (I * omega * mu)\nprint('Hz =')\nHz.factor().simplify()\n\n\nHz =\n\n\n\\(\\displaystyle \\frac{m \\left(k^{2} r^{4} - k^{2} r^{2} z^{2} - i k r^{3} + 3 i k r z^{2} - r^{2} + 3 z^{2}\\right) e^{- i k r}}{4 \\pi r^{5}}\\)\n\n\nWe can generalize using the following notation:\n\\[\n\\mathbf H(\\mathbf r) = \\frac{1}{4 \\pi r^3} \\left[\n    \\frac{\\mathbf m \\cdot \\mathbf r}{r^2} (3 + 3 i k r - k^2 r^2) \\mathbf r - (1 + i k r - k^2 r^2) \\mathbf m\n    \\right] e^{-i k r}.\n\\]\nLet’s check the validity on our example.\nWe introduce the symbolic vector quantities M and R, and implement a lambda function to express the magnetic field with respect to the orientation of the magnetic dipole moment:\n\n\nShow the code\nM = Matrix([0, 0, m])\nR = Matrix([x, y, z])\nH = lambda M: (M.dot(R) * (3 + I * k * r - k**2 * r**2) * R / r**2 - (1 + I * k * r - k**2 * r**2) * M) * exp(-I * k * r) / (4 * pi * r**3)\nprint('H(M) =')\nH(M)\n\n\nH(M) =\n\n\n\\(\\displaystyle \\left[\\begin{matrix}\\frac{m x z \\left(- k^{2} r^{2} + i k r + 3\\right) e^{- i k r}}{4 \\pi r^{5}}\\\\\\frac{m y z \\left(- k^{2} r^{2} + i k r + 3\\right) e^{- i k r}}{4 \\pi r^{5}}\\\\\\frac{\\left(- m \\left(- k^{2} r^{2} + i k r + 1\\right) + \\frac{m z^{2} \\left(- k^{2} r^{2} + i k r + 3\\right)}{r^{2}}\\right) e^{- i k r}}{4 \\pi r^{3}}\\end{matrix}\\right]\\)\n\n\nThis confirms the correctness of our derivation.",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Sources in unbounded media</span>"
    ]
  },
  {
    "objectID": "potentials.html#apparent-resistivity",
    "href": "potentials.html#apparent-resistivity",
    "title": "7  Sources in unbounded media",
    "section": "7.8 Apparent resistivity",
    "text": "7.8 Apparent resistivity\nHowever, geophysics is primarily interested in reconstructing the spatial distribution of electrical conductivity from measured field quantities (inversion). This step is based on a model conception of the spatial conductivity distribution. In general, the conductivity is a function of location with \\(\\sigma=\\sigma(x,y,z)&gt;0\\). In the simplest case, we assume that the halfspace or fullspace is a uniform conductor, i.e., \\(\\sigma= const\\). The model of the homogeneous halfspace or fullspace can therefore be completely described by a single number. We now try to determine this number mathematically from the measured field quantities.\nThis is the simplest form of a geophysical inversion!\nWe use the impedance to solve the problem. From this we then determine the apparent resistivity.\nThe following questions will be answered:\n\nCan the concept of impedance be transferred to dipole excitation?\nIs it possible to reconstruct the electrical resistivity from the impedance?\nWhat are the differences compared to homogeneous excitation (MT)?\n\nWe implement the general equations for the electric and magnetic fields as Python functions E and H, resp.:\n\n\nShow the code\ndef E(r, m, f, sigma):\n    mu = np.pi * 4e-7\n    omega = 2 * np.pi * f\n    iwm = 1j * omega * mu\n    alpha = iwm / (4 * np.pi)\n    k = np.sqrt(-iwm * sigma)\n    x = r[0]\n    y = r[1]\n    z = r[2]\n    R = np.linalg.norm(r)\n    ikr = 1j * k * R\n    E = -alpha / R**3 * (1.0 + ikr) * np.exp(-ikr) * np.cross(m, r)\n    return E\n\ndef H(r, m, f, sigma):\n    mu = np.pi * 4e-7\n    omega = 2 * np.pi * f\n    iwm = 1j * omega * mu\n    k = np.sqrt(-iwm * sigma)\n    x = r[0]\n    y = r[1]\n    z = r[2]\n    R = np.linalg.norm(r)\n    ikr = 1j * k * R\n    k2r2 = k**2 * R**2\n    H = np.exp(-ikr) / (4 * np.pi * R**3) * (\n        \n            np.dot(m, r) / R**2 * (3 + 3 * ikr - k2r2) * r\n            -\n            (1 + ikr - k2r2) * m\n        )\n    return H\n\n\nWe check with the parameters defining a VMD in horizontal coplanar configuration oscillating at a frequency of 100 Hz located at the origin of a uniform fullspace:\n\n\\(\\mathbf r = [100, 0, 0]^\\top\\) m\n\\(\\mathbf m = [0, 0, 1]^\\top\\) A\\(\\cdot m^2\\)\n\\(f = 100\\) Hz\n\\(\\sigma = 0.01\\) S/m.\n\nLet’s have a look at the electric field evaluated with the function E:\n\n\nShow the code\nr = np.array([100.0, 0.0, 0.0])\nm = np.array([0.0, 0.0, 1.0])\nf = 100.0\nsigma = 0.01\ne = E(r, m, f, sigma)\nEy = e[1]\nprint(np.array_str(e, precision=2))\n\n\n[ 0.00e+00-0.00e+00j -2.15e-10-6.25e-09j  0.00e+00-0.00e+00j]\n\n\nNow let’s evaluate the magnetic field using H:\n\n\nShow the code\nh = H(r, m, f, sigma)\nHz = h[2]\nprint(np.array_str(h, precision=2))\n\n\n[ 0.00e+00+0.00e+00j  0.00e+00+0.00e+00j -8.02e-08-2.32e-09j]\n\n\nWe recognize that for a vertically aligned dipole, when observed at the \\(x\\)-axis, only the \\(y\\)-component of \\(\\mathbf E\\) and the \\(z\\)-component of \\(\\mathbf H\\) are non-zero.\nNow we try to calculate the impedance from the ratio of two mutually orthogonal components of \\(\\mathbf E\\) and \\(\\mathbf H\\), e.g.,\n\\[\nZ = \\frac{ E_y }{ H_z}.\n\\]\nThe result is complex number:\n\n\nShow the code\nZ = Ey / Hz\nnp.set_printoptions()\nnp.set_printoptions(precision=2, floatmode='fixed')\nprint('Z = ' + str(np.round(Z, 4)))\n\n\nZ = (0.0049+0.0778j)\n\n\nFor the calculation of the apparent resistivity, we use\n\\[\n\\rho_a = \\frac{ 1 }{ \\omega \\mu_0} |Z|^2\n\\]\n\n\nShow the code\ndef rhoa(Z, f):\n    mu = np.pi * 4e-7\n    omega = 2 * np.pi * f\n    return np.abs(Z)**2 / (omega * mu)\nprint('The apparent resistivity is ' + str(np.round(rhoa(Z, f), 4)) + ' Ohm*m.')\n\n\nThe apparent resistivity is 7.6995 Ohm*m.\n\n\nThis does not meet our expectations. We are therefore investigating whether the impedance depends on the frequency and/or the distance to the dipole.\nWe vary the frequencies and observe \\(\\rho_a\\) as a function of frequency.\n\n\nShow the code\nnf = 41\nfreq = np.logspace(1, 5, nf, endpoint=True)\nRhoa_f = [rhoa(E(r,m,v,sigma)[1] / H(r,m,v,sigma)[2], v) for v in freq]\n\n\n\n\nShow the code\nimport matplotlib.pyplot as plt\n\nfig, ax = plt.subplots(1, 1, figsize=(6,4))\nax.loglog(freq, Rhoa_f, label=r'$\\rho_a$')\nax.grid(True)\nax.set_xlabel('f in Hz')\nax.set_ylabel(r'$\\rho_a~in~\\Omega\\cdot m$')\nax.set_title('Dipole offset ' + str(np.linalg.norm(r)) + ' m')\nax.axhline(1e2, color='C1', label=r'true $\\rho$')\nax.legend()\nax\n\n\n\n\n\n\n\n\n\nObviously, the value of \\(\\rho_a\\) depends on the frequency and asymptotically approaches the expected full-space value of the resistivity as \\(f \\to \\infty\\).\nWe gain more insight, when we vary the distance to the dipole while keeping the frequency fixed.\n\n\nShow the code\nnr = 41\nx = np.logspace(0, 4, nr, endpoint=True)\nRhoa_x = np.array([rhoa(E(np.array([v, 0, 0]),m,f,sigma)[1] / H(np.array([v, 0, 0]),m,f,sigma)[2], f) for v in x])\n\n\n\n\nShow the code\nfig, ax = plt.subplots(1, 1, figsize=(6,4))\n\nax.loglog(x, Rhoa_x, label=r'$\\rho_a$')\nax.axhline(1e2, color='C1', label=r'true $\\rho$')\nax.grid(True)\nax.legend()\nax.set_xlabel('r in m')\nax.set_ylabel(r'$\\rho_a~in~\\Omega\\cdot m$')\nax.set_title('Frequency ' + str(np.linalg.norm(f)) + ' Hz')\nax\n\n\n\n\n\n\n\n\n\nIs there a consistent explanation for these observations? We look at the induction parameter \\(|k|r\\) and revisit the parameters from the previous examples.\n\n\nShow the code\ndef kr(f, sigma, r):\n    mu = np.pi * 4e-7\n    omega = 2 * np.pi * f\n    return r * np.abs(np.sqrt(-1j * omega * mu * sigma))\n\ndef pos(data, threshold):\n    return np.where(np.array(data) &gt; threshold, data, np.nan)\n\n\n\n\nShow the code\nKR = np.array([kr(v, sigma, np.linalg.norm(r)) for v in freq])\n\nfig, ax = plt.subplots(1, 1, figsize=(6,4))\n\n\nax.loglog(freq, KR, color='C1', label=r'|k|r &gt; 1')\niind = np.argwhere(KR &lt; 1)\nax.loglog(freq[iind], KR[iind], color='C0', label=r'|k|r &lt; 1')\nax.legend()\nax.grid(True)\nax.set_ylabel(r'$|k|r$')\nax.set_xlabel('f in Hz')\nax.set_title('Dipole offset ' + str(np.linalg.norm(r)) + ' m')\nax\n\n\n\n\n\n\n\n\n\nWith the indicator \\(|k|r\\) just introduced, it is easier to determine which branch of the asymptotic we are on.\n\n\nShow the code\nKR = np.array([kr(f, sigma, v) for v in x])\n\nfig, ax = plt.subplots(1, 1, figsize=(6,4))\n\n\nax.loglog(x, Rhoa_x, color='C1', label=r'$|k|r &gt; 1$')\niind = np.argwhere(KR &lt; 1)\nax.loglog(x[iind], Rhoa_x[iind], color='C0', label=r'$|k|r &lt; 1$')\nax.legend()\nax.grid(True)\nax.set_xlabel('r in m')\nax.set_ylabel(r'$\\rho_a~in~\\Omega\\cdot m$')\nax.set_title('Frequency ' + str(np.linalg.norm(f)) + ' Hz')\nax\n\n\n\n\n\n\n\n\n\nIn contrast to homogeneous excitation, the impedance and thus the apparent resistivity for dipole excitation depends not only on the frequency but also on the distance between the dipole source and the receiver. At \\(|k|r \\gg 1\\) we speak of the far zone. The impedance relationships there are similar to those for the MT. At \\(|k|r \\ll 1\\) we are in the near zone. The induction parameter is small. The low induction number (LIN) methods work in this regime. With the Geonics EM-34, for example, a coil distance of around 10 m is selected at a frequency of 6,400 Hz. The induction parameter for this configuration is less than 1 if the conductivity is sufficiently low.\nWe check these findings for a range of conductivities.\n\n\nShow the code\nns = 41\nsigma = np.logspace(-4, 0, ns, endpoint=True)\nr = 10.0\nf = 6400.0\nKR = np.array([kr(f, v, r) for v in sigma])\n\nHz = np.array([H(np.array([r, 0, 0]), np.array([0, 0, 1]), f, v)[2] for v in sigma])\n\nfig, (ax1, ax2) = plt.subplots(2, 1, figsize=(6,4), sharex=True)\n\nax1.loglog(KR, np.abs(np.real(Hz)))\nax1.axvspan(KR[0], 1.0, facecolor='green', alpha=0.1, label=r'$|k|r&lt;1$')\nax1.axvspan(1.0, KR[-1], facecolor='red', alpha=0.1, label=r'$|k|r&gt;1$')\nax1.grid(True)\nax1.legend()\nax1.set_ylabel(r'$|Re(H_z)|$')\nax2.loglog(KR, np.abs(np.imag(Hz)))\nax2.axvspan(KR[0], 1.0, facecolor='green', alpha=0.1, label=r'$|k|r&lt;1$')\nax2.axvspan(1.0, KR[-1], facecolor='red', alpha=0.1, label=r'$|k|r&gt;1$')\nax2.grid(True)\nax2.set_xlabel(r'$|k|r$')\nax2.set_ylabel(r'$|Im(H_z)|$')\nax2.legend()\n\n\n\n\n\n\n\n\nFigure 7.1: Real and imaginary part of the magnetic field of an oscillating magnetic dipole. The green and red shading indicates the regime for \\(|k|r &lt; 1\\) and \\(|k|r &gt; 1\\), resp.\n\n\n\n\n\nAs we can see from Fig. Figure 7.1, the real part of the magnetic field goes to a constant value for \\(|k|r \\to 0\\), whereas the imaginary part shows a straight line in the log-log plot.\nFor \\(|k|r \\to 0\\), i.e., for very small conductivities, we approach free-space conditions. The magnetic field of a vertical dipole in horizontal co-planar configuration is\n\\[\nH_z = -\\frac{ m }{4 \\pi r^3 }.\n\\]\nWe evaluate this equation with the given values of \\(r\\) and \\(m\\). We obtain\n\n\nShow the code\nprint('H_z   = ' + str(-1 / (4 * np.pi * r**3)))\nprint('Hz[0] = ' + str(np.real(Hz[0])))\n\n\nH_z   = -7.957747154594768e-05\nHz[0] = -7.957789009530794e-05\n\n\nThese numbers match very well.\nOn the other hand, for fixed values of \\(r\\) and \\(f\\) it is possible to calibrate the instrument such that the reading of the imaginary part of \\(H_z\\) for low induction numbers yields the desired apparent resistivity.\n\n7.8.1 Instrument error\nWhat about the uncertainty of the readings of such an instrument?\nFrequency stability in the instrument is not a problem. The situation is different when measuring the distance between the coils. We therefore finally examine the sensitivity of the magnetic field measurement to inaccuracies in the distance measurement. To do this, we consider the error according to the linear error propagation law\n\\[\n\\Delta H_z = \\left| \\frac{\\partial H_z}{\\partial r} \\right| \\Delta r.\n\\]\nFor the magnetic field in the coplanar coil configuration in free space, we obtain\n\\[\n\\Delta H_z = \\frac{3 m}{4 \\pi r^4} \\Delta r,\n\\]\nwhich results in an estimate of the relative error\n\\[\n\\frac{\\Delta H_z}{H_z} = 3 \\frac{\\Delta r}{r} .\n\\]\nAccordingly, the relative error in the magnetic field measurement is three times as large as the relative error in the distance measurement.\n\n\n\n\nAbramowitz, M. & Stegun, I.A., 1972. Handbook of mathematical functions with formulas, graphs, and mathematical tables, Tenth., Dover Publications.",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Sources in unbounded media</span>"
    ]
  },
  {
    "objectID": "timedomain_fullspace.html",
    "href": "timedomain_fullspace.html",
    "title": "8  Fields in the time domain",
    "section": "",
    "text": "8.1 Introduction\nSo far, we have investigated fields as a function of location and frequency. This is adequate as long as we consider time-harmonic dipole excitation with a time dependency of the dipole moment of \\(e^{i\\omega t}\\), i.e.\n\\[\n\\mathbf m(\\mathbf r, \\omega) = \\mathbf m(\\mathbf r) e^{i\\omega t}.\n\\]\nThe relationships immediately become different if we allow abrupt changes in the dipole moment instead, e.g.,\n\\[\n\\mathbf m(\\mathbf r, t) = \\mathbf m(\\mathbf r) \\delta(t)\n\\] or \\[\n\\mathbf m(\\mathbf r, t) = \\mathbf m(\\mathbf r) u(t).\n\\]\n\\(u(t)\\) is the Heaviside step function \\[\n\\begin{equation}\nu(t) =\n\\begin{cases}\n0 & t &lt; 0 \\\\\n1 & t &gt; 0.\n\\end{cases}\n\\end{equation}\n\\]\nThe following figures show the Heaviside function \\(u(t)\\) and the result of the time integration of the Dirac delta function \\(\\delta(t)\\).\nWe use the symbolic expressions t for the time as well as Heaviside and DiracDelta for step function and Dirac’s delta function respectively. Furthermore, we use the function integrate for symbolic integration.\nShow the code\nimport numpy as np\nfrom sympy import symbols, diff, Heaviside, DiracDelta, integrate, plot, sqrt, exp, oo, erf, erfc, pi\nt = symbols('t', real=True)\nplot(Heaviside(t), (t, -1, 1), size=(6,3), title='Heaviside')\nThe following figure shows the result of the time integration of the Dirac delta function, where the integral over \\(\\delta(t)\\) from \\(-\\infty\\) to \\(t\\) is assigned to the value of a function at time \\(t\\).\nShow the code\nplot(integrate(DiracDelta(t), t), (t, -1, 1), size=(6,3), title=r'$\\int_{-\\infty}^t\\delta(\\tau) d\\tau$')\nBoth figures obviously show the same result. So the following applies \\[\nu(t) = \\int\\limits_{-\\infty}^t \\delta(\\tau) \\, \\mathrm d \\tau.\n\\]\nWe can reproduce the result using symbolic mathematics.\n(In sympy the Heaviside function has the symbol \\(\\theta\\)).\nintegrate(DiracDelta(t), t)\n\n\\(\\displaystyle \\theta\\left(t\\right)\\)\nConversely, the following applies to the time derivative of the Heaviside function \\[\n\\frac{\\mathrm d}{\\mathrm dt} u(t) = \\delta(t),\n\\] of which we can convince ourselves by symbolic differentiation:\ndiff(Heaviside(t), t)\n\n\\(\\displaystyle \\delta\\left(t\\right)\\)",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Fields in the time domain</span>"
    ]
  },
  {
    "objectID": "timedomain_fullspace.html#terminology",
    "href": "timedomain_fullspace.html#terminology",
    "title": "8  Fields in the time domain",
    "section": "8.2 Terminology",
    "text": "8.2 Terminology\nWe will use two important terms in the time domain, namely\n\nstep function response and\nimpulse response.\n\nThese terms are related to the time dependence of the current function of the dipole moment.\nIn general, the dipole moment is a function of location and time, i.e., \\(\\mathbf m(\\mathbf r, t) = \\mathbf q(\\mathbf r) I(t)\\). Here, \\(\\mathbf q(\\mathbf r)\\) describes the exact position of the current-carrying cable (e.g., a large horizontal coil on the Earth’s surface) and \\(I(t)\\) the time dependence of the current in this coil.\nIn the following, we only consider the time dependence of the dipole moment, i.e., \\(I(t)\\).\n\n8.2.1 Step function response\nThe fields that we can measure anywhere in the full space as a direct result of switching the source current on or off are called the step function response of the electrically conductive full space\nA current function of the form\n\\[\nI(t) = I_0 u(t)\n\\]\ndescribes the switching on of a current in the source at the time \\(t=0\\) in the form of a step function. The fields \\(\\mathbf e(t)\\) and \\(\\mathbf b(t)\\) observed for \\(t &gt; 0\\) are called step function response. These fields are measured with electrodes or magnetometers.\n\n\n8.2.2 Impulse response\nThe current function\n\\[\nI(t) = I_0 \\delta(t)\n\\]\ndescribes an impulse-like source current (“lightning”), which, however, cannot be realized in an instrument and is difficult to measure.\nHow can we measure the impulse response?\nThe following idea is interesting: If you measure magnetic fields with induction coils, the physical measured variable is the electrical voltage induced in the measuring coil, which is proportional to the change in the magnetic field over time.\nInduction coils measure \\(\\partial_t b(t)\\), i.e. the time derivative of the step function response \\(b(t)\\)!\nHow can this relationship be described?\nWe have already seen above that the integration of the Dirac delta function with respect to time yields the Heaviside jump function. Conversely, the time derivative of the step function yields the delta function, i.e. a Dirac impulse.\nWe transfer this concept to the fields:\n\n\n\nfield size\ntime dependence of the source\nterm\n\n\n\n\n\\(\\mathbf e(t),\\mathbf b(t)\\)\n\\(u(t)\\)\nStep function response\n\n\n\\(\\frac{d}{dt} \\mathbf b(t)\\)\n\\(\\frac{d}{dt} u(t)\\)\nimpulse response\n\n\n\\(\\frac{d}{dt} \\mathbf b(t)\\)\n\\(\\delta(t)\\)\nimpulse response\n\n\n\n\n\n8.2.3 Differentiation, integration, convolution\nWe now derive an important relationship between the impulse response and the step function response.\nLet \\(h(t)\\) be the impulse response.\n\n\n\n\n\n\nNote\n\n\n\nThe impulse response \\(h(t)\\) used here a physically unspecified function of time, not the magnetic field!\n\n\nWe then obtain the step function response \\(f(t)\\) from the convolution of the impulse response \\(h(t)\\) with the Heaviside function \\(u(t)\\):\n\\[\nf(t)=(h * u)(t)=(u * h)(t) =\\underbrace{\\int_{-\\infty}^{\\infty} h(t') u(t-t') \\dd t'}_{f_1(t)} = \\underbrace{\\int_{-\\infty}^{t} h(t') \\dd t'}_{\nf_2(t)}\n\\]\nThe step function response at time \\(t\\) is therefore the result of the time integration over the impulse response from \\(-\\infty\\) to \\(t\\).\nIn the following example, we assume that the impulse response is \\(h(t) = e^{-t^2}\\).\n\n\nShow the code\ndef h(t):\n     return exp(-t**2)\nplot(h(t), (t, -10, 10), size=(6,3), ylabel='h(t)')\n\n\n\n\n\n\n\n\n\nWe define symbolic expressions for the integrals introduced above to calculate \\(f(t)\\):\n\\[\nf_1(\\tau) = \\int_{-\\infty}^{\\infty} h(t) u(\\tau-t) \\dd t\n\\] \\[\nf_2(\\tau) = \\int_{-\\infty}^{\\tau} h(t) \\dd t\n\\]\n\ntau = symbols('tau', real=True)\ndef f1(tau):\n    return integrate(h(t) * Heaviside(tau - t), (t, -oo, oo))\n\ndef f2(tau):\n    return integrate(h(t), (t, -oo, tau))\n\n\nf1(tau)\n\n\\(\\displaystyle \\frac{\\sqrt{\\pi} \\left(2 - \\operatorname{erfc}{\\left(\\tau \\right)}\\right)}{2}\\)\n\n\n\nf2(tau)\n\n\\(\\displaystyle \\frac{\\sqrt{\\pi} \\left(2 - \\operatorname{erfc}{\\left(\\tau \\right)}\\right)}{2}\\)\n\n\nWe see that both integrals yield the same result, so \\(f(t) = f_1(t) = f_2(t)\\). For further calculations, it is sufficient to use the integral\n\\[\nf(\\tau) = \\int_{-\\infty}^\\tau h(t) \\, \\dd t.\n\\]\n\n\n\n\n\n\nNote\n\n\n\nBoth integrals involve the complementary error function erfc, which will be discussed later in more detail.\n\n\n\n\n8.2.4 Causal systems\nOnly causal systems occur in geophysics. In causal processes, no fields (or changes in the fields) can be measured before the source has been switched on (or changed). The effect is observed as a consequence of one of the causes.\nThe step function response for causal systems is\n\\[\nf_{\\mathrm{on}}(t)=\\int_{0}^{t} h(t') \\, \\dd t', \\quad t \\geq 0.\n\\]\n\n\nShow the code\ndef f_on(tau):\n    return integrate(h(t), (t, 0, tau))\n\nplot(f_on(t), (t, 0, 10), ylim=(0, 1), size=(6,3), title=r'$f_\\text{on}(t)$')\n\n\n\n\n\n\n\n\n\nWith \\(u(-t) = 1 - u(t)\\) we obtain the step function response for the switch-off process, which plays a major role in transient electromagnetics in particular, but also in the induced polarization method in the time domain.\n\\[\nf_{\\text {off }}(t) =\\int_{t}^{\\infty} h(t') \\dd t' = \\int_{0}^{\\infty} h(t') \\dd t' - \\int_{0}^{t} h(t') \\dd t', \\quad t \\geq 0\n\\]\nThe integrals can be expressed by the step function response for causal systems \\(f_{\\text {on }}(t)\\):\n\\[\nf_{\\text {off }}(t) = f_{\\text {on }}(\\infty) - f_{\\text {on }}(t), \\quad t \\geq 0\n\\]\nThis means that all we need to calculate the step function response of transient electromagnetics is a routine that can calculate the step response for the switch-on process!\n\n\nShow the code\ndef f_off(tau):\n    return f_on(oo) - f_on(tau)\n\nplot(f_off(t), (t, 0, 10), ylim=(0, 1), size=(6,3), title=r'$f_\\text{off}(t)$')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe figure for \\(f_\\text{on}(t)\\) shows the typical behaviour of a field build-up after the source is switched on. We observe an increase in the field and a transition to a stationary state for \\(t \\to \\infty\\).\n\\(f_\\text{off}(t)\\) shows the decay of the field, where the initial value at \\(t=0\\) decreases monotonically for \\(t &gt; 0\\) to disappear for \\(t \\to \\infty\\).\n\n\nWe will now deal with the transformation between the time and frequency domains. To do this, we need the Laplace transformation (LT) and its properties.\nThe starting point is the comparison of the curl-curl equation in the time domain and in the frequency domain.\nIn the frequency domain we require \\(F\\) to be a solution to the PDE\n\\[\n\\begin{equation}\n-\\partial_{xx}^2 F + i\\omega\\mu\\sigma F = -i\\omega J^{e}\n\\end{equation}\n\\] with \\[\n\\begin{equation}\nJ^e(\\mathbf r, \\omega) = q(\\mathbf r).\n\\end{equation}\n\\]\nIn the time domain, the field \\(f\\) solves the PDE\n\\[\n\\begin{equation}\n-\\partial_{xx}^2 f + \\mu\\sigma \\partial_{t} f = -\\partial_{t} j^{e}\n\\end{equation}\n\\] with \\[\n\\begin{equation}\nj^e(\\mathbf r, t) = q(\\mathbf r) \\delta(t).\n\\end{equation}\n\\]\nObservations:\nIn the frequency domain, there is no explicit dependence of the source current density \\(J^e(\\mathbf r, \\omega)\\) on the frequency.\nWe conclude from this that in the time domain, the source current function \\(j^e\\) can be explicitly represented by a Dirac impulse on the time axis. The solution of this curl-curl equation is the impulse response.\nThe solution of the curl-curl equation in the frequency domain is then obtained from the Fourier transform of the impulse response in the time domain.\nTo calculate the step function response in the frequency domain, we must calculate the explicit time dependence of \\(j^e\\) using the step function \\(u(t)\\)\n\\[\nj^e_s(t) = q(\\mathbf r) u(t).\n\\]\nWe obtain the Fourier transform of the source term with step function excitation:\n\\[\nJ^e_s(\\omega) = q(\\mathbf r) \\left(\\pi \\delta(\\omega) + \\frac{1}{i \\omega}\\right)\n\\]\nThe step function response in the frequency domain, \\(F_s(\\omega)\\), is thus obtained formally by multiplying the Fourier transform of the impulse response by the Fourier transform of the step function as \\[\nF_s(\\omega) = F(\\omega) \\left(\\pi \\delta(\\omega) + \\frac{1}{i \\omega}\\right) .\n\\]\nThe inverse Fourier transformation finally provides the desired step function response in the time domain,\n\\[\n\\begin{align}\nf_s(t) & = \\frac{1}{2\\pi} \\int\\limits_{-\\infty}^\\infty\n\\left(\\pi \\delta(\\omega) + \\frac{1}{i \\omega}\\right) F(\\omega) e^{i\\omega t} \\, \\dd\\omega \\\\ & = \\frac{F(0)}{2} +\n\\frac{1}{2\\pi} \\int\\limits_{-\\infty}^\\infty\n\\frac{F(\\omega)}{i\\omega}\ne^{i\\omega t} \\, \\dd\\omega\n\\end{align}\n\\]\nFormally, the Fourier transform must be added to half the value of the field at \\(\\omega = 0\\), where the values of \\(F\\) to be transformed are multiplied by \\(\\frac{1}{i\\omega}\\).\nThis corresponds to the well-known integration property of integral transforms.\nMathematical problems in connection with switch-on or switch-off processes can be solved elegantly with the Laplace transform.\n\n\n8.2.5 Laplace transform\nConsider a function \\(f(t)\\), \\(t &gt; 0\\).\nThe Laplace transform can be applied to \\(f(t)\\) as follows: \\[\n\\mathcal L(f(x, t))=\\int_{0}^{\\infty} e^{-s t} f(x, t) \\dd t \\equiv F(x, s)\n\\] with \\(x\\) as parameter.\nThe Laplace parameter \\(s\\) is complex and extends the imaginary frequency term \\(i\\omega\\) of the FT by the real part \\(a\\), so that with \\(s = a + i\\omega\\) we have a complex-valued “frequency”. In this way, the Laplace transform can also deal with unstable signals \\(f\\), since for \\(t \\to \\infty\\) the real part of \\(s\\) ensures that the integrand is limited.\nIn connection with PDEs, we also need the LT of the time derivative of \\(f(t)\\), or short \\(f_t(x, t) = \\partial_t f(x, t)\\)\n\\[\n\\mathcal L(f_t(x, t)),\n\\]\nwhich we calculate using the Laplace integral introduced above via integration by parts: \\[\n\\begin{align}\n\\mathcal L(f_t(x, t) & = \\int\\limits_{0}^{\\infty} e^{-s t} f_{t}(x, t) \\dd t \\\\ & = \\left.e^{-s t} f(x, t)\\right|_{0} ^{\\infty}+s \\int\\limits_{0}^{\\infty} e^{-s t} f(x, t) \\dd t \\\\ & = s F(x, s)-f(x, 0).\n\\end{align}\n\\]\nThe following table contains some important Laplace transform pairs:\n\n\n\n\\(f(t)\\)\n\\(\\mathcal L(f(t))\\)\n\n\n\n\n\\(u(t-a)\\)\n\\(\\dfrac{e^{-as}}{s}\\)\n\n\n\\(\\delta(t-a)\\)\n\\(e^{-as}\\)\n\n\n\\(1\\)\n\\(\\dfrac{1}{s}\\)",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Fields in the time domain</span>"
    ]
  },
  {
    "objectID": "timedomain_fullspace.html#inverse-transform-of-the-electric-field-with-step-function-excitation",
    "href": "timedomain_fullspace.html#inverse-transform-of-the-electric-field-with-step-function-excitation",
    "title": "8  Fields in the time domain",
    "section": "8.3 Inverse transform of the electric field with step function excitation",
    "text": "8.3 Inverse transform of the electric field with step function excitation\nThe starting point is the equation for the electric field of a magnetic dipole in full space.\nWith \\(r = |\\mathbf r|\\) it holds\n\\[\n    \\mathbf E(\\mathbf r, \\omega) = - \\frac{i \\omega \\mu}{4 \\pi r^3} \\left(1 + i k r\\right) e^{-i k r} \\mathbf m \\times \\mathbf r\n\\]\nAll terms that depend on the frequency are relevant for the transformation. Apart from the factor \\(i\\omega\\), which we will deal with later, these are\n\\[\ne^{-ikr}, \\quad ikr e^{-ikr}\n\\]\nand additionally\n\\[\n\\quad k^2 r^2 e^{-ikr}\n\\]\nfor the magnetic field.\nWith the function \\(\\Theta(t) = \\sqrt{\\frac{\\mu\\sigma}{4 t}}\\) we obtain the following expressions for the inverse Laplace transform (see Abramowitz & Stegun):\n\\[\n\\mathcal L^{-1} \\left( \\frac{1}{s} e^{-ikr} \\right) = \\mathrm{erfc}(\\Theta r)\n\\tag{8.1}\\]\n\\[\n\\mathcal L^{-1} \\left( \\frac{ikr}{s} e^{-ikr} \\right) = \\frac{2}{\\sqrt{\\pi}} \\Theta r e^{-\\Theta^2 r^2}\n\\tag{8.2}\\]\n\\[\n\\mathcal L^{-1} \\left( \\frac{k^2 r^2}{s} e^{-ikr} \\right) =\n-\\frac{4}{\\sqrt{\\pi}} \\Theta^3 r^3 e^{-\\Theta^2 r^2}\n\\tag{8.3}\\]\n\n8.3.1 Error function\nThe error function erf\\((t)\\) plays an important role. Its definition is \\[\n\\mathrm{erf}(t) = \\frac{2}{\\sqrt{\\pi}} \\int_0^t e^{-\\tau^2} \\dd\\tau.\n\\tag{8.4}\\]\nThe complementary error function erfc\\((t)\\) is \\[\n\\mathrm{erfc}(t) = 1 - \\mathrm{erf}(t).\n\\tag{8.5}\\]\nWe implement the error function again with sympy.\n\n\nShow the code\nplot(erf(t), (t,0,2), size=(6,3), title='erf(t)')\nplot(erfc(t), (t,0,2), size=(6,3), title='erfc(t)')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n8.3.2 Summary of all terms\nAfter the LT we first have\n\\[\n\\mathbf e(\\mathbf r, t) = -\\partial_t \\frac{\\mu}{4 \\pi r^3} \\left(\n\\mathrm{erfc}(\\Theta r) + \\frac{2}{\\sqrt{\\pi}} \\Theta r e^{-\\Theta^2 r^2}\n\\right) \\mathbf m \\times \\mathbf r.\n\\]\nWe now carry out the derivative with respect to time. To do this, we need the chain rule again, since \\(\\Theta = \\Theta(t)\\).\n\n\nShow the code\nmu, sigma, r = symbols('mu_0 sigma r', real=True)\ndef Theta(t):\n    return sqrt(mu * sigma / 4 / t)\n\nex1 = diff(erfc(Theta(t) * r), t)\nex2 = diff(Theta(t) * r * exp(-Theta(t)**2 * r**2), t)\n\nex = ex1 + 2 / sqrt(pi) * ex2\n\nex.subs(sqrt(mu * sigma / 4 / t), Theta(t)).factor().simplify()\n\n\n\\(\\displaystyle \\frac{\\mu_{0} r^{3} \\sigma \\sqrt{\\frac{\\mu_{0} \\sigma}{t}} e^{- \\frac{\\mu_{0} r^{2} \\sigma}{4 t}}}{4 \\sqrt{\\pi} t^{2}}\\)\n\n\nWe slightly rewrite this term with the help of \\(\\Theta(t)\\) to get\n\\[\n\\frac{2}{\\sqrt{\\pi} t} \\Theta^3 r^3 e^{-\\Theta^2 r^2}.\n\\]\nWith the leading terms and the cross product we obtain the final result for the electric field as a step function response\n\\[\n\\mathbf e(\\mathbf r, t) = -\\frac{\\mu}{4 \\pi r^3}\n\\frac{2}{\\sqrt{\\pi} t} \\Theta^3 r^3 e^{-\\Theta^2 r^2}\n\\mathbf m \\times \\mathbf r.\n\\]\nWe implement this function using Python.\n\n\nShow the code\ndef Et(r, m, t, sigma):\n    mu = np.pi * 4e-7\n    R = np.linalg.norm(r)\n    theta = np.sqrt(mu * sigma / 4 / t)\n    tr = theta * R\n    t2r2 = tr**2\n    alpha = -mu / 4 / np.pi\n    E = alpha / R**3 * np.cross(m, r) * 2  / (\n        np.sqrt(np.pi) * t) * (tr * t2r2) * np.exp(-t2r2)\n    return E\n\n\n\n\nShow the code\nEt(np.array([0, 100, 0]), np.array([0, 0, 1]), 1e-6, 0.01)\n\n\narray([ 4.5124908e-17, -0.0000000e+00, -0.0000000e+00])",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Fields in the time domain</span>"
    ]
  },
  {
    "objectID": "timedomain_fullspace.html#inverse-transform-of-the-magnetic-field-with-step-function-excitation",
    "href": "timedomain_fullspace.html#inverse-transform-of-the-magnetic-field-with-step-function-excitation",
    "title": "8  Fields in the time domain",
    "section": "8.4 Inverse transform of the magnetic field with step function excitation",
    "text": "8.4 Inverse transform of the magnetic field with step function excitation\nThe starting point is again the equation for the magnetic field in the frequency domain.\n\\[\n    \\mathbf H(\\mathbf r) = \\frac{1}{4 \\pi r^3} \\left[\n    \\frac{\\mathbf m \\cdot \\mathbf r}{r^2} (3 + 3 i k r - k^2 r^2) \\mathbf r - (1 + i k r - k^2 r^2) \\mathbf m\n    \\right] e^{-i k r}.\n\\]\nWith the expressions for the inverse Laplace transform introduced above, we obtain the magnetic field in the time domain:\n\\[\n\\begin{align}\n\\begin{split}\n\\mathbf h(\\mathbf r, t) = & \\frac{1}{4 \\pi r^3}\n\\left[\n    \\frac{\\mathbf m \\cdot \\mathbf r}{r^2}\n    \\left(3 \\, \\mathrm{erfc}(\\Theta r) + \\left(\\frac{6}{\\sqrt{\\pi}}\\Theta r + \\frac{4}{\\sqrt{\\pi}}\\Theta^3 r^3\\right)e^{-\\Theta^2 r^2}\n    \\right) \\mathbf r \\right. - \\\\\n     &  \\left. \\left(\n    \\mathrm{erfc}(\\Theta r) + \\left(\\frac{2}{\\sqrt{\\pi}}\\Theta r + \\frac{4}{\\sqrt{\\pi}}\\Theta^3 r^3\\right)e^{-\\Theta^2 r^2}\n    \\right) \\mathbf m\n    \\right]\n    \\end{split}\n\\end{align}\n\\]\n\n\nShow the code\nfrom scipy.special import erf, erfc\ndef Ht(r, m, t, sigma):\n    mu = np.pi * 4e-7\n    R = np.linalg.norm(r)\n    theta = np.sqrt(mu * sigma / 4 / t)\n    tr = theta * R\n    t2r2 = tr**2\n    t3r3 = tr**3\n    sqpi = np.sqrt(np.pi)\n    alpha = 1.0 / (4.0 * np.pi * R**3)\n    H = alpha * (\n        np.dot(m, r) / R**2  * r\n            *\n            (3 * erfc(tr) +\n                (6 * tr / sqpi + 4 * t3r3 / sqpi) * np.exp(-t2r2)) \n                -\n            (erfc(tr) +\n                (4 * t3r3 / sqpi + 2 * tr / sqpi) * np.exp(-t2r2)) \n        * m\n        )\n\n\n    return H\n\n\n\n\nShow the code\nHt(np.array([0, 100, 0]), np.array([0, 0, 1]), 1e-0, 0.01)\n\n\narray([ 0.00000000e+00,  0.00000000e+00, -7.95774926e-08])\n\n\nHowever, the time derivative of the magnetic field is important, which is why we differentiate w.r.t. time. Using the chain rule, we obtain\n\\[\n    \\partial_t \\mathbf h(\\mathbf r, t) = \\frac{\\Theta^3}{\\sqrt{\\pi}^3 t} \\left[\n    \\Theta^2 r^2\n    \\frac{\\mathbf m \\cdot \\mathbf r}{r^2}\n    \\mathbf r -\n    (\\Theta^2 r ^2 - 1)\n    \\mathbf m\n    \\right] e^{-\\Theta^2 r^2}.\n\\]",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Fields in the time domain</span>"
    ]
  },
  {
    "objectID": "timedomain_fullspace.html#numerical-example",
    "href": "timedomain_fullspace.html#numerical-example",
    "title": "8  Fields in the time domain",
    "section": "8.5 Numerical example",
    "text": "8.5 Numerical example\n\n\nShow the code\ndef dHdt(r, m, t, sigma):\n    mu = 4e-7 * np.pi\n    R = np.linalg.norm(r)\n    \n    theta = np.sqrt(mu * sigma / 4.0 / t)\n    tr = theta * R\n    t2r2 = tr**2\n    sqpi = np.sqrt(np.pi)\n    \n    return theta**3 / sqpi**3 / t * np.exp(-t2r2) * (\n            t2r2 * np.dot(m, r) * r / R**2 +\n            (1 - t2r2) * m\n        )\n\n\nWe now simulate the step function and impulse response of the electrically conductive full space.\nWe choose \\(\\mathbf r = [100, 0, 0]^\\top\\) as the observation point. The conductivity is 0.01 S/m. The dipole moment is \\(\\mathbf m = [0 ,0 , 1]^\\top\\).\nWe simulate the fields for logarithmically equidistant times in the interval \\(10^{-7} \\le t \\le 1\\) s.\nThe simulated quantities are \\(e_y(t)\\), \\(h_z(t)\\) and \\(\\partial_t h_z(t)\\).\n\n\nShow the code\nm = np.array([0, 0, 1])\nr = np.array([100.0, 0, 0])\nsigma = 0.01\n\nnt = 71\ntt = np.logspace(-7, 0, nt, endpoint=True)\ney = np.array([Et(r, m, v, sigma)[1] for v in tt])\nhz = np.array([Ht(r, m, v, sigma)[2] for v in tt])\ndhzdt = np.array([dHdt(r, m, v, sigma)[2] for v in tt])\n\n\nThe electric field exhibits an asymptotic behaviour of \\(e \\sim t^{-5/2}\\) as \\(t \\to \\infty\\)\n\n\nShow the code\nimport matplotlib.pyplot as plt\n\ntr = lambda t: np.sqrt(np.pi * 4e-7 * sigma / 4 / t) * np.linalg.norm(r)\n\nTR = np.array([tr(t) for t in tt])\n\niind = np.argwhere(TR &gt; 1)\n\nfig, ax = plt.subplots(1, 1, figsize=(6,4))\nax.loglog(tt, np.abs(ey), linestyle='--')\nax.loglog(tt, [2 * np.abs(ey[-1]) * t**(-2.5) for t in tt], label=r'asymptotic $\\sim t^{-5/2}$')\ntstar = tt[iind][-1][0]\nax.axvspan(tt[0], tstar, facecolor='red', alpha=0.1)\nax.axvspan(tstar, tt[-1], facecolor='green', alpha=0.1)\nax.set_xlabel(\"t in s\")\nax.set_ylabel(r'$e_y(t)$ in V/m')\nax.set_ylim((1e-18, 1e-5))\nax.legend()\nax.set_title(r'$e_y(t)$, r = 100 m')\nax.grid(True)\n\n\n\n\n\n\n\n\nFigure 8.1: Electric field component \\(e_y\\) due to a step-on vertical magnetic dipole in fullspace. The red and green shading indicates the regime where \\(\\Theta r &gt; 1\\) and \\(\\Theta r &lt; 1\\), resp.\n\n\n\n\n\nThe magnetic field approaches a stationary value as \\(t \\to \\infty\\).\nObviously, \\[\nh(r, t) = -\\frac{1}{4 \\pi r^3} \\text{ for } t \\to \\infty.\n\\]\nThe numerical evaluations are identical up to rounding errors.\n\n\nShow the code\nprint('h_z(r,t) = ' + str(-1.0 / (4 * np.pi * np.linalg.norm(r)**3)))\nprint('hz[-1]   = ' + str(hz[-1]))\n\n\nh_z(r,t) = -7.957747154594767e-08\nhz[-1]   = -7.957749262700399e-08\n\n\n\n\nShow the code\nfig, ax = plt.subplots(1, 1, figsize=(6,4))\nax.loglog(tt, np.abs(hz), linestyle='--')\n\nax.axvspan(tt[0], tstar, facecolor='red', alpha=0.1)\nax.axvspan(tstar, tt[-1], facecolor='green', alpha=0.1)\nax.set_xlabel(\"t in s\")\nax.set_ylabel(r'$h_z(t)$ in A/m')\nax.set_ylim((1e-14, 1e-6))\n# ax.legend()\nax.set_title(r'$h_z(t)$')\nax.grid(True)\n\n\n\n\n\n\n\n\nFigure 8.2: Magnetic field component \\(h_z\\) due to a current step-on vertical magnetic dipole in fullspace. The red and green shading indicates the regime where \\(\\Theta r &gt; 1\\) and \\(\\Theta r &lt; 1\\), resp.\n\n\n\n\n\n\n\nShow the code\nfneg = np.argwhere(dhzdt &lt; 0.0)\nfpos = np.argwhere(dhzdt &gt; 0.0)\nfig, ax = plt.subplots(1, 1, figsize=(6,4))\nax.loglog(tt[fneg], np.abs(dhzdt[fneg]), color='C0', linestyle='--')\nax.loglog(tt[fpos], np.abs(dhzdt[fpos]), color='C0', linestyle='-')\nax.loglog(tt, [2 * np.abs(dhzdt[-1]) * t**(-2.5) for t in tt], color='C1', label=r'asymptotic $\\sim t^{-5/2}$')\n\nax.axvspan(tt[0], tstar, facecolor='red', alpha=0.1)\nax.axvspan(tstar, tt[-1], facecolor='green', alpha=0.1)\nax.set_xlabel(\"t in s\")\nax.set_ylabel(r'$\\partial_t h_z(t)$ in A/(ms)')\nax.set_ylim((1e-14, 1e-2))\nax.legend()\nax.set_title(r'$\\partial_t h_z(t)$')\nax.grid(True)\n\n\n\n\n\n\n\n\nFigure 8.3: Time derivative of the magnetic field component \\(h_z\\) due to a current step-on vertical magnetic dipole in fullspace. The red and green shading indicates the regime where \\(\\Theta r &gt; 1\\) and \\(\\Theta r &lt; 1\\), resp.",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Fields in the time domain</span>"
    ]
  },
  {
    "objectID": "timedomain_fullspace.html#late-time-asymptotic-behaviour-and-apparent-resistivity",
    "href": "timedomain_fullspace.html#late-time-asymptotic-behaviour-and-apparent-resistivity",
    "title": "8  Fields in the time domain",
    "section": "8.6 Late-time asymptotic behaviour and apparent resistivity",
    "text": "8.6 Late-time asymptotic behaviour and apparent resistivity\nThe resistivity of the full space can be reconstructed from the late-time asymptotics of \\(\\partial_t \\mathbf h(t)\\).\nFor \\(t \\to \\infty\\) the late-time asymptotics is\n\\[\n\\partial_t \\mathbf h^L(t) = \\frac{\\Theta^3(t)}{\\sqrt{\\pi}^3 t} = \\frac{1}{8} \\left(\\frac{\\mu\\sigma}{\\pi}\\right)^{3/2} t^{-5/2} \\mathbf m.\n\\]\nWe do not recognize any dependence on the distance \\(r\\).\nFrom the asymptotic behaviour of the late-time, we can reconstruct the conductivity of the full space directly from the measured variable.\nFor example, the following applies for \\(\\mathbf m = (0, 0, m)^\\top\\):\n\\[\n\\sigma = \\frac{4 \\pi}{\\mu} \\left( \\frac{1}{m} \\partial_t h_z(t) \\right)^{2/3} t^{5/3}\n\\]\n\n\nShow the code\nmu0 = np.pi * 4e-7\nsig_a = np.array([4 * np.pi / mu0 * np.abs(u)**(2/3) * v**(5/3) for u, v in zip(dhzdt, tt)])\nfig, ax = plt.subplots(1, 1, figsize=(6,4))\n\nax.loglog(tt, sig_a)\nax.axvspan(tt[0], tstar, facecolor='red', alpha=0.1)\nax.axvspan(tstar, tt[-1], facecolor='green', alpha=0.1)\nax.hlines(sigma, tt[0], tt[-1], linestyle='--', color='C1', label='True conductivity')\nax.legend()\nax.set_ylim((1e-5, 1e-1))\nax.set_xlabel('t in s')\nax.set_ylabel(r'$\\sigma_a~in~S/m$')\nax.grid(True)\n\n\n\n\n\n\n\n\nFigure 8.4: Apparent conductivity evaluated from the late-time asymptotics. The red and green shading indicates the regime where \\(\\Theta r &gt; 1\\) and \\(\\Theta r &lt; 1\\), resp.",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Fields in the time domain</span>"
    ]
  },
  {
    "objectID": "halfspace.html",
    "href": "halfspace.html",
    "title": "9  Dipole sources above a uniform halfspace",
    "section": "",
    "text": "9.1 Uniform halfspace\nFirst, we recall that we have derived frequency domain full-space solutions of the Helmholtz equation for the fields \\(\\mathbf E\\) and \\(\\mathbf H\\) which base on the definition of a vector potential \\(\\mathbf F\\).\nNow, we introduce the plane \\(z=0\\) where a jump (discontinuity) in the electrical conductivity from zero to some positive, constant and finite value occurs.\nWe set \\[\n\\sigma(z) =\n\\begin{cases}\n0 & z &lt; 0 \\\\\n\\sigma_1 &gt; 0 & z \\ge 0.\n\\end{cases}\n\\]\nLater, we associate the upper halfspace (where \\(z&lt;0\\)) with the electrically insulating Air, and the lower halfspace (where \\(z&gt;0\\)) with the electrically conducting Earth, which we refer to as the conductive halfspace.\nWe place the dipole at a height of \\(h&gt;0\\) above the Air-Earth interface. Hence, the \\(z\\)-coordinate of the dipole is \\(z=-h\\).\nDue to the symmetry of the problem we prefer a cylindrical coordinate system \\((r, z, \\varphi)\\). The axis of the dipole is aligned with the \\(z\\)-axis (hence the term vertical magnetic dipole, VMD).\nIt is known from the analysis of the fullspace solution that, in the case of a VMD, there is no dependency of the angular direction \\(\\varphi\\) around the \\(z\\)-axis.\nIn a cylindrical coordinate system, the fields of a \\(z\\)-axis aligned VMD only depend on \\(r\\) and \\(z\\).",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Dipole sources above a uniform halfspace</span>"
    ]
  },
  {
    "objectID": "halfspace.html#uniform-halfspace",
    "href": "halfspace.html#uniform-halfspace",
    "title": "9  Dipole sources above a uniform halfspace",
    "section": "",
    "text": "Note\n\n\n\nThe restriction to a vertical magnetic dipole was made intentionally in order to describe the principles of the mathematical approach. It does not restrict the generality.\n\n\n\n\n\n9.1.1 Source field\nThe dipole has a dipole moment of \\(\\mathbf m = (0, 0, m)^\\top\\) and is located at the point \\(\\mathbf r_0 = (0, 0, -h)^\\top\\).\nFor \\(h\\) being sufficiently large, the conducting halfspace has only negligible induction effects in the upper halfspace, therefore we could approximate the vector potential at a point \\(\\mathbf r\\) in the neighborhood of the dipole as \\[\nF_z^* = \\frac{i\\omega\\mu_0 m}{4 \\pi R},\n\\]\nwhere \\(R = |\\mathbf r - \\mathbf r_0| = \\sqrt{r^2 + (z + h)^2}\\) is the Euclidean distance between the dipole and the point of observation.\n\n\n9.1.2 Superposition of source field and induced field within the halfspace\nThe vector potential (and thus the electric and magnetic field) in \\(z&lt;0\\) is a superposition of two separate, but not independent contributions, i.e., \\[\nF^0_\\text{total}  = F^* + F^0 \\quad \\text{ in } z &lt; 0,\n\\]\nWithin the conducting halfspace \\(z&gt;0\\) the vector potential is referred to as \\(F^1\\).\n\n\n\n\n\n\nNote\n\n\n\nNote that we have still left out the consideration of the potential in the plane \\(z=0\\)!\n\n\nBoth \\(F^0\\) and \\(F^1\\) depend on the dipole position.\n\n\n9.1.3 Helmholtz equation\nFor any arbitrary dipole position \\(\\mathbf r_0 = (0, 0, -h)^\\top\\), \\(h&gt;0\\), we observe a unique distribution of fields in both halfspaces.\nWe formulate the problem of finding these fields as a system of two independent PDEs for the two halfspaces (excluding the common interface at \\(z=0\\)). Such a system can only be solved uniquely when certain conditions at \\(z=0\\) are enforced.\nIn other words: The freedom of choice of the solutions in both halfspaces must be restricted by the conditions of continuity at \\(z=0\\).\nWe formulate the following task:\nWe seek the vector potentials \\(F^0(r, z)\\) und \\(F^1(r, z)\\) as solution of the system \\[\n\\begin{align}\n\\laplacian F^0 + k_0^2 F^0 & = -i\\omega\\mu_0 m \\delta^3(\\mathbf r_0) & \\text{ for } z &lt; 0 \\\\\n\\laplacian F^1 + k_1^2 F^1 & = 0 & \\text{ for } z &gt; 0\n\\end{align}\n\\] with appropriate conditions in \\(z=0\\).\n\\(k_0^2\\) and \\(k_1^2\\) are the (squared) wave numbers, where \\(k_i^2 = -i\\omega\\mu_0\\sigma_i\\), \\(i=0,1\\). The first of the above equations (for \\(F^0\\)) is a Poisson equation, since \\(k_0^2 \\approx 0\\).\n\n\n9.1.4 Conditions of continuity\nWhen propagating through the interface \\(z=0\\), the tangential field components \\(E_\\varphi\\) and \\(H_r\\) are continuous.\nHowever, we are using the vector potential in our derivation. What is the appropriate condition for the vector potential in \\(z=0\\)?\nTherefore, in cylindrical coordinates, the fields in \\(z=0\\) must fulfill the equations \\[\n\\begin{align}\nE_\\varphi^0 & = E_\\varphi^1 \\\\\nH_r^0 & = H_r^1,\n\\end{align}\n\\] which translate into the appropriate conditions for the vector potentials in \\(z=0\\): \\[\n\\begin{align}\n\\pdv{F^0}{r} & = \\pdv{F^1}{r} \\\\\n\\pdv{F^0}{r}{z} & = \\pdv{F^1}{r}{z} .\n\\end{align}\n\\] These conditions apply along the complete plane \\(z=0\\). \\(F^0\\) and \\(F^1\\) must vanish for \\(r \\to \\infty\\). Therefore the constants of integration must be zero. After integration we obtain \\[\n\\begin{align}\nF^0 & = F^1 \\\\\n\\pdv{F^0}{z} & = \\pdv{F^1}{z}\n\\end{align}\n\\] as conditions of continuity for the vector potential in \\(z=0\\).\n\n\n9.1.5 Separation of variables\nAt first, we seek a solution of the homogeneous PDE in \\(z&gt;0\\) (medium \\(1\\), i.e., within the conducting halfspace). In cylindrical coordinates, the Helmholtz equation can be written as \\[\n\\begin{equation}\n\\pdv[2]{F}{r}\n+ \\frac{1}{r}  \\pdv{F}{r} + \\pdv[2]{F}{z} + k^2 F = 0.\n\\end{equation}\n\\]\nA common solution method is the Separation of variables.\nWe make the following ansatz\n\\[\n\\begin{equation}\nF(r,z) = U(r) V(z)\n\\end{equation}\n\\] and replace \\(F\\) by \\(U V\\) in the PDE.\nAfter multiplication with \\(\\dfrac{1}{UV}\\) we rewrite \\[\n\\begin{equation}\n\\underbrace{\n\\frac{1}{U}  \\dv[2]{U}{r}+\n\\frac{1}{Ur} \\dv{U}{r} }_{=-\\lambda^2} +\n\\underbrace{\nk^2 +\n\\frac{1}{V} \\dv[2]{V}{z}}_{=+\\lambda^2} = 0,\n\\end{equation}\n\\] from which we obtain the two independent ODEs \\[\n\\begin{equation}\n\\begin{split}\n\\dv[2]{U}{r} +\n\\frac{1}{r} \\dv{U}{r} + \\lambda^2 U & = 0 \\\\\n\\dv[2]{V}{z} - (\\lambda^2 - k^2) V & = 0,\n\\end{split}\n\\end{equation}\n\\] which we refer to as Bessel and d’Alembert equations, resp.\nTheir solutions are \\[\n\\begin{equation}\nU(r, \\lambda) = \\hat\\alpha(\\lambda) J_0(\\lambda r) +\n\\hat\\beta(\\lambda) Y_0(\\lambda r)\n\\end{equation}\n\\] and \\[\n\\begin{equation}\nV(z, \\lambda) = \\hat\\gamma^-(\\lambda) e^{-\\sqrt{\\lambda^2 - k^2}z}\n+ \\hat\\gamma^+(\\lambda) e^{+\\sqrt{\\lambda^2 - k^2}z}.\n\\end{equation}\n\\]\nThe general solution can be obtained by linear combination, i.e., \\[\nF(r, z) = \\int\\limits_0^\\infty U(r, \\lambda) V(z, \\lambda) \\dd\\lambda\n\\]\n\n\n9.1.6 Potential in \\(z&gt;0\\) (conducting halfspace)\nWith \\(\\lambda_1 = \\sqrt{\\lambda^2 - k_1^2}\\) and \\(\\gamma^\\pm = \\hat\\alpha \\hat \\gamma^\\pm\\) the superposition of solutions for all values of \\(\\lambda\\) yields the solution for \\(z&gt;0\\) \\[\n\\begin{equation}\nF^1(r,z) = \\frac{i\\omega\\mu m}{4 \\pi} \\int_0^\\infty\n\\left[\n\\gamma^-(\\lambda) e^{-\\lambda_1 z} +\n\\gamma^+(\\lambda) e^{+\\lambda_1 z}\n\\right] J_0(\\lambda r)\\, \\dd\\lambda.\n\\end{equation}\n\\] It is required that \\(F^1 \\to 0\\) for \\(z \\to +\\infty\\). This can be achieved by setting \\(\\gamma^+ = 0\\).\nWe obtain the important intermediate result \\[\n\\begin{equation}\nF^1(r,z) = \\frac{i\\omega\\mu m}{4 \\pi} \\int_0^\\infty\n\\gamma^-(\\lambda) e^{-\\lambda_1 z}\nJ_0(\\lambda r)\\, \\dd\\lambda.\n\\end{equation}\n\\] Now, it remains to determine the unknown coefficient function \\(\\gamma^-(\\lambda)\\).\n\n\n9.1.7 Potential in \\(z&lt;0\\) (insulating halfspace)\nAs has been indicated above, the total potential in the insulating halfspace can be written as the superposition of the two contributions \\(F^0\\) and \\(F^*\\).\nIn \\(z&lt;0\\), we add the potential observed in the unbounded non-conducting fullspace, \\(F^*\\), and the potential of the induced currents in \\(z&gt;0\\): \\[\nF^0(r,z) = \\frac{i\\omega\\mu m}{4 \\pi}\n\\left[\n\\frac{1}{R} + \\int_0^\\infty \\gamma^+(\\lambda) e^{+\\sqrt{\\lambda^2 - k_0^2}z}J_0(\\lambda r)\\,\\dd\\lambda\n\\right]\n\\] Again, it is required that \\(F^0 \\to 0\\) for \\(z \\to -\\infty\\) which is met by setting \\(\\gamma^-(\\lambda) = 0\\) in \\(z&lt;0\\).\nTo make both terms in brackets compatible, we use the Weber integral \\[\n\\frac{1}{R} = \\int_0^\\infty e^{-\\lambda |z+h|} J_0(\\lambda r)\\, \\dd\\lambda.\n\\tag{9.1}\\] Assuming \\(k_0^2 = 0\\), we write \\[\nF^0(r, z) = \\frac{i\\omega\\mu m}{4 \\pi} \\int_0^\\infty\n\\left[\ne^{-\\lambda|z+h|} + \\gamma^+(\\lambda)\ne^{+\\lambda z} \\right] J_0(\\lambda r)\\,\\dd\\lambda\n\\]\n\n\n9.1.8 Exploiting the continuity conditions in \\(z=0\\)\nAt this point, we need the conditions of continuity to match both solutions in \\(z=0\\).\nIt is required, that the potential and its vertical (i.e., normal with respect to the plane \\(z=0\\)) derivative are both continuous globally, i.e., in the complete plane \\(z=0\\) (for all \\(r\\)). The latter condition must also be fulfilled for all values of \\(\\lambda\\).\nWe have now two conditions and are able to derive the two coefficient functions \\(\\gamma^-\\) and \\(\\gamma^+\\).\nWe can restrict the determination of the coefficient functions to those terms that only depend on \\(z\\), i.e., we drop the Bessel function and the integral.\nIt remains to solve the equations \\[\nV^0(z) = e^{-\\lambda|z+h|} + \\gamma^+(\\lambda)\ne^{+\\lambda z}\n\\] and \\[\nV^1(z) = \\gamma^-(\\lambda) e^{-\\lambda_1 z}.\n\\] for \\(\\gamma^-(\\lambda)\\) and \\(\\gamma^+(\\lambda)\\).\n\n\n9.1.9 Implementation\nFor the determination of the coefficient functions we use SymPy.\n\nlam1, gamma_plus, gamma_minus, alpha, beta = symbols(\"lambda_1, gamma^+, gamma^-, alpha, beta\")\nh = symbols(\"h\", real=True, positive=True)\nz = symbols(\"z\", real=True)\nlam = symbols(\"lambda\", real=True, nonnegative=True);\n\n\n9.1.9.1 Determination of the coefficient functions\nHere we employ the conditions of continuity to match the solutions obtained separately for the two adjacent regions.\nRecall that with the separation of variables ansatz introduced above, the function \\(V(z, \\lambda)\\) (beside \\(U(r, \\lambda)\\)) was one of the two individual functions that composed \\(F(r,z)\\).\nThe conditions of continuity in \\(z=0\\) have to be enforced for any value of \\(r\\).\nHence, only \\(V(z, \\lambda)\\) is affected.\nWe define two symbolic functions for both \\(V^0(z, \\lambda)\\) and \\(V^1(z, \\lambda)\\). To ensure that differential operators can be applied, we let these functions depend explicitly on \\(z\\):\n\nV0 = lambda z: exp(-lam * Abs(z + h)) + gamma_plus * exp(lam * z)\nV1 = lambda z: gamma_minus * exp(-lam1 * z)\n\n\nV0(z)\n\n\\(\\displaystyle \\gamma^{+} e^{\\lambda z} + e^{- \\lambda \\left|{h + z}\\right|}\\)\n\n\n\nV1(z)\n\n\\(\\displaystyle \\gamma^{-} e^{- \\lambda_{1} z}\\)\n\n\nHere we define two symbolic functions that evaluate the derivative of the potentials \\(V\\) w.r.t. \\(z\\):\n\ndV0 = lambda z: diff(V0(z), z)\ndV1 = lambda z: diff(V1(z), z)\n\nNext, we substitute \\(z\\) with \\(0\\) in the results of the differentiation:\n\ndV0(z).subs(z, 0)\n\n\\(\\displaystyle \\gamma^{+} \\lambda - \\lambda e^{- h \\lambda}\\)\n\n\n\ndV1(z).subs(z, 0.0)\n\n\\(\\displaystyle - \\gamma^{-} \\lambda_{1}\\)\n\n\n\nex1 = V0(z) - V1(z)\nex2 = dV0(z) - dV1(z)\n\nsols = solve([ex1.subs(z, 0), ex2.subs(z, 0)], [gamma_plus, gamma_minus])\n\ngm = sols[gamma_minus]\ngp = sols[gamma_plus]\n\n\ngm.simplify()\n\n\\(\\displaystyle \\frac{2 \\lambda e^{- h \\lambda}}{\\lambda + \\lambda_{1}}\\)\n\n\n\ngp.simplify()\n\n\\(\\displaystyle \\frac{\\left(\\lambda - \\lambda_{1}\\right) e^{- h \\lambda}}{\\lambda + \\lambda_{1}}\\)\n\n\n\nV_0 = lambda z: V0(z).subs(gamma_plus, gp)\nV_0(z)\n\n\\(\\displaystyle \\left(\\frac{\\lambda}{\\lambda e^{h \\lambda} + \\lambda_{1} e^{h \\lambda}} - \\frac{\\lambda_{1}}{\\lambda e^{h \\lambda} + \\lambda_{1} e^{h \\lambda}}\\right) e^{\\lambda z} + e^{- \\lambda \\left|{h + z}\\right|}\\)\n\n\n\nV_1 = lambda z: V1(z).subs(gamma_minus, gm).factor().simplify()\nV_1(z)\n\n\\(\\displaystyle \\frac{2 \\lambda e^{- h \\lambda - \\lambda_{1} z}}{\\lambda + \\lambda_{1}}\\)\n\n\nWe summarize:\n\n\n\n\n\n\nSummary\n\n\n\nThe vector potential \\(F^0\\) in \\(z\\le0\\) is \\[\nF^0(r, z) = \\frac{i \\omega \\mu m}{4 \\pi} \\int_0^\\infty\n\\left(\ne^{-\\lambda |z+h|} + \\frac{\\lambda - \\lambda_1}{\\lambda + \\lambda_1} e^{-\\lambda h} e^{\\lambda z}\n\\right) J_0(\\lambda r)\\, \\dd\\lambda,\n\\] and \\(F^1\\) in \\(z\\ge 0\\) is \\[\nF^1(r, z) = \\frac{i \\omega \\mu m}{4 \\pi} \\int_0^\\infty\n\\frac{2 \\lambda}{\\lambda + \\lambda_1} e^{-\\lambda h} e^{-\\lambda_1 z} J_0(\\lambda r)\\, \\dd\\lambda.\n\\]\n\n\n\n\n\n9.1.10 Bessel functions\nBessel functions typically occur as fundamental solutions of PDEs in cylindrical coordinate systems.\nFor the calculation of the electric and magnetic fields, we need to apply derivatives w.r.t. the coordinates \\(r\\) and \\(z\\).\n\nthe operator \\(\\pdv{}{r}\\) only affects the Bessel function \\(J_0(\\lambda r)\\)\nthe operator \\(\\pdv{}{z}\\) only affects the exponential function, i.e., \\(e^{-\\lambda_1 z}\\)\n\n\n\n\n\n\n\nRecall\n\n\n\nWe make use of the ansatz \\[\n\\begin{align}\n\\vb{E} & = -\\curl \\vb{F} \\\\\n\\vb{H} & = (i \\omega \\mu_0)^{-1} (\\grad \\divergence \\vb{F} + k^2 \\vb{F})\n\\end{align}\n\\] with differential operators appropriate for cylindrical coordinates.\n\n\nIn particular, we need to evaluate the following derivatives: \\[\n\\begin{align}\nE_\\varphi & = \\pdv{F}{r} \\\\\nH_r & = \\beta \\, \\pdv{F}{r}{z}  \\\\\nH_z & = -\\beta \\frac{1}{r}\\pdv{}{r}(r \\pdv{F}{r})\n\\end{align}\n\\] with \\(\\beta = (i\\omega \\mu_0)^{-1}\\).\n\n\n\n\n\n\nNote\n\n\n\nNote that in cylindrical coordinates the radial part of the Laplace operator reads \\[\n\\frac{ 1 }{ r} \\pdv{}{r}(r \\pdv{F}{r})\n\\] For a homogeneous Helmholtz equation it turns out that \\[\n\\pdv[2]{F}{z} + k^2 F = -\\frac{ 1 }{ r} \\pdv{}{r}(r \\pdv{F}{r}).\n\\]\n\n\nWe will use sympy again to provide the Bessel functions of zeroth and first order as symbolic expressions.\nFirst, let’s inspect the graphs of of \\(J_0(x)\\) and \\(J_1(x)\\). It appears from visual inspection, that \\(J_1(x)\\) is related to the negative derivative of \\(J_0(x)\\).\n\nfrom sympy import besselj\nfrom spb import *\nr = symbols(\"r\", positive=True, real=True)\nJ0 = lambda r: besselj(0, r)\nJ1 = lambda r: besselj(1, r)\n\np = graphics(\n    line(J0(z), (z, -20, 20), title='J0(x)'),\n    line(J1(z), (z, -20, 20), title='J1(x)'),\n    size=(5,3), ylabel=r'$J_\\nu(z)$', use_latex=True\n)\n\n\n\n\n\n\n\n\nAre we able to handle the derivatives of the Bessel function using sympy?\nWe note that \\[\n\\dv{J_0(\\lambda r)}{r} = -\\lambda J_1(\\lambda r).\n\\] sympy provides\n\ndJ0dr = lambda v: diff(J0(v), r)\ndJ0dr(lam * r)\n\n\\(\\displaystyle - \\lambda J_{1}\\left(\\lambda r\\right)\\)\n\n\nas expected.\nOn the other hand, we know from Abramowitz & Stegun that \\[\n\\dv{J_1(\\lambda r)}{r} = \\lambda J_0(\\lambda r) - \\frac{ J_1(\\lambda r) }{ r },\n\\] while sympy gets\n\ndiff(J1(lam * r), r)\n\n\\(\\displaystyle \\lambda \\left(\\frac{J_{0}\\left(\\lambda r\\right)}{2} - \\frac{J_{2}\\left(\\lambda r\\right)}{2}\\right)\\)\n\n\nWe can however correct the output by use of the simplify method:\n\ndJ1dr = lambda v: diff(J1(v), r).simplify()\ndJ1dr(lam * r)\n\n\\(\\displaystyle \\lambda J_{0}\\left(\\lambda r\\right) - \\frac{J_{1}\\left(\\lambda r\\right)}{r}\\)\n\n\n\n\n9.1.11 Expressions for the fields in \\(z \\ge 0\\)\nIn the following we derive the proper expressions for the integrands necessary for the evaluation of the fields.\nNote that the actual integration, i.e., carrying out \\(\\int_0^\\infty \\dots \\dd\\lambda\\), remains untouched.\nTo compute the integrands, we introduce the symbolic variables for \\(\\omega\\), \\(\\mu_0\\), and \\(m\\).\nIntegrand for \\(E_\\varphi\\)\nWe evaluate the derivative according to \\[\nE_\\varphi = \\pdv{F}{r}\n\\] and obtain the integrand for later evaluation of \\(E_\\varphi\\) (for which we introduce the abbreviation Ephi_ in sympy)\n\nomega, mu0, m = symbols(\"omega mu_0 m\")\nEphi_ = symbols(\"E_phi\")\nEphi_ = alpha * V_1(z) * dJ0dr(lam * r)\nprint('Ephi_ = ')\nEphi_.subs(alpha, I * omega * mu0 * m / ( 4 * pi))\n\nEphi_ = \n\n\n\\(\\displaystyle - \\frac{i \\lambda^{2} m \\mu_{0} \\omega e^{- h \\lambda - \\lambda_{1} z} J_{1}\\left(\\lambda r\\right)}{2 \\pi \\left(\\lambda + \\lambda_{1}\\right)}\\)\n\n\nwhich we rearrange as \\[\n-\\frac{i \\omega \\mu_0 m}{2 \\pi} \\frac{\\lambda^2 }{\\lambda + \\lambda_1} e^{-\\lambda h} e^{-\\lambda_1 z} J_1(\\lambda r).\n\\]\nLater we integrate this expression along the positive \\(\\lambda\\)-axis \\(0 \\le \\lambda &lt; +\\infty\\).\nIntegrand for \\(H_r\\)\nWe need to calculate the derivative similar to \\[\nH_r = \\beta \\pdv{E_\\varphi}{z}\n\\]\nWe obtain\n\nHr_ = diff(Ephi_, z) * beta\nHr_.subs(alpha, I * omega * mu0 * m / ( 4 * pi)).subs(beta, 1 / (I * omega * mu0)).simplify()\n\n\\(\\displaystyle \\frac{\\lambda^{2} \\lambda_{1} m e^{- h \\lambda - \\lambda_{1} z} J_{1}\\left(\\lambda r\\right)}{2 \\pi \\left(\\lambda + \\lambda_{1}\\right)}\\)\n\n\nIntegrand for \\(H_z\\)\nWe calculate the following expression to obtain the integrand for the evaluation of \\(H_z\\) which will be carried out later: \\[\nH_z  = -\\beta \\frac{1}{r}\\pdv{}{r}(r \\pdv{F}{r}).\n\\]\n\nHz_ = (-beta * diff(Ephi_ * r, r).simplify() / r).subs(alpha, I * omega * mu0 * m / ( 4 * pi)).subs(beta, 1 / (I * omega * mu0)).simplify()\nHz_\n\n\\(\\displaystyle \\frac{\\lambda^{3} m e^{- h \\lambda - \\lambda_{1} z} J_{0}\\left(\\lambda r\\right)}{2 \\pi \\left(\\lambda + \\lambda_{1}\\right)}\\)\n\n\nWith the calculations completed above, we have provided all integrands for the evaluation of the fields in \\(z \\ge 0\\).\n\n\n9.1.12 Expression for the fields in \\(z \\le 0\\)\nWe exclude the source term from the integral and write with the help of 10.3 \\[F^0(r,z) = \\frac{i\\omega\\mu m}{4 \\pi}\n\\left[\n\\frac{1}{R} + \\int_0^\\infty\n\\frac{\\lambda - \\lambda_1}{\\lambda + \\lambda_1} e^{-\\lambda h}\ne^{+\\lambda z}J_0(\\lambda r)\\,\\dd\\lambda\n\\right]\n\\] Both \\(1/R\\) and the integral are affected by the differentiation w.r.t. \\(r\\) and \\(z\\).\nRequired are the derivatives \\[\n\\pdv{}{r} \\frac{1}{R} = -\\frac{r}{R^3}\n\\] and \\[\n\\pdv{}{r}{z} \\frac{1}{R} = \\frac{3 r (z+h)}{R^5}.\n\\]\n\nR = sqrt(r**2 + (z + h)**2)\ndRdr = alpha * diff(1/R, r).subs(sqrt(r**2 + (z+h)**2), R).simplify()\ndRdrdz = diff(dRdr, z).subs(sqrt(r**2 + (z+h)**2), R).simplify()\n\nIntegrand for \\(E_\\varphi\\)\n\nV_0_part = lambda z: V_0(z) - exp(-lam * abs(z+h))\n\nEphi_0_ = alpha * diff(V_0_part(z) * J0(lam * r), r) + dRdr\nEphi_0_\n\n\\(\\displaystyle - \\alpha \\lambda \\left(\\frac{\\lambda}{\\lambda e^{h \\lambda} + \\lambda_{1} e^{h \\lambda}} - \\frac{\\lambda_{1}}{\\lambda e^{h \\lambda} + \\lambda_{1} e^{h \\lambda}}\\right) e^{\\lambda z} J_{1}\\left(\\lambda r\\right) - \\frac{\\alpha r}{\\left(r^{2} + \\left(h + z\\right)^{2}\\right)^{\\frac{3}{2}}}\\)\n\n\nTBC.\nIntegrand for \\(H_r\\)\n\nHr_0_ = beta * diff(Ephi_0_, z) + beta * dRdrdz\nHr_0_.simplify().simplify()\n\n\\(\\displaystyle - \\frac{\\alpha \\beta \\left(\\lambda^{2} \\left(\\lambda - \\lambda_{1}\\right) \\left(r^{2} + \\left(h + z\\right)^{2}\\right)^{\\frac{5}{2}} e^{\\lambda z} J_{1}\\left(\\lambda r\\right) - 6 r \\left(h + z\\right) \\left(\\lambda + \\lambda_{1}\\right) e^{h \\lambda}\\right) e^{- h \\lambda}}{\\left(\\lambda + \\lambda_{1}\\right) \\left(r^{2} + \\left(h + z\\right)^{2}\\right)^{\\frac{5}{2}}}\\)\n\n\nTBC.\nIntegrand for \\(H_z\\)\nWithin the Air halfspace we use the following simpler relations to obtain \\(H_z\\).\n\\[\nH^0_z = \\beta \\pdv[2]{}{z}  F^0\n\\]\nTBC.",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Dipole sources above a uniform halfspace</span>"
    ]
  },
  {
    "objectID": "halfspace.html#summary",
    "href": "halfspace.html#summary",
    "title": "9  Dipole sources above a uniform halfspace",
    "section": "9.2 Summary",
    "text": "9.2 Summary\nWe have obtained expressions for the fields that can be observed either in the Air or in the conducting halfspace.\nThe results are summarized in the following blocks.\n\n\n\n\n\n\nAir\n\n\n\n\\[\n    E_\\varphi = -\\frac{i \\omega \\mu_0 m}{4 \\pi}\n    \\left[\n    \\frac{r}{R^3} +\n    \\int_0^\\infty \\frac{\\lambda - \\lambda_1}{\\lambda + \\lambda_1}\\lambda\n    e^{-\\lambda h}e^{\\lambda z}J_1(\\lambda r)\\, \\dd\\lambda\n    \\right]\n\\]\n\\[\n    H_r = \\frac{m}{4 \\pi}\n    \\left[\n    \\frac{3r(z+h)}{R^5} -\n    \\int_0^\\infty \\frac{\\lambda - \\lambda_1}{\\lambda + \\lambda_1}\\lambda^2\n    e^{-\\lambda h}e^{\\lambda z}J_1(\\lambda r)\\, \\dd\\lambda\n    \\right]\n\\]\n\\[\n    H_z = \\frac{m}{4 \\pi}\n    \\left[\n    \\frac{3(z+h)^2 - R^2}{R^5} +\n    \\int_0^\\infty \\frac{\\lambda - \\lambda_1}{\\lambda + \\lambda_1}\\lambda^2\n    e^{-\\lambda h}e^{\\lambda z}J_0(\\lambda r)\\, \\dd\\lambda\n    \\right]\n  \\]\n\n\n\n\n\n\n\n\nEarth\n\n\n\n\\[\n    E_\\varphi = -\\frac{i \\omega \\mu_0 m}{2 \\pi}\n    \\int_0^\\infty \\frac{\\lambda^2}{\\lambda + \\lambda_1}\n    e^{-\\lambda h}e^{-\\lambda_1 z}J_1(\\lambda r)\\, \\dd\\lambda\n\\]\n\\[\n    H_r = \\frac{m}{2 \\pi}\n    \\int_0^\\infty \\frac{\\lambda^2\\lambda_1}{\\lambda + \\lambda_1}\n    e^{-\\lambda h}e^{-\\lambda_1 z}J_1(\\lambda r)\\, \\dd\\lambda\n\\]\n\\[\n    H_z = \\frac{m}{2 \\pi}\n    \\int_0^\\infty \\frac{\\lambda^3}{\\lambda + \\lambda_1}\n    e^{-\\lambda h}e^{-\\lambda_1 z}J_0(\\lambda r)\\, \\dd\\lambda\n\\]\n\n\n\n\n\n\n\n\nOutlook\n\n\n\nIn the multi-layered case, we will simply replace \\(\\lambda_1\\) by a function defined by the conductivities, thicknesses, frequencies, and \\(\\lambda\\).\nWe will call this function B₁ and refer to it as the admittance of the layered halfspace.",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Dipole sources above a uniform halfspace</span>"
    ]
  },
  {
    "objectID": "explicit.html",
    "href": "explicit.html",
    "title": "10  Explicit expressions for the fields in HCP configuration",
    "section": "",
    "text": "10.1 Motivation\nOften, the knowledge of the electric and/or magnetic field at the surface of a homogeneous Earth is sufficient. However, the calculation of the Hankel integral is – even in the homogeneous case – numerically not trivial.\nLater we will learn how to evaluate them properly.\nFor now, let’s simplify the configuration by setting \\(h=0\\) and \\(z=0\\). We refer to this configuration as the horizontal coplanar configuration (which is generally not restricted to the plane \\(z=0\\)).\nWith the help of this simplification it is possible to rewrite the integrals. The results are closed form expressions.\nIt is possible to estimate what field amplitudes can be expected at a given offset-frequency regime.",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Explicit expressions for the fields in HCP configuration</span>"
    ]
  },
  {
    "objectID": "explicit.html#recall-of-vmd-expressions",
    "href": "explicit.html#recall-of-vmd-expressions",
    "title": "10  Explicit expressions for the fields in HCP configuration",
    "section": "10.2 Recall of VMD expressions",
    "text": "10.2 Recall of VMD expressions\nIn a conducting medium with \\(\\lambda_1^2 = \\lambda^2 - k_1^2\\), \\(h=0\\), and \\(z=0\\), there holds\n\n\n\n\n\n\nExpressions for coplanar configuration at z=0, h=0:\n\n\n\n\\[\n    \\begin{equation}\n        E_\\varphi = -\\frac{i \\omega \\mu_0 m}{2 \\pi} \\int_0^\\infty \\frac{\\lambda^2}{\\lambda + \\lambda_1}\n        J_1(\\lambda r) \\, \\dd\\lambda\n    \\end{equation}\n\\]\n\\[\n    \\begin{equation}\n        H_r = \\frac{m}{2 \\pi} \\int_0^\\infty \\frac{\\lambda_1 \\lambda^2}{\\lambda + \\lambda_1}\n        J_1(\\lambda r) \\, \\dd\\lambda\n    \\end{equation}\n\\]\n\\[\n    \\begin{equation}\n        H_z = \\frac{m}{2 \\pi} \\int_0^\\infty \\frac{\\lambda^3}{\\lambda + \\lambda_1}\n        J_0(\\lambda r) \\, \\dd\\lambda\n    \\end{equation}\n\\]",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Explicit expressions for the fields in HCP configuration</span>"
    ]
  },
  {
    "objectID": "explicit.html#electric-field",
    "href": "explicit.html#electric-field",
    "title": "10  Explicit expressions for the fields in HCP configuration",
    "section": "10.3 Electric field",
    "text": "10.3 Electric field\nIn the following we try to rewrite the integral. Recalling the properties of the Bessel function we first write \\[\n\\begin{equation}\n    E_\\varphi = \\frac{i \\omega \\mu_0 m}{2 \\pi}\n    \\partial_r\n    \\int_0^\\infty \\frac{\\lambda}{\\lambda + \\lambda_1}\n    J_0(\\lambda r) \\, \\dd\\lambda\n\\end{equation}\n\\] Second, we expand the integrand with \\(\\lambda - \\lambda_1\\), i.e., \\[\n\\frac{\\lambda}{\\lambda + \\lambda_1} =\n\\frac{\\lambda(\\lambda - \\lambda_1)}{\\lambda^2 - \\lambda_1^2} =\n\\frac{1}{k_1^2} \\left(\n\\lambda^2 - \\lambda \\lambda_1\n\\right)\n\\]\nWe obtain \\[\n\\begin{equation}\n    E_\\varphi = \\frac{i \\omega \\mu_0 m}{2 \\pi k_1^2}\n    \\partial_r\n    \\left[\n    \\int_0^\\infty \\lambda^2\n    J_0(\\lambda r) \\, d\\lambda -\n    \\int_0^\\infty \\lambda \\lambda_1\n    J_0(\\lambda r) \\, \\dd\\lambda\n    \\right].\n\\end{equation}\n\\tag{10.1}\\]\n\n10.3.1 Useful integral identities\nWith \\(R^2 = r^2 + z^2\\) there holds the following identity (Weber integral) \\[\n\\begin{equation}\n\\frac{1}{R} = \\int_0^\\infty\ne^{-\\lambda z} J_0(\\lambda r)\\, d\\lambda.\n\\end{equation}\n\\tag{10.2}\\] After differentiating both sides of 10.2 twice w.r.t. \\(z\\), we obtain \\[\n\\frac{\\partial^2}{\\partial z^2} \\frac{1}{R} = \\int_0^\\infty\n\\lambda^2 e^{-\\lambda z} J_0(\\lambda r)\\, \\dd\\lambda.\n\\]\n\\[\n\\frac{\\partial^2}{\\partial z^2} \\frac{1}{R}  \\bigg|_{z=0} =\n\\int_0^\\infty\n\\lambda^2 J_0(\\lambda r)\\, \\dd\\lambda.\n\\] We see, that for \\(z=0\\) this resembles the first integral in the xpression of \\(E_\\varphi\\) given in 10.1.\nThe Sommerfeld integral is \\[\n\\begin{equation}\n\\frac{e^{-i k_1 R}}{R} = \\int_0^\\infty\n\\frac{\\lambda}{\\lambda_1}\ne^{-\\lambda_1 z} J_0(\\lambda r)\\, \\dd\\lambda.\n\\end{equation}\n\\tag{10.3}\\]\nLikewise, we obtain the second integral expression when we differentiate the Sommerfeld integral 10.3 twice w.r.t. \\(z\\): \\[\n\\frac{\\partial^2}{\\partial z^2} \\frac{e^{-i k_1 R}}{R} = \\int_0^\\infty\n{\\lambda}{\\lambda_1}\ne^{-\\lambda_1 z} J_0(\\lambda r)\\, \\dd\\lambda\n\\]\n\\[\n\\frac{\\partial^2}{\\partial z^2} \\frac{e^{-i k_1 R}}{R}\\bigg|_{z=0} = \\int_0^\\infty\n{\\lambda}{\\lambda_1}\nJ_0(\\lambda r)\\, \\dd\\lambda\n\\]\nWe see that we are able to express the above integrals in the expression for \\(E_\\varphi\\) by means of derivatives of the Weber and Sommerfeld integrals.\nThe point is, that we can replace the integrals just by functions of \\(R\\)!",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Explicit expressions for the fields in HCP configuration</span>"
    ]
  },
  {
    "objectID": "explicit.html#implementation-for-e_varphi",
    "href": "explicit.html#implementation-for-e_varphi",
    "title": "10  Explicit expressions for the fields in HCP configuration",
    "section": "10.4 Implementation for \\(E_\\varphi\\)",
    "text": "10.4 Implementation for \\(E_\\varphi\\)\nWe define sympy expressions and let Python do the work for us.\n\n\nShow the code\nr = sp.symbols('r', positive=True, real=True)\nz = sp.symbols('z', real=True)\nk = sp.symbols('k')\nR = sp.sqrt(r**2 + z**2)\nG = sp.exp(-sp.I * k * R ) / R\nG\n\n\n\\(\\displaystyle \\frac{e^{- i k \\sqrt{r^{2} + z^{2}}}}{\\sqrt{r^{2} + z^{2}}}\\)\n\n\nThe second derivative of the Weber integral, i.e., \\(1/R\\), w.r.t. \\(z\\) is\n\n\nShow the code\nRzz = sp.diff(1 / R, z, 2)\nRzz.simplify()\n\n\n\\(\\displaystyle \\frac{- r^{2} + 2 z^{2}}{\\left(r^{2} + z^{2}\\right)^{\\frac{5}{2}}}\\)\n\n\nNow, we set \\(z=0\\) and obtain\n\n\nShow the code\nRzz.subs(z, 0)\n\n\n\\(\\displaystyle - \\frac{1}{r^{3}}\\)\n\n\ni.e., \\[\n\\pdv[2]{}{z} \\frac{1}{R} \\bigg|_{z=0} = -\\frac{1}{r^3}.\n\\] Further, the left-hand side of the Sommerfeld integral is \\[\n\\frac{e^{-i k_1 R}}{R},\n\\] and its second derivative w.r.t. \\(z\\) is\n\n\nShow the code\nGzz = sp.diff(G, z, 2)\nGzz.simplify()\n\n\n\\(\\displaystyle \\frac{\\left(2 i k z^{2} \\left(r^{2} + z^{2}\\right)^{6} - k \\left(r^{2} + z^{2}\\right)^{\\frac{9}{2}} \\left(k z^{2} \\left(r^{2} + z^{2}\\right)^{2} - i z^{2} \\left(r^{2} + z^{2}\\right)^{\\frac{3}{2}} + i \\left(r^{2} + z^{2}\\right)^{\\frac{5}{2}}\\right) + \\left(- r^{2} + 2 z^{2}\\right) \\left(r^{2} + z^{2}\\right)^{\\frac{11}{2}}\\right) e^{- i k \\sqrt{r^{2} + z^{2}}}}{\\left(r^{2} + z^{2}\\right)^{8}}\\)\n\n\nwhich, after setting \\(z=0\\), becomes\n\n\nShow the code\nGzz.subs(z, 0).simplify()\n\n\n\\(\\displaystyle \\frac{\\left(- i k r - 1\\right) e^{- i k r}}{r^{3}}\\)\n\n\nFinally, we apply the derivative w.r.t. \\(r\\) to both results and obtain\n\n\nShow the code\nex = sp.diff(Rzz, r).subs(z,0) - sp.diff(Gzz, r).subs(z, 0)\nex.simplify()\n\n\n\\(\\displaystyle \\frac{\\left(k^{2} r^{2} - 3 i k r + 3 e^{i k r} - 3\\right) e^{- i k r}}{r^{4}}\\)\n\n\nWe recognize that \\[\n\\pdv{}{r} \\left[\n    \\int_0^\\infty \\lambda^2\n    J_0(\\lambda r) \\, \\dd\\lambda -\n    \\int_0^\\infty \\lambda \\lambda_1\n    J_0(\\lambda r) \\, \\dd\\lambda\n    \\right] =\n    \\frac{\n    3 - (3 + 3 ikr - k^2 r^2) e^{-ikr}}{r^4}.\n\\]\nIncorporating the leading factor of \\(E_\\varphi\\) we get the result \\[\nE_\\varphi(r, \\omega) = -\\frac{m}{2 \\pi \\sigma r^4} \\left[\n3 - (3 + 3 ikr - k^2 r^2) e^{-ikr}\n\\right]\n\\]\nFor later evaluation we implement this result as a function:\n\n\nShow the code\ndef Ephi(r, omega, sigma):\n    mu_0 = np.pi * 4e-7\n    k = np.sqrt(-1j * omega * mu_0 * sigma)\n    E = 3 - (3 + 3 * 1j * k * r - k**2 * r**2) * \\\n        np.exp(-1j * k * r)\n    E *= -1 / (2 * np.pi * sigma * r**4)\n    return E",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Explicit expressions for the fields in HCP configuration</span>"
    ]
  },
  {
    "objectID": "explicit.html#magnetic-field",
    "href": "explicit.html#magnetic-field",
    "title": "10  Explicit expressions for the fields in HCP configuration",
    "section": "10.5 Magnetic field",
    "text": "10.5 Magnetic field\nThe expressions for \\(B_z\\) and \\(B_r\\) for \\(z=0\\) and \\(h=0\\) can be obtained in a similar fashion.\nNote that the conversion for \\(B_r\\) is slightly more involved.",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Explicit expressions for the fields in HCP configuration</span>"
    ]
  },
  {
    "objectID": "explicit.html#sec-H",
    "href": "explicit.html#sec-H",
    "title": "10  Explicit expressions for the fields in HCP configuration",
    "section": "10.6 Implementation for \\(B_r\\) and \\(B_z\\)",
    "text": "10.6 Implementation for \\(B_r\\) and \\(B_z\\)\nFor the magnetic field we find closed-form expressions using similar tricks.\nSpecifically, we obtain\n\\[\nB_z(r, \\omega) = \\frac{\\mu_0 m}{2 \\pi k^2 r^5} \\left[\n9 - (9 + 9ikr - 4k^2 r^2 - ik^3r^3) e^{-ikr}\n\\right]\n\\]\n\\[\nB_r(r, \\omega) = -\\frac{\\mu_0 m k^2}{4 \\pi r} \\left[\nI_1(\\alpha)K_1(\\alpha) - I_2(\\alpha)K_2(\\alpha)\n\\right]\n\\]\nThe functions \\(I_1, I_2, K_1, K_2\\) are the modified Bessel functions of the first kind and order 1 and 2 with complex argument \\(\\alpha = \\dfrac{ikr}{2}\\).\nPython implementation:\n\n\nShow the code\nfrom scipy.special import kv, iv\n\n# iv = lambda n, z: 1j ** (-n) * jv(n, 1j * z)\n\ndef Br(r, omega, sigma):\n    mu_0 = np.pi * 4e-7\n    k = np.sqrt(-1j * omega * mu_0 * sigma)\n    alpha = 1j * k * r / 2.0\n    B = iv(1, alpha) * kv(1, alpha) - iv(2, alpha) * kv(2, alpha)\n    B *= -mu_0 * k**2 / (4 * np.pi * r)\n    return B\n\ndef Bz(r, omega, sigma):\n    mu_0 = np.pi * 4e-7\n    k = np.sqrt(-1j * omega * mu_0 * sigma)\n    B = 9 - (9 + 9 * 1j * k * r - 4 * k**2 * r**2 - 1j * k**3 * r**3) * np.exp(-1j * k * r)\n    B *= mu_0 / (2 * np.pi * k**2 * r**5)\n    return B",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Explicit expressions for the fields in HCP configuration</span>"
    ]
  },
  {
    "objectID": "explicit.html#summary",
    "href": "explicit.html#summary",
    "title": "10  Explicit expressions for the fields in HCP configuration",
    "section": "10.7 Summary",
    "text": "10.7 Summary\nThe final expressions in the frequency domain are given by\n\n\n\n\n\n\nFrequency domain fields\n\n\n\n\\[\n\\begin{align}\nE_\\varphi(r, \\omega) & = -\\frac{m}{2 \\pi \\sigma r^4} \\left[\n3 - (3 + 3 ikr - k^2 r^2) e^{-ikr}\n\\right] \\\\\nB_z(r, \\omega) & = \\frac{\\mu_0 m}{2 \\pi k^2 r^5} \\left[\n9 - (9 + 9ikr - 4k^2 r^2 - ik^3r^3) e^{-ikr}\n\\right] \\\\\nB_r(r, \\omega) & = -\\frac{\\mu_0 m k^2}{4 \\pi r} \\left[\nI_1(\\alpha)K_1(\\alpha) - I_2(\\alpha)K_2(\\alpha)\n\\right]\n\\end{align}\n\\tag{10.4}\\]\n\\(\\alpha = \\dfrac{i k r}{2}\\)",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Explicit expressions for the fields in HCP configuration</span>"
    ]
  },
  {
    "objectID": "explicit.html#examples",
    "href": "explicit.html#examples",
    "title": "10  Explicit expressions for the fields in HCP configuration",
    "section": "10.8 Examples",
    "text": "10.8 Examples\nAs an example, we choose a homogeneous ground with conductivity \\(\\sigma = 0.01\\) S/m. The transmitter-receiver offset is \\(100\\) m. The frequencies cover a range from \\(10^{-1} \\le f \\le 10^5\\) Hz.\n\n\nShow the code\nr = 100.0\nsigma = 0.01\nf = np.logspace(-1, 5, 301, endpoint=True)\nE_phi = [Ephi(r, 2 * np.pi * v, sigma) for v in f]\nB_r = [Br(r, 2 * np.pi * v, sigma) for v in f]\nB_z = [Bz(r, 2 * np.pi * v, sigma) for v in f]\n\n\n\n\nShow the code\ndef pos(data):\n    \"\"\"Return positive data; set negative data to NaN.\"\"\"\n    return np.where(data &gt; 0, data, np.nan)\n\ndef plotfield(f, field):\n    fig, ax = plt.subplots(1, 1, figsize=(6,4))\n    ax.loglog(f, pos(np.real(field)), 'C0-', label='+real')\n    ax.loglog(f, pos(-np.real(field)), 'C0--', label='-real')\n    ax.loglog(f, pos(np.imag(field)), 'C1-', label='+imag')\n    ax.loglog(f, pos(-np.imag(field)), 'C1--', label='-imag')\n    ax.grid(True)\n    ax.legend()\n    ax.set_xlabel('f in Hz')\n    return ax\n\n\n\n\nShow the code\nax = plotfield(f, E_phi)\nax.set_ylabel(r'$E_\\varphi$ in V/m')\nax\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nax = plotfield(f, B_r)\nax.set_ylabel(r'$B_r$ in Vs/m$^2$')\nax\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nax = plotfield(f, B_z)\nax.set_ylabel(r'$B_z$ in Vs/m$^2$')\nax\n\n\n\n\n\n\n\n\n\nThe last plot for \\(B_z\\) can be verified using Fig. 4.2 in Ward & Hohmann (1988). Note that \\(H_z\\) is plotted in the following reference figure:\n\nFor completeness, this is Fig. 4.3 of Ward & Hohmann (1988), which displays \\(H_r\\):",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Explicit expressions for the fields in HCP configuration</span>"
    ]
  },
  {
    "objectID": "explicit.html#explicit-expressions-for-the-fields-in-the-time-domain",
    "href": "explicit.html#explicit-expressions-for-the-fields-in-the-time-domain",
    "title": "10  Explicit expressions for the fields in HCP configuration",
    "section": "10.9 Explicit expressions for the fields in the time domain",
    "text": "10.9 Explicit expressions for the fields in the time domain\nFollowing the ideas outlined in Section 8.2.5, we transform the field expressions 10.4 for a VMD in HCP configuration at \\(z=0\\) into the time domain.\nThe final expressions for \\(e_\\varphi\\), \\(b_z\\), and \\(\\pdv{b_z}{t}\\) can be easily obtained using 8.1, 8.2, and 8.3, and are given by\n\n\n\n\n\n\nTime domain fields\n\n\n\n\\[\n\\begin{align}\ne_\\varphi &= -\\frac{m}{2 \\pi \\sigma r^4} \\left[\n3 \\mathrm{erfc}(\\Theta r) - \\frac{2}{\\sqrt{\\pi}} \\Theta r (3 + 2 \\Theta^2 r^2 ) e^{-\\Theta^2 r^2}\n\\right] \\\\\nb_z &= \\frac{\\mu_0 m}{4 \\pi r^3} \\left[\n    \\frac{9}{2 \\theta^2 r^2}\\mathrm{erf}(\\Theta r) -\\mathrm{erf}(\\Theta r) - \\frac{1}{\\sqrt{\\pi}} \\left(\n        \\frac{9}{\\Theta r} + 4 \\Theta r\n    \\right)\n    e^{-\\Theta^2 r^2}\n\\right] \\\\\n\\pdv{b_z}{t}  &= \\frac{m}{2 \\pi \\sigma r^5} \\left[\n    9 \\mathrm{erf}(\\Theta r) - \\frac{2 \\Theta r}{\\sqrt{\\pi}}\n    \\left(\n        9 + 6 \\Theta^2 r^2 + 4 \\Theta^4 r^4\n    \\right)\n    e^{-\\Theta^2 r^2}\n\\right]\n\\end{align}\n\\]\n\\(\\Theta = \\left( \\dfrac{\\sigma \\mu_0}{4 t}\\right)^{1/2}\\)\n\n\n\n\n\n\nWard, S.H. & Hohmann, G.W., 1988. Electromagnetic theory for geophysical applications. Electromagnetic methods in applied geophysics, Vol. 1, pp. 131–311.",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Explicit expressions for the fields in HCP configuration</span>"
    ]
  },
  {
    "objectID": "hankel_transform.html",
    "href": "hankel_transform.html",
    "title": "11  Numerical calculation of the EM Hankel integrals",
    "section": "",
    "text": "11.1 The oscillating nature of the integrands\nTo evaluate, e.g., the component \\(B_z\\), one needs the function \\(f(\\lambda, z)\\) as \\[\nf(\\lambda, z) = \\frac{\\lambda - \\lambda_1}{\\lambda + \\lambda_1}\\lambda^2\ne^{-\\lambda h}e^{\\lambda z}\n\\]\nAs an example, we choose a uniform halfspace with\nThe surface admittance \\(\\lambda_1 = \\sqrt{\\lambda^2 + i \\omega \\mu_0 \\sigma_1}\\) will be calculated using the function lambda_1 given below.\nThis is the Python implementation of the admittance of the uniform halfspace, \\(\\lambda_1\\):\nShow the code\ndef lambda_1(lam, sigma, mu, f):\n    omega = 2 * np.pi * f\n    mu0 = np.pi * 4e-7\n    alpha = np.sqrt(lam**2 + 1j * omega * mu * sigma)\n    return alpha / mu0\nGiven these definitions, we are now able to evaluate the complete integrand functions in 11.1.\nTo this end, we first illustrate the integrand graphically:\nShow the code\nnlam = 801\nlam = np.logspace(0, 5, nlam, endpoint=True)\nr = 100.0\nfreq = 100.0\nsigma = 0.01\nmu = np.pi * 4e-7\n\nf = [(l - lambda_1(l, sigma, mu, freq)) / (l + lambda_1(l, sigma, mu, freq)) * l**2 for l in lam]\n\nfig, (ax1, ax2) = plt.subplots(2, 1, sharex=True, figsize=(6,4))\nax1.loglog(lam, np.abs(np.real(f)))\nax1.set_ylabel(r'$| \\mathrm{Re}(f(\\lambda,z))|$')\nax1.grid(True)\n\nax2.loglog(lam, np.abs(np.imag(f)))\nax2.set_xlabel(r'$\\lambda$')\nax2.set_ylabel(r'$| \\mathrm{Im}(f(\\lambda,z))|$')\nax2.set_ylim(1e-12, 1e-10)\nax2.grid(True)\nAs we see from the above illustration, the behaviour of \\(f(\\lambda,z)\\) itself does not impose any numerical problems to the integration.\nThe following graphs show the real and imaginary part of the complete integrand:\nShow the code\nfrom scipy.special import j0\nfig, (ax1, ax2) = plt.subplots(2, 1, sharex=True, figsize=(6,4))\nax1.semilogx(lam, np.real(f) * j0(lam * r))\nax1.grid(True)\nax1.set_title(r'$\\mathrm{Re}(f(\\lambda)) J_0(\\lambda r)$')\nax2.semilogx(lam, np.imag(f) * j0(lam * r))\nax2.grid(True)\nax2.set_title(r'$\\mathrm{Im}(f(\\lambda)) J_0(\\lambda r)$')\nax2.set_xlabel(r'$\\lambda$');\nWe observe that the numerical integration will be a major challenge.\nThis is due to the following reasons:\nIn practice, the following three numerical techniques have proven effective:\nIn the following, we briefly outline the idea of the FHT.",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Numerical calculation of the EM Hankel integrals</span>"
    ]
  },
  {
    "objectID": "hankel_transform.html#the-oscillating-nature-of-the-integrands",
    "href": "hankel_transform.html#the-oscillating-nature-of-the-integrands",
    "title": "11  Numerical calculation of the EM Hankel integrals",
    "section": "",
    "text": "conductivity \\(\\sigma_1=0.01\\) S/m\nfrequency \\(f = 100\\) Hz\ntransmitter and receiver in plane \\(z=0\\)\noffset \\(r = 100\\) m.\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe Bessel function brings into play an oscillation of the integrand\nThe upper limit of integration is at infinity\n\n\n\nFast Hankel Transform (FHT)\nGauss quadrature with an adapted weighting function\nRepresentation of the integrand function by Chebyshew polynomials",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Numerical calculation of the EM Hankel integrals</span>"
    ]
  },
  {
    "objectID": "hankel_transform.html#the-fast-hankel-transform",
    "href": "hankel_transform.html#the-fast-hankel-transform",
    "title": "11  Numerical calculation of the EM Hankel integrals",
    "section": "11.2 The Fast Hankel Transform",
    "text": "11.2 The Fast Hankel Transform\nImportant work on this problem has been done by Ghosh (1971), Johansen & Sørensen (1979), Anderson (1982), Christensen (1990), among others.\nThe method is based on the following idea:\nTo cover the range of \\(\\lambda\\) from \\(0\\) to \\(\\infty\\) as quickly as possible, we take the following variable transformation:\n\\[\\begin{equation}\n\\begin{split}\nx & = \\log(r/r_0) \\\\\ny & = -\\log(\\lambda r_0), \\qquad r_0 &gt; 0 \\\\\nG(x) & = r g(r) \\\\\nF(y) & = f(\\lambda) \\\\\nH(x) & = e^x J_\\nu(e^x)\n\\end{split}\n\\end{equation}\\]\nThen, the integral for computing \\(g(r)\\), i.e.,\n\\[\\begin{equation}\ng(r) = \\int_0^\\infty f(\\lambda, z) J_\\nu(\\lambda r)\\, \\dd\\lambda, \\qquad \\nu &gt; -1.\n\\end{equation}\\]\ncan be rewritten as a convolution integral, such that\n\\[\\begin{equation}\nG(x) = \\int_{-\\infty}^\\infty F(y) H(x - y) \\dd y.\n\\end{equation}\\]\nFor discrete values of \\(F\\) with \\(F_n := F(y_n)\\) this integral becomes a discrete convolution\n\\[\\begin{equation}\nG_m = \\sum_{n=-\\infty} ^\\infty F_n H_{m-n} = \\sum_{n=-\\infty} ^\\infty F_{m-n} H_{n}\n\\end{equation}\\]\nIn the publications given at the beginning of this section, it has been explained how to compute the optimal filter coefficients \\(\\overline H_n\\) with finite length \\(-\\infty &lt; n_1 \\le n \\le n_2 &lt; \\infty\\).\nThere are two approaches to this:\n\nComplex analysis: calculation of closed line integrals in the complex plane (Christensen (1990), Johansen & Sørensen (1979)).\nLeast Squares fitting of filter coefficients based on known Hankel transform pairs (e.g., the well-known Sommerfeld or Weber integrals) (Anderson (1982)).\n\nRegardless of the choice of the method for determining the coefficients we have to implement\n\\[\\begin{equation}\nG_m = \\sum_{n=n_1} ^{n_2} F_n \\overline H_{m-n} = \\sum_{n=n_1} ^{n_2} F_{m-n} \\overline H_{n}\n\\end{equation}\\]\nusing standard methods of discrete convolution.",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Numerical calculation of the EM Hankel integrals</span>"
    ]
  },
  {
    "objectID": "hankel_transform.html#numerical-implementation-of-the-convolution",
    "href": "hankel_transform.html#numerical-implementation-of-the-convolution",
    "title": "11  Numerical calculation of the EM Hankel integrals",
    "section": "11.3 Numerical implementation of the convolution",
    "text": "11.3 Numerical implementation of the convolution\nWe implement a Python function that computes the convolution:\n\n\nShow the code\ndef convolve(fc, kernel, style=\"valid\"):\n    nc = len(fc)\n    nu = len(kernel)\n    n = nu + nc - 1\n    result = np.zeros(n, dtype=type(kernel))\n    \n    for i in range(nc):\n        for j in range(nu):\n            result[j + i] += kernel[j] * fc[i]\n    \n    if style == \"full\":\n        result = result\n    elif style == \"valid\":\n        result = result[nc - 1:n - nc + 1]\n    \n    return result\n\n\n\n\n\n\n\n\nNote\n\n\n\nWhen the keyword style=\"valid\" is specified in the call to convolve, then the result of the convolution is restricted to the non-zero part of the result. Otherwise, when style=\"full\" is provided, the result has leading and trailing zeros (zero padding).\nWe always use style=\"valid\" as a default.\n\n\nThe following example confirms that our code is correct.\nThe convolution of two rectangular sequences results in a triangular sequence:\n\n\nShow the code\nf = [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0]\nh = [1, 1, 1, 1, 1]\ng = convolve(h, f)\nprint(f)\nprint(h)\nprint(g)\n\n\n[0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0]\n[1, 1, 1, 1, 1]\n[1 2 3 4 5 4 3 2 1]\n\n\n\n\nShow the code\nfig, ax = plt.subplots(1, 1, figsize=(6,2))\nax.stem(convolve(h, f, style=\"full\"))\nax.set_title('style=\"full\"')\nax.set_ylim((-0.25, 6.0))\nax.grid(True)\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nfig, ax = plt.subplots(1, 1, figsize=(6,2))\nax.stem(g)\nax.set_title('style=\"valid\"')\nax.set_ylim((-0.25, 6.0))\nax.grid(True)\n\n\n\n\n\n\n\n\n\n\n11.3.1 Example: Calculation of \\(B_z\\)\nFor the calculation of \\(B_z\\) we need the kernel \\(F\\) and the filter coefficients \\(H\\).\nThe filter coefficients are provided by the function gethankelfcJ0.\n\n\nShow the code\ndef gethankelfcJ0():\n    fc = np.array([\n        +2.898782880000e-07, +3.649351440000e-07, +4.594261260000e-07, +5.783832260000e-07,\n        +7.281413380000e-07, +9.166756390000e-07, +1.154026250000e-06, +1.452832980000e-06,\n        +1.829008340000e-06, +2.302585110000e-06, +2.898782860000e-06, +3.649351480000e-06,\n        +4.594261190000e-06, +5.783832360000e-06, +7.281413220000e-06, +9.166756640000e-06,\n        +1.154026210000e-05, +1.452833050000e-05, +1.829008240000e-05, +2.302585270000e-05,\n        +2.898782590000e-05, +3.649351860000e-05, +4.594260510000e-05, +5.783833290000e-05,\n        +7.281411440000e-05, +9.166758820000e-05, +1.154025730000e-04, +1.452833540000e-04,\n        +1.829006940000e-04, +2.302586300000e-04, +2.898778910000e-04, +3.649353620000e-04,\n        +4.594249600000e-04, +5.783834370000e-04, +7.281377380000e-04, +9.166748280000e-04,\n        +1.154014530000e-03, +1.452825610000e-03, +1.828968260000e-03, +2.302545350000e-03,\n        +2.898639790000e-03, +3.649167030000e-03, +4.593733080000e-03, +5.783032380000e-03,\n        +7.279414970000e-03, +9.163407050000e-03, +1.153256910000e-02, +1.451458320000e-02,\n        +1.826011990000e-02, +2.297010420000e-02, +2.887026190000e-02, +3.626918100000e-02,\n        +4.547940310000e-02, +5.694081920000e-02, +7.098730720000e-02, +8.809954260000e-02,\n        +1.082238890000e-01, +1.312504830000e-01, +1.550557150000e-01, +1.763715060000e-01,\n        +1.856277380000e-01, +1.697780440000e-01, +1.034052450000e-01, -3.025832330000e-02,\n        -2.275743930000e-01, -3.621732170000e-01, -2.055004460000e-01, +3.373948730000e-01,\n        +3.176898970000e-01, -5.137621600000e-01, +3.091302640000e-01, -1.267575920000e-01,\n        +4.619678900000e-02, -1.809686740000e-02, +8.354260500000e-03, -4.473683040000e-03,\n        +2.619747830000e-03, -1.601713570000e-03, +9.977178820000e-04, -6.262758150000e-04,\n        +3.943388180000e-04, -2.486063540000e-04, +1.568086040000e-04, -9.892662880000e-05,\n        +6.241523980000e-05, -3.938053930000e-05, +2.484723580000e-05, -1.567749450000e-05,\n        +9.891817410000e-06, -6.241311600000e-06, +3.938000580000e-06, -2.484710180000e-06,\n        +1.567746090000e-06, -9.891808960000e-07, +6.241309480000e-07, -3.938000050000e-07,\n        +2.484710050000e-07, -1.567746050000e-07, +9.891808880000e-08, -6.241309460000e-08\n    ])\n    nc = 100\n    nc0 = 60\n    return fc, nc, nc0\n\n\nThe function returns 100 filter coefficients.\nLet’s have a closer look at the coefficients:\n\n\nShow the code\nfc, nc, nc0 = gethankelfcJ0()\nfig, ax = plt.subplots(1, 1, figsize=(6,4))\nax.plot(-nc0 + np.linspace(0, nc, num=nc), fc)\nax.grid(True)\n\n\n\n\n\n\n\n\n\nThese are the filter coefficients which carry out the weighting of the functions \\(J_\\nu\\) on the kernel \\(f\\).\nWe obtain the discrete values of \\(F_n\\) by evaluating the function \\(f\\) at given interpolation points.\nThe choice of these interpolation points depends on the source-receiver offsets \\(r\\) for which the integral is to be calculated. If the offsets \\(r_i\\) are also logarithmically equidistant, the convolution sum can use all values of \\(r_i\\) in one pass.\n\n11.3.1.1 Calculation of the discrete kernel\nThe kernel function \\(F_n\\) is calculated as a function of the length \\(n_c\\) of the filter coefficients \\(H\\) and the number \\(n_r\\) of distances \\(r\\).\nThe number of required function evaluations of \\(f\\) is \\(n_c + n_r - 1\\). The location of the discrete \\(\\lambda_n\\) depends on the minimum spacing \\(r_{min}\\).\nWe set \\(r=100\\) m, such that \\(n_r = 1\\).\n\n\nShow the code\nrmin = 100.0\nnr = 1\nncnr = nc + nr - 1\n\nrr = rmin\n\n\nWe consider a homogeneous halfspace with conductivity \\(\\sigma = 0.01\\) S/m.\n\n\n\n\n\n\nNote\n\n\n\nUnlike our example, we usually provide logarithmically equidistant distances. Source and receiver points are both in the plane \\(z=0\\). The Euclidean distance between the two is denoted by \\(R\\).\nThe discrete distances \\(r_i\\) would then grow exponentially with 10 grid points per decade.\n\n\n\n\nShow the code\nz = 0.0\nz0 = 0.0\nq = 10.0**0.1\n\nR = np.sqrt(rr**2 + (z - z0)**2)\n\n\nWe calculate the field values for several logarithmically equidistant frequencies at once. For our example we choose \\(0.1 &lt; f &lt; 10^5\\) Hz.\nThe next loop provides the discrete wavenumbers \\(\\lambda_n\\) and from them the kernel function \\(F_n(\\lambda_n, z)\\).\n\n\nShow the code\nnf = 61\nmu_0 = np.pi * 4e-7\nf = np.logspace(-1, 5, 61, endpoint=True)\nkernel = np.zeros(ncnr).astype(complex)\nBz = np.zeros(nf).astype(complex)\n\nBz0 = (3 * (z - z0)**2 - R**2) / R**5\n\nfor k, freq in enumerate(f):\n    omega = 2 * np.pi * freq\n    for nu in range(0, ncnr):\n        n = nc0 - nc + nu\n        lam = np.exp(-n * 0.1 * np.log(10.0)) / rmin\n\n        # B1 = np.sqrt(lam**2 + 1j * omega * mu_0 * sigma)\n        B1 = lambda_1(lam, sigma, mu_0, freq)\n        E = np.exp(-lam * np.abs(z + z0))\n        eta = lam / mu_0\n        gamma = (B1 - eta) / (B1 + eta) * E\n        kernel[nu] = gamma * lam**2\n    hankelint = convolve(fc, kernel)\n    Bz[k] = mu_0 / (4 * np.pi) * (Bz0 - hankelint[0] / rr)\n\n\n\n\nShow the code\ndef pos(data):\n    \"\"\"Return positive data; set negative data to NaN.\"\"\"\n    return np.where(data &gt; 0, data, np.nan)\n\nfig, ax = plt.subplots(1, 1, figsize=(6,4))\nax.loglog(f, pos(np.real(Bz)), color='C0', linestyle='-', label='real')\nax.loglog(f, pos(-np.real(Bz)), color='C0', linestyle='--')\nax.loglog(f, pos(np.imag(Bz)), color='C1', linestyle='-', label='imag')\nax.loglog(f, pos(-np.imag(Bz)), color='C1', linestyle='--')\nax.set_xlabel('f in Hz')\nax.set_ylabel(r'$B_z$ in Vs/m$^2$')\nax.legend()\n\n\n\n\n\n\n\n\n\n\n\n\n\n11.3.2 Comparison to the analytical solution\nFor the purpose of comparison we use the function Bz_analytical(r, omega, sigma) that computes \\(B_z\\) using the closed form expression derived for \\(z=h=0\\) (see Section 10.6).\n\n\nShow the code\ndef Bz_analytical(r, omega, sigma):\n    mu_0 = np.pi * 4e-7\n    k = np.sqrt(-1j * omega * mu_0 * sigma)\n    B = 9 - (9 + 9 * 1j * k * r - 4 * k**2 * r**2 - 1j * k**3 * r**3) * np.exp(-1j * k * r)\n    B *= mu_0 / (2 * np.pi * k**2 * r**5)\n    return B\n\nBz_ana = [Bz_analytical(R, 2 * np.pi * v, sigma) for v in f]\n\n\n\n\nShow the code\nfig, ax = plt.subplots(1, 1, figsize=(6,4))\nax.loglog(f, pos(np.real(Bz_ana)), color='C0', linestyle='-', label='real')\nax.loglog(f, pos(-np.real(Bz_ana)), color='C0', linestyle='--')\nax.loglog(f, pos(np.imag(Bz_ana)), color='C1', linestyle='-', label='imag')\nax.loglog(f, pos(-np.imag(Bz_ana)), color='C1', linestyle='--')\nax.set_xlabel('f in Hz')\nax.set_ylabel(r'$B_z$ in Vs/m$^2$')\nax.legend()\n\n\n\n\n\n\n\n\n\nAs expected, the function plot matches the previous one.\nThe relative norm of the residual is\n\n\nShow the code\nres = Bz_ana - Bz\nrelnorm = np.linalg.norm(res) / np.linalg.norm(Bz_ana)\nprint(f'Relative residual norm = {relnorm:.2e}')\n\n\nRelative residual norm = 9.12e-07\n\n\n\n\n\n\nAnderson, W.L., 1982. Fast Hankel transforms using related and lagged convolutions. ACM Transactions on Mathematical Software (TOMS), 8, 344–368, ACM.\n\n\nChristensen, N.B., 1990. Optimized fast Hankel transform filters. Geophysical Prospecting, 38, 545–568. doi:10.1111/j.1365-2478.1990.tb01861.x\n\n\nGhosh, D.P., 1971. The application of linear filter theory to the direct interpretation of geoelectrical resistivity sounding measurements. Geophysical Prospecting, 19, 192–217. doi:10.1111/j.1365-2478.1971.tb00593.x\n\n\nJohansen, H.K. & Sørensen, K., 1979. Fast hankel transforms. Geophysical Prospecting, 27, 876–901. doi:10.1111/j.1365-2478.1979.tb01005.x",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Numerical calculation of the EM Hankel integrals</span>"
    ]
  },
  {
    "objectID": "layered_halfspace.html",
    "href": "layered_halfspace.html",
    "title": "12  Dipole sources above a layered halfspace",
    "section": "",
    "text": "12.1 The layered halfspace model\nThe halfspace is partitioned into \\(N\\) horizontal, uniform plates of infinite extent. The layer with index \\(1\\) is the uppermost layer, often referred to as overburden. The layer with index \\(N\\) (the substratum, sometimes called basement) extends vertically to \\(+\\infty\\). In the case of a uniform halfspace, \\(N=1\\).\nThe interfaces between the layers are at \\(z=h_n\\) where \\(1 \\le n \\le N\\). The surface of the conducting Earth is at \\(z=h_1 = 0\\).\nThe thickness of layer \\(n\\) is \\(d_n = h_{n+1} - h_n\\).\nThe conductivities are denoted as \\(\\sigma_n\\), \\(1 \\le n \\le N\\).\nNote that the \\(N\\)-layered halfspace is composed of \\(2N-1\\) parameters, i.e., \\(N\\) conductivities and \\(N-1\\) thicknesses.\nWe are going to derive expressions for the fields at \\(-\\infty &lt; z &lt; +\\infty\\). The resulting expressions will be similar to those derived for the case of a uniform halfspace.\nWe take the following steps to solve the problem:\nFirst, we formulate a boundary value problem for the potential inside the layer with index \\(n\\), \\(1 \\le n \\le N\\), and extend its solution upwards to the layer denoted \\(n-1\\) by applying appropriate conditions of continuity of the fields and the potential.\nIn what follows, we only consider that part of the solution of the Helmholtz equation depending on \\(z\\), i.e., \\(V(z, \\lambda)\\).\nInside the layer with index \\(n\\) we define the function \\(\\lambda_n = \\lambda_n(\\lambda) = \\sqrt{\\lambda^2 + i\\omega\\mu_0 \\sigma_n}\\).\nWe assume that there are both upward and downward travelling waves arising from reflections at the discontinuities (jumps) of the electrical conductivity between adjacent uniform layers.\nLet the function \\[\n\\begin{equation}\n\\begin{aligned}\nV(z, \\lambda) &=\\gamma_{n}^{-}(\\lambda) e^{-\\lambda_{n}\\left(z-h_{n}\\right)}+\\gamma_{n}^{+}(\\lambda) e^{+\\lambda_{n}\\left(z-h_{n}\\right)} \\\\\n&=\\gamma_{n}^{-}\\left[e^{-\\lambda_{n}\\left(z-h_{n}\\right)}+ \\textcolor{red}{r_{n}} e^{+\\lambda_{n}\\left(z-h_{n}\\right)}\\right]\n\\end{aligned}\n\\end{equation}\n\\] be the solution to the Helmholtz equation \\[\n\\begin{equation}\nV''(z) = \\lambda_n^2 V(z)\n\\end{equation}\n\\] for \\(h_n &lt; z &lt; h_{n+1}\\).\nNote that \\(\\textcolor{red}{r_n} := \\dfrac{\\gamma_n^+}{\\gamma_n^-}\\) is the ratio of the amplitudes of upward (reflected) and downward (transmitted) travelling waves at the interface at \\(z=h_n\\).",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Dipole sources above a layered halfspace</span>"
    ]
  },
  {
    "objectID": "layered_halfspace.html#the-layered-halfspace-model",
    "href": "layered_halfspace.html#the-layered-halfspace-model",
    "title": "12  Dipole sources above a layered halfspace",
    "section": "",
    "text": "Figure 12.1: The \\(N\\)-layered halfspace model\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nIf the magnetic permeability is non-uniform with depth, i.e., \\(\\mu = \\mu(z)\\), then we may replace \\(\\lambda_n\\) by \\(\\eta_n =  \\sqrt{\\lambda^2 + i\\omega\\mu_n \\sigma_n}/ \\mu_n\\).",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Dipole sources above a layered halfspace</span>"
    ]
  },
  {
    "objectID": "layered_halfspace.html#recursion",
    "href": "layered_halfspace.html#recursion",
    "title": "12  Dipole sources above a layered halfspace",
    "section": "12.2 Recursion",
    "text": "12.2 Recursion\nLet’s first analyze the wave propagation in the infinite layer \\(N\\).\nThere only exists a downward propagating (outgoing) wave with \\[\n\\begin{equation}\nV(z, \\lambda)=\\gamma_{N}^{-}(\\lambda) e^{-\\lambda_{N}\\left(z-h_{N}\\right)}, \\qquad z \\gt h_{N}.\n\\end{equation}\n\\] This is in complete agreement with the uniform case, where \\(N=1\\), \\(h_N = 0\\), and therefore \\(\\gamma_{N}^{-}(\\lambda) = \\gamma^{-}(\\lambda)\\).\nThe important question is:\nHow does a jump of conductivity \\(\\sigma_{n+1} - \\sigma_n \\ne 0\\) in the plane \\(z=h_{n+1}\\) affect the propagation of the partial waves \\(V(z, \\lambda)\\)?\nTo answer this question, knowledge about the behaviour of field components (or the potential) is required.\nWe already know that the potential and its vertical derivative are continuous in \\(z=0\\). In the case of a layered halfspace, this can be extended to any plane \\(z=h_n\\), \\(1 \\le n \\le N\\).\nThe continuity still holds for the function \\[\n\\begin{equation}\nB(z, \\lambda)=-\\frac{V^{\\prime}(z, \\lambda)}{V(z, \\lambda)}\n\\end{equation}\n\\] i.e., the assumption of continuity is also valid for the ratio of the two continuous functions \\(V^\\prime\\) and \\(V\\) for any value of \\(\\lambda\\).\nOf particular interest is the evaluation of \\(B(z)\\) at the interface between two adjacent layers.\nTo this end, we define the interface admittance \\(B_n\\) of the wave by setting \\[\n\\begin{equation}\nB_{n}:=B\\left(h_{n}\\right)=-\\frac{V^{\\prime}\\left(h_{n}\\right)}{V\\left(h_{n}\\right)}\n\\end{equation}\n\\]\nFor EM applications operating on and above the Earth’s surface, the surface admittance \\(B_1\\) evaluated in \\(z=h_1 = 0\\) is most important.\nLater we will introduce the surface impedance \\(Z_1\\), with the help of which we infer other quantities such as the apparent resistivity and phase.\n\n\n\n\n\n\nSummary\n\n\n\n\nWe have formulated an ansatz for \\(V(z)\\) in any layer\nThis ansatz can be interpreted as the linear combination of upward and downward propagating partial waves with exponential decay inside the layer and fixed interface amplitudes at the adjacent interfaces\nThe two coefficient functions \\(\\gamma_n^+\\) and \\(\\gamma_n^-\\) for the \\(n\\)-th layer are still to be determined\nTo this end, we enforce conditions of continuity at those interfaces\n\n\n\nIn the following we introduce auxiliary functions like the reflection coefficient function \\(r_n(\\lambda)\\).\n\n12.2.1 Behaviour of \\(V(z)\\) in layer \\(N\\)\nWith \\(r_n\\) we describe the ratio of upward and downward travelling partial waves.\nIn \\(z=h_N\\) we don’t observe an upward travelling wave, i.e., there is no reflection arising from an interface below \\(z=h_N\\).\nTherefore, \\(r_N(\\lambda) = 0\\) in \\(z=h_N\\) for all \\(\\lambda\\).\nThe layer \\(N\\), also called the substratum, acts like a homogeneous halfspace.",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Dipole sources above a layered halfspace</span>"
    ]
  },
  {
    "objectID": "layered_halfspace.html#implementation",
    "href": "layered_halfspace.html#implementation",
    "title": "12  Dipole sources above a layered halfspace",
    "section": "12.3 Implementation",
    "text": "12.3 Implementation\nIn the following we derive the computation of \\(B_1\\) using sympy.\nFirst, we define a few symbolic variables.\n\nλₙ: wave number in layer \\(n\\)\nγ⁻, γ⁺: coefficient functions in layer \\(n\\)\nBₙ₊₁: admittance evaluated at \\(z=h_{n+1}\\)\nrₙ: reflection coefficient at \\(z=h_n\\)\ndₙ: thickness of layer \\(n\\)\nhₙ: \\(z\\)-coordinate at the top of layer \\(n\\)\n\n\n\nShow the code\nz, r_n, d_n = symbols(\"z r_n d_n\", real=True)\nh_n = symbols(\"h_n\", real=True, positive=True)\nlambda_n, B_np1, gamma_minus, gamma_plus = symbols(\"lambda_n B_{n+1} gamma^- gamma^+\")\n\n\nFurther, we define V(z) as a symbolic expression for \\(V(z)\\):\n\n\nShow the code\nV = lambda z: gamma_minus * (exp(-lambda_n * (z - h_n)) + r_n * exp(lambda_n * (z - h_n)))\nprint_latex('V(z) =')\nV(z)\n\n\n\\(V(z) =\\)\n\n\n\\(\\displaystyle \\gamma^{-} \\left(r_{n} e^{\\lambda_{n} \\left(- h_{n} + z\\right)} + e^{- \\lambda_{n} \\left(- h_{n} + z\\right)}\\right)\\)\n\n\nB(z) is the implementation of the admittance function \\(B(z)\\):\n\n\nShow the code\nB = lambda z: -diff(V(z), z) / V(z)\nprint_latex('B(z) = ')\nB(z).simplify()\n\n\n\\(B(z) = \\)\n\n\n\\(\\displaystyle \\frac{\\lambda_{n} \\left(- r_{n} + e^{2 \\lambda_{n} \\left(h_{n} - z\\right)}\\right)}{r_{n} + e^{2 \\lambda_{n} \\left(h_{n} - z\\right)}}\\)\n\n\nB_n is the interface admittance at the top of layer \\(n\\):\n\n\nShow the code\nB_n = B(z).subs(z, h_n).simplify()\nprint_latex(\"B_n = \")\nB_n\n\n\n\\(B_n = \\)\n\n\n\\(\\displaystyle \\frac{\\lambda_{n} \\left(1 - r_{n}\\right)}{r_{n} + 1}\\)\n\n\nWe observe that \\[\n\\begin{equation}\nB_{n}=\\lambda_{n} \\frac{1-r_{n}}{1+r_{n}}.\n\\end{equation}\n\\tag{12.1}\\] We now have a representation of the interface admittance in terms of the layer properties \\(\\lambda_n\\) and the reflection coefficient \\(r_n\\).\nHowever, the \\(r_n\\) remains undetermined. We try to eliminate \\(r_n\\) from the equation above.\nTo this end, we express \\(B(z)\\) at \\(z=h_{n+1}\\) using the layer thickness \\(d_n\\).\n\n\nShow the code\nB(z).subs(z - h_n, d_n).simplify()\n\n\n\\(\\displaystyle \\frac{\\lambda_{n} \\left(- r_{n} e^{2 d_{n} \\lambda_{n}} + 1\\right)}{r_{n} e^{2 d_{n} \\lambda_{n}} + 1}\\)\n\n\nWe rewrite the result and obtain \\[\n\\begin{equation}\nB_{n+1}=\\lambda_{n} \\frac{1-r_{n} e^{2 \\lambda_{n} d_{n}}}{1+r_{n} e^{2 \\lambda_{n} d_{n}}}.\n\\end{equation}\n\\]\nNow we have found a second equation which contains \\(r_n\\), which we eliminate in the following step.\nWe rearrange the equation and bring \\(r_n\\) to the left.\nWith the help of sympy we carry out the following steps:\n\nEvaluate \\(B(z)\\) in \\(z=h_{n+1}\\) by\nSubstitute (subs) \\(h_{n+1} - h_n\\) by \\(d_n\\)\nSolve (solve) the equation for \\(r_n\\)\nSave the result as r in sympy\n\nThus, we have found an expression which introduces a link to the layer \\(n+1\\), and enables us to eliminate \\(r_n\\).\n\n\nShow the code\nr = solve(B(z).subs(z - h_n, d_n) - B_np1, r_n)\ndisplay(HTML(\"\\(r_n = \\)\"))\nr[0]\n\n\n\\(r_n = \\)\n\n\n\\(\\displaystyle \\frac{\\left(- B_{n+1} + \\lambda_{n}\\right) e^{- 2 d_{n} \\lambda_{n}}}{B_{n+1} + \\lambda_{n}}\\)\n\n\nGiven this intermediate result, we are now prepared to substitute the expression \\(r_n\\) in equation 12.1.\nWe have obtained an important, yet unfinished, intermediate result, which already contains a recursion \\[\nB_n \\leftarrow B_{n+1} \\qquad\\text{for } n= N-1, N-2, \\dots, 1.\n\\]\n\n\nShow the code\ndisplay(HTML(\"\\( B_n = \\)\"))\nB_n.subs(r_n, r[0]).simplify().simplify()\n\n\n\\( B_n = \\)\n\n\n\\(\\displaystyle \\frac{\\lambda_{n} \\left(B_{n+1} - \\lambda_{n} + \\left(B_{n+1} + \\lambda_{n}\\right) e^{2 d_{n} \\lambda_{n}}\\right)}{- B_{n+1} + \\lambda_{n} + \\left(B_{n+1} + \\lambda_{n}\\right) e^{2 d_{n} \\lambda_{n}}}\\)\n\n\nWith the following changes we obtain a recursion formula which provides the desired surface admittance \\(B_1\\):\n\nExpand with \\((\\lambda_n + B_{n+1})e^{+\\lambda_n d_n}\\)\nCollect, sort and factor out \\(\\lambda_n\\) and \\(B_{n+1}\\) in both numerator and denominator\nUse definitions of hyperbolic functions \\(\\sinh(z)\\) and \\(\\cosh(z)\\)\nExpand with \\(1 / \\cosh(z)\\)\n\nWe use \\[\n\\begin{equation}\n\\tanh z=\\frac{e^{z}-e^{-z}}{e^{z}+e^{-z}}\n\\end{equation}\n\\] and \\[\n\\begin{equation}\n{{\\cosh z} \\atop {\\sinh z}} = \\frac{1}{2}\\left( e^z \\pm e^{-z} \\right),\\qquad z \\in \\mathbb C,\n\\end{equation}\n\\] and obtain the recursion formula for the admittance at the surface of the Earth:\n\n\n\n\n\n\nWait algorithm for \\(\\mu_r = 1\\)\n\n\n\n\\[\n    \\begin{equation}\n    \\begin{array}{l}\n    \\lambda_{n}=\\sqrt{\\lambda^{2}-k_{n}^{2}}, \\qquad n=1,2, \\ldots, N \\\\\n    B_{N}=\\lambda_{N} \\\\\n    B_{n}=\\lambda_{n} \\dfrac{B_{n+1}+\\lambda_{n} \\tanh \\left(\\lambda_{n} d_{n}\\right)}{\\lambda_{n}+B_{n+1} \\tanh \\left(\\lambda_{n} d_{n}\\right)}, \\qquad n=N-1, \\ldots, 1\n    \\end{array}\n    \\end{equation}\n\\] This algorithm is known as the Wait algorithm (Wait, J.R., 1954: On the relation between telluric currents and the Earth’s magnetic field, Geophysics, 19, 281-289) PDF\n\n\nIf we let \\(\\mu_r \\ne 1\\) in any of the \\(N\\) layers, we slightly modify the above equations and write\n\n\n\n\n\n\nWait algorithm incorporating \\(\\mu_r \\ne 1\\)\n\n\n\n\\[\n    \\begin{equation}\n    \\begin{array}{l}\n    \\eta_{n}=\\dfrac{\\sqrt{\\lambda^2 + i\\omega\\mu_n \\sigma_n}}{\\mu_n} \\qquad n=1,2,\\ldots, N \\\\\n    \\mu_n = \\mu_{r,n} \\mu_0 \\\\\n    B_{N}=\\eta_{N} \\\\\n    B_{n}=\\eta_{n} \\dfrac{B_{n+1}+\\eta_{n} \\tanh \\left(\\lambda_{n} d_{n}\\right)}{\\eta_{n}+B_{n+1} \\tanh \\left(\\lambda_{n} d_{n}\\right)}, \\qquad n=N-1, \\ldots, 1.\n    \\end{array}\n    \\end{equation}\n\\]",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Dipole sources above a layered halfspace</span>"
    ]
  },
  {
    "objectID": "layered_halfspace.html#algorithm",
    "href": "layered_halfspace.html#algorithm",
    "title": "12  Dipole sources above a layered halfspace",
    "section": "12.4 Algorithm",
    "text": "12.4 Algorithm\nWe implement the calculation of the admittance as a function called admittance(λ, σ, μ, d, f). The function returns \\(B_1\\) as a complex-valued number.\nThe input parameters for an \\(n\\)-layered halfspace are:\n\nseparation variable \\(\\lambda\\), \\(0 \\le \\lambda &lt; \\infty\\)\narray of layer conductivities \\(\\sigma_i\\), \\(i=1,\\dots n\\)\narray of layer magnetic permeabilities \\(\\mu_i = \\mu_{ri} \\mu_0\\), \\(i=1,\\dots n\\)\narray of layer thicknesses \\(d_i\\), \\(i=1,\\dots,n-1\\)\nfrequency in Hz.\n\n\n\nShow the code\ndef admittance(λ, σ, μ, d, f):\n    nl = len(σ)\n    ω = 2 * np.pi * f\n    α = [np.sqrt(λ**2 + 1j * μ[i] * ω * σ[i]) for i in range(nl)]\n    η = [a / m for a, m in zip(α, μ)]\n    \n    B = np.zeros(nl, dtype=np.complex128)\n\n    B[nl - 1] = η[nl - 1]\n\n    if nl &gt; 1:\n        for n in range(nl - 2, -1, -1):\n            B[n] = η[n] * \\\n                    (B[n + 1] + η[n] * np.tanh(α[n] * d[n])) / \\\n                    (η[n] + B[n + 1] * np.tanh(α[n] * d[n]))\n\n    return B[0]\n\n\nFor \\(\\lambda = 10\\) m\\(^{-1}\\), \\(\\sigma=[1, 1]^\\top\\) S/m, \\(\\mu=[\\mu_0, \\mu_0]^\\top\\) Vs/Am, \\(d=1\\) m, \\(f=1\\) Hz we obtain for \\(B_1\\):\n\n\nShow the code\nprint('B_1 = ')\nadmittance(10.0, np.array([1, 1]), np.array([1, 1]), np.array([1]), 1.0)\n\n\nB_1 = \n\n\n(10.004928726718877+0.31400450112152684j)",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Dipole sources above a layered halfspace</span>"
    ]
  },
  {
    "objectID": "layered_halfspace.html#summary",
    "href": "layered_halfspace.html#summary",
    "title": "12  Dipole sources above a layered halfspace",
    "section": "12.5 Summary",
    "text": "12.5 Summary\nWe are now able to express the anomalous effect of the layers \\(2 \\le n \\le N\\) by the surface admittance \\(B_1\\).\nThe resulting admittance formula can be used to simply replace every occurence of \\(\\lambda_1\\) in the equations for the homogeneous halfspace by \\(B_1\\).\n\n\n\n\n\n\nFields in \\(z \\le 0\\)\n\n\n\n\\[\n\\begin{align}\n    E_\\varphi & = -\\frac{i \\omega \\mu m}{4 \\pi}\n    \\left[\n    \\frac{r}{R^3} +\n    \\int_0^\\infty \\frac{\\lambda - B_1}{\\lambda + B_1}\\lambda\n    e^{-\\lambda h}e^{\\lambda z}J_1(\\lambda r)\\, \\dd\\lambda\n    \\right] \\\\\n    H_r & = \\frac{m}{4 \\pi}\n    \\left[\n    \\frac{3r(z+h)}{R^5} -\n    \\int_0^\\infty \\frac{\\lambda - B_1}{\\lambda + B_1}\\lambda^2\n    e^{-\\lambda h}e^{\\lambda z}J_1(\\lambda r)\\, \\dd\\lambda\n    \\right] \\\\\n    H_z & = \\frac{m}{4 \\pi}\n    \\left[\n    \\frac{3(z+h)^2 - R^2}{R^5} +\n    \\int_0^\\infty \\frac{\\lambda - B_1}{\\lambda + B_1}\\lambda^2\n    e^{-\\lambda h}e^{\\lambda z}J_0(\\lambda r)\\, \\dd\\lambda\n    \\right]\n\\end{align}\n\\]\n\n\nFinally, it remains to evaluate the Hankel integrals numerically.\nTo this end, we need an implementation of a discrete convolution. We use the function convolve:\n\n\nShow the code\ndef convolve(fc, kernel, style=\"valid\"):\n    nc = len(fc)\n    nu = len(kernel)\n    n = nu + nc - 1\n    result = np.zeros(n, dtype=type(kernel))\n    \n    for i in range(nc):\n        for j in range(nu):\n            result[j + i] += kernel[j] * fc[i]\n    \n    if style == \"full\":\n        result = result\n    elif style == \"valid\":\n        result = result[nc - 1:n - nc + 1]\n    \n    return result\n\n\nHere we define the function gethankelfcJ0 that returns the numerical filter coeffients for the function \\(J_0(\\lambda r)\\) fc, the length of the filter nc as well the index which corresponds with the zero position, nc0.\n\n\nShow the code\nimport numpy as np\n\ndef gethankelfcJ0():\n    fc = np.array([\n        +2.898782880000e-07, +3.649351440000e-07, +4.594261260000e-07, +5.783832260000e-07,\n        +7.281413380000e-07, +9.166756390000e-07, +1.154026250000e-06, +1.452832980000e-06,\n        +1.829008340000e-06, +2.302585110000e-06, +2.898782860000e-06, +3.649351480000e-06,\n        +4.594261190000e-06, +5.783832360000e-06, +7.281413220000e-06, +9.166756640000e-06,\n        +1.154026210000e-05, +1.452833050000e-05, +1.829008240000e-05, +2.302585270000e-05,\n        +2.898782590000e-05, +3.649351860000e-05, +4.594260510000e-05, +5.783833290000e-05,\n        +7.281411440000e-05, +9.166758820000e-05, +1.154025730000e-04, +1.452833540000e-04,\n        +1.829006940000e-04, +2.302586300000e-04, +2.898778910000e-04, +3.649353620000e-04,\n        +4.594249600000e-04, +5.783834370000e-04, +7.281377380000e-04, +9.166748280000e-04,\n        +1.154014530000e-03, +1.452825610000e-03, +1.828968260000e-03, +2.302545350000e-03,\n        +2.898639790000e-03, +3.649167030000e-03, +4.593733080000e-03, +5.783032380000e-03,\n        +7.279414970000e-03, +9.163407050000e-03, +1.153256910000e-02, +1.451458320000e-02,\n        +1.826011990000e-02, +2.297010420000e-02, +2.887026190000e-02, +3.626918100000e-02,\n        +4.547940310000e-02, +5.694081920000e-02, +7.098730720000e-02, +8.809954260000e-02,\n        +1.082238890000e-01, +1.312504830000e-01, +1.550557150000e-01, +1.763715060000e-01,\n        +1.856277380000e-01, +1.697780440000e-01, +1.034052450000e-01, -3.025832330000e-02,\n        -2.275743930000e-01, -3.621732170000e-01, -2.055004460000e-01, +3.373948730000e-01,\n        +3.176898970000e-01, -5.137621600000e-01, +3.091302640000e-01, -1.267575920000e-01,\n        +4.619678900000e-02, -1.809686740000e-02, +8.354260500000e-03, -4.473683040000e-03,\n        +2.619747830000e-03, -1.601713570000e-03, +9.977178820000e-04, -6.262758150000e-04,\n        +3.943388180000e-04, -2.486063540000e-04, +1.568086040000e-04, -9.892662880000e-05,\n        +6.241523980000e-05, -3.938053930000e-05, +2.484723580000e-05, -1.567749450000e-05,\n        +9.891817410000e-06, -6.241311600000e-06, +3.938000580000e-06, -2.484710180000e-06,\n        +1.567746090000e-06, -9.891808960000e-07, +6.241309480000e-07, -3.938000050000e-07,\n        +2.484710050000e-07, -1.567746050000e-07, +9.891808880000e-08, -6.241309460000e-08\n    ])\n    nc = 100\n    nc0 = 60\n    return fc, nc, nc0\n\n\nWe illustrate the filter coefficients associated with \\(J_0(\\lambda r)\\):\n\n\nShow the code\nimport matplotlib.pyplot as plt\nfc0, nc, nc0 = gethankelfcJ0()\nfig, ax = plt.subplots(1, 1, figsize=(6,4))\nax.plot([-nc0 + v for v in range(1, nc+1)], fc0)\nax.set_xlabel('index of coefficients')\nax.grid(True)\n\n\n\n\n\n\n\n\n\n\n\nShow the code\ndef pos(data):\n    \"\"\"Return positive data; set negative data to NaN.\"\"\"\n    return np.where(data &gt; 0, data, np.nan)\n\n\n\n\nShow the code\nrmin = 10.0\nnr = 21\nncnr = nc + nr -1\n\nrr = np.zeros(nr)\nR = np.zeros(nr)\n\nz = 0.0\nz0 = 0.0\nq = 10.0**0.1\n\nmu0 = np.pi * 4e-7\n\nsigma = np.array([0.01])\nmu = np.array([1]) * mu0\n\nfor n in range(0, nr):\n    rr[n] = rmin * q**(n)\n    R[n] = np.sqrt(rr[n]**2 + (z - z0)**2)\n\nnf = 61\nfreq = np.logspace(-1, 5, nf, endpoint=True)\nkernel = np.zeros(ncnr, dtype=np.complex128)\nBz = np.zeros((nr, nf), dtype=np.complex128)\nBz0 = (3 * (z - z0)**2 - R**2) / R**5\n\nfor k, f in enumerate(freq):\n    omega = 2 * np.pi * f\n    for nu in range(0, ncnr):\n        n = nc0 - nc + nu\n        lam = np.exp(-n * 0.1 * np.log(10.0)) / rmin\n        B1 = admittance(lam, sigma, mu, [], f)\n\n        E = np.exp(-lam * np.abs(z + z0))\n\n        eta = lam / mu0\n        gamma = (B1 - eta) / (B1 + eta) * E\n        kernel[nu] = gamma * lam**2\n\n\n    Bz[:, k] = mu0 / 4 / np.pi * (Bz0 - convolve(fc0, kernel) / rr)\n\nfig, ax = plt.subplots(1, 1, figsize=(6,4))\n\nax.loglog(freq, pos(np.real(Bz[10, :])) / mu0, color='C0', linestyle='-', label='Re')\nax.loglog(freq, pos(-np.real(Bz[10, :])) / mu0, color='C0', linestyle='--')\nax.loglog(freq, pos(np.imag(Bz[10, :])) / mu0, color='C1', linestyle='-', label='Im')\nax.loglog(freq, pos(-np.imag(Bz[10, :])) / mu0, color='C1', linestyle='--')\nax.grid(True)\nax.legend()\nax.set_xlabel('f in Hz')\nax.set_ylabel(r'$H_z$ in A/m')\nax.set_title(r'$\\sigma = $' + str(sigma[0]) + ' S/m, r = ' + '{0:.2f}'.format(rr[10]) + ' m')\nax\n\n\n\n\n\n\n\n\nFigure 12.2: Vertical magnetic field of a VMD over a uniform halfspace in the frequency domain, calculated using the FHT.\n\n\n\n\n\n\n\nShow the code\ndef Hz_analytical(r, f, sigma):\n    mu0 = np.pi * 4e-7\n    k = np.sqrt(-1j * 2 * np.pi * f * mu0 * sigma)\n    B = 9 - (9 + 9 * 1j * k * r - 4 * k**2 * r**2 - 1j * k**3 * r**3) * np.exp(-1j * k * r)\n    B = B / (2 * np.pi * k**2 * r**5)\n    return B\n\n\n\n\nShow the code\nH = [Hz_analytical(100.0, v, 0.01) for v in freq]\n\nfig, ax = plt.subplots(1, 1, figsize=(6,4))\n\nax.loglog(freq, pos(np.real(H)) / mu0, color='C0', linestyle='-', label='Re')\nax.loglog(freq, pos(-np.real(H)) / mu0, color='C0', linestyle='--')\nax.loglog(freq, pos(np.imag(H)) / mu0, color='C1', linestyle='-', label='Im')\nax.loglog(freq, pos(-np.imag(H)) / mu0, color='C1', linestyle='--')\nax.grid(True)\nax.legend()\nax.set_xlabel('f in Hz')\nax.set_ylabel(r'$H_z$ in A/m')\nax.set_title(r'$\\sigma = $' + str(sigma[0]) + ' S/m, r = ' + '{0:.2f}'.format(rr[10]) + ' m')\nax\n\n\n\n\n\n\n\n\nFigure 12.3: Vertical magnetic field of a VMD over a uniform halfspace in the frequency domain, calculated using an analytical formula.\n\n\n\n\n\n\n\n\n\n\n\nFigure 12.4: Reference to Fig. above above taken from Ward & Hohmann (1988)\n\n\n\nAs we can see from visual inspection of all three illustrations given above, the Fast Hankel Transform approach works well.\n\n\n\n\n\n\nNote\n\n\n\nIt remains to be said, that the numerical evaluation of the convolution is an expensive bottleneck, when the fields have to be computed at different \\(z\\) levels.\n\n\n\n\n\n\nWard, S.H. & Hohmann, G.W., 1988. Electromagnetic theory for geophysical applications. Electromagnetic methods in applied geophysics, Vol. 1, pp. 131–311.",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Dipole sources above a layered halfspace</span>"
    ]
  },
  {
    "objectID": "timedomain_halfspace.html",
    "href": "timedomain_halfspace.html",
    "title": "13  Dipole induction over a layered halfspace in the time domain",
    "section": "",
    "text": "13.1 Inverse Fourier transform from frequency to time domain\nWe have already learned that the inverse transform (Fourier synthesis) back to the time domain can be performed using the Laplace transform when the source current in the transmitter dipole is turned on or off. The current waveform can be described mathematically by a Heaviside step function.\nKey idea ist the step response.\nThe step response is the impulse response convolved with the transfer function of the step function. In the frequency domain we realize this by a multiplication of the Fourier transform of the considered field component with the Fourier transform of the step function.\nThe equation \\[\n\\begin{equation}\nf(t)=\\frac{1}{2 \\pi} \\int_{-\\infty}^{\\infty} \\frac{F(\\omega)}{i \\omega} e^{i \\omega t} \\dd \\omega\n\\end{equation}\n\\] describes the relation formally correct, but suffers from a singularity when \\(\\omega=0\\).\nTherefore the Fourier transformation is not applicable, since the function \\(1/i\\omega\\) to be transformed is not integrable. However, this deficiency can be solved with a trick.\nWe will formulate the approach to the inverse Fourier transform a little more elegantly below.",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Dipole induction over a layered halfspace in the time domain</span>"
    ]
  },
  {
    "objectID": "timedomain_halfspace.html#inverse-fourier-transform-from-frequency-to-time-domain",
    "href": "timedomain_halfspace.html#inverse-fourier-transform-from-frequency-to-time-domain",
    "title": "13  Dipole induction over a layered halfspace in the time domain",
    "section": "",
    "text": "13.1.1 Properties of the step response\nFirst, we put together some pleasant properties of the function \\(f(t)\\) we are looking for:\n\n\\(f(t)\\) is real, hence\n\\(F(\\omega)\\) is complex with symmetry \\(F(-\\omega) = \\overline F(\\omega)\\)\n\\(f(t) = 0\\) for \\(t &lt; 0\\) (causality).\n\nTherefore, as we will see, the inverse transformation can be carried out optionally as a cosine or sine transform of the imaginary or real part of \\(\\frac{F(\\omega)}{\\omega}\\), respectively:\n\n\n\n\n\n\nStep response via cosine or sine transform\n\n\n\n\\[\n    \\begin{equation}\n    \\begin{aligned}\n    f(t) &=\\frac{2}{\\pi} \\int_{0}^{\\infty} \\operatorname{Im} \\frac{F(\\omega)}{\\omega} \\cos (\\omega t) \\dd \\omega \\\\\n    &=\\frac{2}{\\pi} \\int_{0}^{\\infty} \\operatorname{Re} \\frac{F(\\omega)}{\\omega} \\sin (\\omega t) \\dd \\omega\n    \\end{aligned}\n    \\end{equation}\n\\]\n\n\nWe note the change of the integration limits (from \\(0\\) to \\(+\\infty\\)) and the leading factor \\(2 / \\pi\\) instead of \\(1 / 2 \\pi\\) before.\nHow do we get to this result?\n\nTo transform the field components into the time domain, we need to specify the frequency dependence of the dipole moment.\n\nFor a dipole moment of a VMD let \\(\\mathbf m(t) = \\mathbf m_0 g(t)\\) , \\(g(t)\\) is a dimensionless function.\n\nThe frequency dependent dipole moment is thus \\(\\widetilde{\\mathbf m}(\\omega) = \\mathbf m_0 \\widetilde{g}(\\omega)\\).\n\nThe Heaviside function is denoted by \\(H(t)\\).\nFirst, we consider the current step-on. It holds \\(g(t) =: g_\\mathrm{on}(t) = H(t)\\).\nUsing the Fourier transform pair\n\\[\n\\begin{equation}\nf(t)=\\frac{1}{2 \\pi} \\int_{-\\infty}^{+\\infty} F(\\omega) \\mathrm{e}^{i \\omega t} \\dd \\omega\n\\end{equation}\n\\]\n\\[\n\\begin{equation}\nF(\\omega)=\\int_{-\\infty}^{+\\infty} f(t) \\mathrm{e}^{-i \\omega t} \\dd t\n\\end{equation}\n\\] and a stabilizing term \\(e^{-\\epsilon t}\\), \\(\\epsilon \\to 0^+\\), we obtain (Table of Fourier transforms) \\[\n\\begin{equation}\n\\tilde{g}(\\omega)=: \\tilde{g}_\\mathrm{o n}(\\omega)=\\lim _{\\epsilon \\rightarrow 0^{+}} \\int_{0}^{\\infty} e^{-(\\epsilon+i \\omega) t} \\dd t=\\lim _{\\epsilon \\rightarrow 0^{+}} \\frac{1}{\\epsilon+i \\omega}.\n\\end{equation}\n\\] For the current step-off there holds \\(g(t) =: g_\\mathrm{off}(t) = H(-t)\\): \\[\n\\begin{equation}\n\\tilde{g}(\\omega)=: \\tilde{g}_\\mathrm{off}(\\omega)=\\lim _{\\epsilon \\rightarrow 0^{+}} \\int_{-\\infty}^{0} e^{(\\epsilon-i \\omega) t} \\dd t=\\lim _{\\epsilon \\rightarrow 0^{+}} \\frac{1}{\\epsilon-i \\omega}.\n\\end{equation}\n\\] We add both expressions in the frequency domain and obtain \\[\n\\begin{equation}\n\\tilde{g}_\\mathrm{o n}(\\omega)+\\tilde{g}_\\mathrm{o f f}(\\omega)=\\lim _{\\epsilon \\rightarrow 0^{+}} \\frac{2 \\epsilon}{\\epsilon^{2}+\\omega^{2}}=2 \\pi \\delta(\\omega),\n\\end{equation}\n\\] Equivalently, in the time domain \\[\n\\begin{equation}\ng_\\mathrm{o n}(t)+g_\\mathrm{o f f}(t) = H(t) + H(-t)=1\n\\end{equation}\n\\]\nWe now consider a source term of the form \\(\\mathbf m(t) = \\mathbf m_0 e^{i \\omega t}\\) (complex-valued single-frequency source). The resulting field is \\(F(\\mathbf r, \\omega) e^{i \\omega t}\\).\nThe real-valued field components for the current step-on (\\(f_\\text{on}\\)) and step-off (\\(f_\\text{off}\\)) are \\[\n\\begin{equation}\nf_\\mathrm{o n}(\\mathbf{r}, t)=\\frac{1}{2 \\pi} \\int_{-\\infty}^{+\\infty} \\tilde{g}_\\mathrm{o n}(\\omega) F(\\mathbf{r}, \\omega) \\mathrm{e}^{i \\omega t} \\dd \\omega\n\\end{equation}\n\\] and \\[\n\\begin{equation}\nf_\\mathrm{o f f}(\\mathbf{r}, t)=\\frac{1}{2 \\pi} \\int_{-\\infty}^{+\\infty} \\tilde{g}_\\mathrm{o f f}(\\omega) F(\\mathbf{r}, \\omega) \\mathrm{e}^{i \\omega t} \\dd \\omega.\n\\end{equation}\n\\] Due to causality all field components must be zero for \\(t&lt;0\\).\nSetting \\(t' := -t\\) we obtain \\[\n\\begin{equation}\n0=\\frac{1}{2 \\pi} \\int_{-\\infty}^{+\\infty} \\tilde{g}_\\mathrm{o n}(\\omega) F(\\mathbf{r}, \\omega) \\mathrm{e}^{-i \\omega t'} \\dd \\omega.\n\\end{equation}\n\\] Multiplying out \\(F = real(F) + i\\cdot imag(F)\\) and \\(\\mathrm{e}^{-i \\omega t'} = \\cos(\\omega t') - i \\sin(\\omega t')\\) and taking into account that \\(f(t)\\) is real, we obtain the following result for \\(t&gt;0\\): \\[\n\\begin{equation}\n\\begin{aligned}\nf_\\mathrm{o n}(\\mathbf{r}, t) & = -\\frac{2}{\\pi} \\int_{0}^{\\infty} \\operatorname{Im}\\left[\\tilde{g}_{o n}(\\omega) F(\\mathbf{r}, \\omega)\\right] \\sin (\\omega t) d \\omega \\\\\n& =\\frac{2}{\\pi} \\int_{0}^{\\infty} \\operatorname{Re}\\frac{F(\\omega)}{\\omega} \\sin (\\omega t) d \\omega.\n\\end{aligned}\n\\end{equation}\n\\] We have exploited that \\[\n\\begin{equation}\n\\lim _{\\epsilon \\rightarrow 0^{+}} g_{o n}(\\omega) \\sin (\\omega t)=\\frac{\\sin (\\omega t)}{i \\omega}\n\\end{equation}\n\\] is finite for \\(\\omega \\to 0\\), such that the stabilizing term \\(\\epsilon\\) is not required.",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Dipole induction over a layered halfspace in the time domain</span>"
    ]
  },
  {
    "objectID": "timedomain_halfspace.html#how-sines-and-cosines-are-related-to-bessel-functions",
    "href": "timedomain_halfspace.html#how-sines-and-cosines-are-related-to-bessel-functions",
    "title": "13  Dipole induction over a layered halfspace in the time domain",
    "section": "13.2 How sine’s and cosine’s are related to Bessel functions",
    "text": "13.2 How sine’s and cosine’s are related to Bessel functions\nWe now want to establish the connection to the Hankel transformation via Bessel functions of half-integer order. There holds (Abramowitz & Stegun, 10.1.1, 10.1.10 and 10.1.11) \\[\n\\begin{equation}\n\\begin{aligned}\nJ_{-1 / 2}(\\omega t) &=\\sqrt{\\frac{2}{\\pi \\omega t}} \\cos (\\omega t) \\\\\nJ_{+1 / 2}(\\omega t) &=\\sqrt{\\frac{2}{\\pi \\omega t}} \\sin (\\omega t).\n\\end{aligned}\n\\end{equation}\n\\] We may now rewrite the equations for the sine and cosine transform introduced above. We obtain the\n\n\n\n\n\n\nStep response via Hankel transform\n\n\n\n\\[\n    \\begin{equation}\n    \\begin{aligned}\n    f(t) &=\\sqrt{\\frac{2 t}{\\pi}} \\int_{0}^{\\infty} \\operatorname{Im} \\frac{F(\\omega)}{\\sqrt{\\omega}} J_{-1 / 2}(\\omega t) \\dd \\omega \\\\\n    &=\\sqrt{\\frac{2 t}{\\pi}} \\int_{0}^{\\infty} \\operatorname{Re} \\frac{F(\\omega)}{\\sqrt{\\omega}} J_{+1 / 2}(\\omega t) \\dd \\omega\n    \\end{aligned}\n    \\end{equation}\n\\]\n\n\nNote that for calculating the impulse response, we exploit the relation between the Dirac delta function and the Heaviside step function. We take the time derivative of the step response to obtain the impulse response.\nIn the frequency domain, this can be done simply by multiplication with \\(i\\omega\\).\n\n\n\n\n\n\nImpulse response via Hankel transform\n\n\n\n\\[\n    \\begin{equation}\n    \\begin{aligned}\n    \\dv{}{t} f(t) &=\\sqrt{\\frac{2 t}{\\pi}} \\int_{0}^{\\infty} \\operatorname{Im} \\frac{i \\omega F(\\omega)}{\\sqrt{\\omega}} J_{-1 / 2}(\\omega t) \\dd \\omega \\\\\n    &=\\sqrt{\\frac{2 t}{\\pi}} \\int_{0}^{\\infty} \\operatorname{Re} \\frac{i \\omega F(\\omega)}{\\sqrt{\\omega}} J_{+1 / 2}(\\omega t) \\dd \\omega\n    \\end{aligned}\n    \\end{equation}\n\\]",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Dipole induction over a layered halfspace in the time domain</span>"
    ]
  },
  {
    "objectID": "timedomain_halfspace.html#the-fast-hankel-transform-fht",
    "href": "timedomain_halfspace.html#the-fast-hankel-transform-fht",
    "title": "13  Dipole induction over a layered halfspace in the time domain",
    "section": "13.3 The Fast Hankel Transform (FHT)",
    "text": "13.3 The Fast Hankel Transform (FHT)\nWe follow the basic ideas of the FHT as introduced above where we have considered dipole induction in the frequency domain over a (layered) half-space.\nAfter a substitution of variables, a convolution integral and later a convolution sum with finitely many terms can be established.\nLikewise, we make the transformations \\[\n\\begin{equation}\n\\begin{aligned}\n    x & = \\log(t / t_0) \\\\\n    y & = -\\log (\\omega t_0), & t_0 &gt; 0 \\\\\n    G(x) & = t g(t) \\\\\n    F(y) & = f(\\omega) \\\\\n    H(x) & = e^x J_\\nu(e^x).\n\\end{aligned}\n\\end{equation}\n\\]\n\n13.3.1 How many frequency solutions are required?\nWhich frequencies have to be calculated and how do they depend on the desired time interval?\nThe following rule applies:\nLet \\(n_c\\) be the number of filter coefficients, \\(n_t\\) the number of logarithmically equidistant time points \\(t_i\\), \\(i=1,\\dots,n_t\\).\nThis gives \\(n_c + n_t - 1\\) necessary evaluations in the frequency domain.\nThe location of the required frequencies can be calculated from \\(t_i\\) if the location of the zero index of the filter coefficients is known.\nLet \\(n_0\\) be the zero index, \\(n_c\\) the filter length and \\(n_t\\) the length of the desired time signal, then the following determination equation is valid for the required angular frequencies \\[\n\\begin{equation}\n\\omega_n = \\frac{1}{t_0} 10^{(1 - n_0 + n_c - n) / 10}, \\qquad n=1,\\dots,n_c + n_t - 1\n\\end{equation}\n\\]\nExample\nLet \\(n_c = 80\\), \\(n_t = 31\\) sampled from the interval \\(t_0 = 10^{-6} \\le t \\le 10^{-3}\\) s with 10 log-equidistant samples per decade.\nThen \\(n_c + n_t - 1 = 110\\).\nLet’s compute the \\(\\omega_n\\).\n\n\nShow the code\nnt = 31\nt = np.logspace(-6, -3, nt, endpoint=True)\nt0 = t[0]\nnc = 80\nnc0 = 40\nncnt = nc + nt - 1\nomega = np.zeros(ncnt, dtype=np.float64)\nomega = np.array([10**(0.1 * (nc - nc0 - i)) / t0 for i in range(0, ncnt)])\n\n\nThe required 110 frequencies \\(f_n = \\omega_n / (2 \\pi)\\) are located between 0.02 Hz and 1.592 GHz.",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Dipole induction over a layered halfspace in the time domain</span>"
    ]
  },
  {
    "objectID": "timedomain_halfspace.html#numerical-experiments",
    "href": "timedomain_halfspace.html#numerical-experiments",
    "title": "13  Dipole induction over a layered halfspace in the time domain",
    "section": "13.4 Numerical experiments",
    "text": "13.4 Numerical experiments\n\n\nShow the code\ndef gethankelfcsin():\n    fc = np.array([\n        +2.595262360000e-07, +3.665448430000e-07, +5.178307950000e-07, +7.313406220000e-07,\n        +1.033228050000e-06, +1.459185000000e-06, +2.061610650000e-06, +2.911377930000e-06,\n        +4.113578630000e-06, +5.808764200000e-06, +8.207980750000e-06, +1.158950830000e-05,\n        +1.637785600000e-05, +2.312284590000e-05, +3.268006490000e-05, +4.613293340000e-05,\n        +6.521010850000e-05, +9.203905750000e-05, +1.301229350000e-04, +1.836204310000e-04,\n        +2.596566260000e-04, +3.663119820000e-04, +5.181411840000e-04, +7.307173400000e-04,\n        +1.033921840000e-03, +1.457427140000e-03, +2.062923020000e-03, +2.905999110000e-03,\n        +4.114719020000e-03, +5.790427630000e-03, +8.200047220000e-03, +1.151929300000e-02,\n        +1.630391330000e-02, +2.282577570000e-02, +3.222492220000e-02, +4.478643280000e-02,\n        +6.273296250000e-02, +8.570591000000e-02, +1.174183140000e-01, +1.536326550000e-01,\n        +1.977179640000e-01, +2.288498490000e-01, +2.403110380000e-01, +1.654092200000e-01,\n        +2.847014760000e-03, -2.880160570000e-01, -3.690974060000e-01, -2.501075140000e-02,\n        +5.718112560000e-01, -3.922615720000e-01, +7.632800440000e-02, +5.162339940000e-02,\n        -6.480120820000e-02, +4.890471410000e-02, -3.269363310000e-02, +2.105398420000e-02,\n        -1.338625490000e-02, +8.471246950000e-03, -5.351239720000e-03, +3.377966510000e-03,\n        -2.131744660000e-03, +1.345138330000e-03, -8.487496120000e-04, +5.355310060000e-04,\n        -3.378987800000e-04, +2.132001090000e-04, -1.345202730000e-04, +8.487657870000e-05,\n        -5.355350690000e-05, +3.378998010000e-05, -2.132003650000e-05, +1.345203370000e-05,\n        -8.487659490000e-06, +5.355351100000e-06, -3.378998110000e-06, +2.132003680000e-06,\n        -1.345203380000e-06, +8.487659510000e-07, -5.355351100000e-07, +3.378998110000e-07\n    ])\n    nc = 80\n    nc0 = 40\n    return fc, nc, nc0\n\n\nWe plot of the filter coefficients for \\(J_{+1/2}(\\omega t)\\), i.e., the sine transform:\n\n\nShow the code\nfc, nc, nc0 = gethankelfcsin()\nfig, ax = plt.subplots(1, 1, figsize=(6,4))\nax.plot([nc0 - i for i in range(0, nc)], fc)\nax.set_xlabel('index of coefficients')\nax.grid(True)\n\n\n\n\n\n\n\n\n\nIn the following we will implement a function for the computation of the step response of a layered halfspace.\nTo this end, we provide two analytical solutions for the dipole induction in a uniform halfspace in the frequency domain. More precisely,\n\nBz_analytical() provides all required frequency domain solutions to be used in the sine transform,\ndBzdt_halfspace() provides an analytical reference solution for the impulse response of a uniform halfspace.\n\n\n\nShow the code\ndef Bz_analytical(r, omega, sigma):\n    μ = np.pi * 4e-7\n    k = np.sqrt(-1j * omega * μ * sigma)\n    B = 9 - (9 + 9 * 1j * k * r - 4 * k**2 * r**2 - 1j * k**3 * r**3) * np.exp(-1j * k * r)\n    B = B * μ / (2 * np.pi * k**2 * r**5)\n    return B\n\nfrom scipy.special import erf\n\ndef dBzdt_halfspace(t, r, sigma, m=1.0):\n    nt = len(t)\n    hzp = np.zeros(nt)\n    mu0 = np.pi * 4e-7\n    for i in range(nt):\n        theta = np.sqrt(mu0 * sigma / (4 * t[i]))\n        hzp[i] = -m / (2 * np.pi * sigma * r**5) * (\n            9 * erf(theta * r) -\n            2 * theta * r / np.sqrt(np.pi) * (\n                9 +\n                6 * theta**2 * r**2 +\n                4 * theta**4 * r**4\n            ) *\n            np.exp(-theta**2 * r**2)\n        )\n    return hzp\n\n\nWe check our implemention and set\n\n\\(\\sigma=0.01\\) S/m,\n\\(r=100\\) m,\n\\(z=h=0\\) m,\ntime interval as defined above.\n\n\n\n\n\n\n\nNote\n\n\n\nNote that the call of Bz_analytical in the code below may be replaced by a call to any appropriate function which provides the frequency domain field components of any dipole type and orientation.\n\n\n\n\nShow the code\nsigma = 0.01\nr = 100.0\nBz_f = [Bz_analytical(r, w, sigma) for w in omega]\n\ndBzdt = convolve(fc, \\\n    np.real(1j * omega * Bz_f / np.sqrt(omega))\n    ) * np.sqrt(2 / np.pi / t)\ndBzdt_ana = dBzdt_halfspace(t, r, sigma)\n\n\nPlot of the results\n\n\nShow the code\nfig, ax = plt.subplots(1, 1, figsize=(6,4))\n\nax.loglog(t, np.abs(dBzdt), marker='o', label='FHT')\nax.loglog(t, np.abs(dBzdt_ana), label='analytical')\nax.legend()\nax.set_label('t in s')\nax.set_ylabel(r'$db_z(t)/dt$ in V/$m^2$')\nax.set_title('Impulse response')\nax.grid(True)\n\n\n\n\n\n\n\n\n\nBy visual inspection, there is no substantial problem in our implementation.\nThe relative numerical error can be evaluated by an appropriate error norm, i.e., \\[\n\\delta = \\frac{\\left \\| \\dv{}{t}b_z^{analytical}(t) - \\dv{}{t}b_z^{FHT}(t) \\right \\|_2}{{\\left \\| \\dv{}{t}b_z^{analytical}(t) \\right \\|_2}}\n\\] which evaluates for our experiment to 9.61e-08.",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Dipole induction over a layered halfspace in the time domain</span>"
    ]
  },
  {
    "objectID": "timedomain_halfspace.html#example-using-empymod",
    "href": "timedomain_halfspace.html#example-using-empymod",
    "title": "13  Dipole induction over a layered halfspace in the time domain",
    "section": "13.5 Example using empymod",
    "text": "13.5 Example using empymod\nWith empymod we can model any type of dipole embedded in a layered halfspace and evaluate fields both in frequency and time domain.\nWe consider the example introduced above and provide the fields with empymod.\n\n\nShow the code\nimport empymod\ntime = np.logspace(-6, -3, 31)\nmu_0 = np.pi * 4e-7\nsrc = [0, 0, 0, 0, 90]\nrec = [100, 0, 0.1, 0, 90]\ndepth = 0\nres = [2e14, 100]\neperm = [0, 0]\ninp = {\n        \"src\": src,\n        \"rec\": rec,\n        \"depth\": depth,\n        \"res\": res,\n        \"freqtime\": time,\n        \"verb\": 1,\n        \"xdirect\": True,\n        \"epermH\": eperm,\n}\n\ndbz_num = empymod.loop(signal=0, **inp) * mu_0\nfig, ax = plt.subplots(1, 1, figsize=(6,4))\n\nax.loglog(time, np.abs(dbz_num), marker='o', label='empymod')\nax.legend()\nax.set_label('t in s')\nax.set_ylabel(r'$db_z(t)/dt$ in V/$m^2$')\nax.set_title('Impulse response')\nax.grid(True)",
    "crumbs": [
      "Dipole induction",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Dipole induction over a layered halfspace in the time domain</span>"
    ]
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "14  Summary",
    "section": "",
    "text": "WIP",
    "crumbs": [
      "Summary",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Summary</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Abramowitz, M. & Stegun, I.A., 1972. Handbook of mathematical\nfunctions with formulas, graphs, and mathematical tables, Tenth.,\nDover Publications.\n\n\nAnderson, W.L., 1982. Fast Hankel transforms using related\nand lagged convolutions. ACM Transactions on Mathematical Software\n(TOMS), 8, 344–368, ACM.\n\n\nChristensen, N.B., 1990. Optimized fast Hankel transform\nfilters. Geophysical Prospecting, 38, 545–568.\ndoi:10.1111/j.1365-2478.1990.tb01861.x\n\n\nGhosh, D.P., 1971. The application of linear filter theory to the direct\ninterpretation of geoelectrical resistivity sounding measurements.\nGeophysical Prospecting, 19, 192–217. doi:10.1111/j.1365-2478.1971.tb00593.x\n\n\nJohansen, H.K. & Sørensen, K., 1979. Fast hankel transforms.\nGeophysical Prospecting, 27, 876–901. doi:10.1111/j.1365-2478.1979.tb01005.x\n\n\nWard, S.H. & Hohmann, G.W., 1988. Electromagnetic theory for\ngeophysical applications. Electromagnetic methods in applied\ngeophysics, Vol. 1, pp. 131–311.",
    "crumbs": [
      "References"
    ]
  }
]